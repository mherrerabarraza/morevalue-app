{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","actions/employee.js","helpers/fileUpload.js","actions/exam.js","actions/user.js","components/ui/Navbar.js","components/ui/examenes/ExamenScreen.js","components/ui/DashBoardScreen.js","actions/ui.js","components/ui/modal/CalendarModal.js","components/employee/EditEmployeeScreen.js","components/employee/CreateEmployeeScreen.js","actions/empresa.actions.js","components/empresa/CreateEmpresaScreen.js","components/empresa/EditEmpresaScreen.js","components/main/MvcAppScreen.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","reducers/userReducer.js","reducers/examReducer.js","reducers/employeeReducer.js","reducers/empresaReducer.js","MvcApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","types","login","logout","loadUserData","userLogout","getTrabajadoresIdEmpresa","trabajadoresLogout","crearTrabajadorEmpresa","trabajadorExist","getExamenesPorVencerPorIdEmpresa","getExamenesPorVencer","crearNuevoExamen","getExamenUrl","examenesLogout","uiOpenModal","uiCloseModal","crearNuevaEmpresa","getTodasLasEmpresas","uid","displayName","type","payload","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","email","password","formValues","className","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","then","user","catch","error","console","log","startLoginEmailPassword","id","placeholder","required","autoFocus","onChange","AuthRouter","exact","path","component","to","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","startGetTrabajadoresIdEmpresa","idEmpresa","a","trabajadores","collection","where","get","snapTrabajadores","forEach","trabajador","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","startGetExamenesPorVencerPorIdEmpresa","someDate","Date","setDate","getDate","newDate","getTime","examenes","snap","examen","uploadingExamen","fileUrl","Navbar","nombre","useSelector","state","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","onClick","signOut","ExamenScreen","idTrabajador","fechaCaducidad","url","nombreExamen","idUsuario","toLocaleDateString","href","rel","add","fechaDescarga","archivoDescargado","merge","err","startLogDescargas","DashBoardScreen","exam","style","cursor","color","scope","map","customStyles","content","top","left","right","bottom","marginRight","transform","now","moment","minutes","seconds","Modal","setAppElement","CalendarModal","modalOpen","ui","toDate","dateStart","setDateStart","titleValid","setTitleValid","setFormValues","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","trim","length","autoComplete","display","examenFile","files","document","querySelector","click","marginTop","fechaCreacion","Swal","fire","EditEmployeeScreen","exist","setExist","datosTrabajador","setDatosTrabajador","datosExamenes","setDatosExamenes","trab","buscar","tra","filter","employee","ex","marginBottom","CreateEmployeeScreen","idEmpleado","doc","set","startCrearTrabajadorEmpresa","startGetTodasLasEmpresas","empresas","empresasRef","empresa","CreateEmpresaScreen","empr","event","startCrearNuevaEmpresa","EditEmpresaScreen","datosEmpresa","setDatosEmpresa","editable","setEditable","emp","readOnly","MvcAppScreen","isAdmin","useEffect","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","docRef","exists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","getExamsIdTrabajador","creado","store","createStore","applyMiddleware","thunk","MvcApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3b67edac.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDUGKdITlmFd_OsNHsf_vRa1_9i5Y_m0NQ\",\n    authDomain: \"morevalue-f6170.firebaseapp.com\",\n    projectId: \"morevalue-f6170\",\n    storageBucket: \"morevalue-f6170.appspot.com\",\n    messagingSenderId: \"738327980225\",\n    appId: \"1:738327980225:web:f0e12eae6aca8b8f4fcc40\"\n  };\n  \nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\n\nexport {\n    db,\n    firebase\n}","export const types = {\n  login: \"[Auth] Login\",\n  logout: \"[Auth] Logout\",\n\n  //user types\n  //obtiene los datos del usuario de la BD\n  loadUserData: \"[User] Load Logged User Data\",\n  //Quita el usuario del state\n  userLogout: \"[User] Logout\",\n\n  //Trabajadores\n  getTrabajadoresIdEmpresa: \"[Emp] Get Trabajadores ID Empresa\",\n  trabajadoresLogout: \"[Emp] Limpiar Trabajadores\",\n  crearTrabajadorEmpresa: \"[Emp] Trabajador Creado\",\n  trabajadorExist: \"[Emp] Trabajador ya está en DB\",\n\n  //examenes\n  getExamenesPorVencerPorIdEmpresa: \"[Exam] Get Examenes por Vencer ID Empresa\",\n  getExamenesPorVencer: \"[Exam] Get Examenes por Vencer\",\n  crearNuevoExamen: \"[Exam] Crear Nuevo Examen ID Trabajador\",\n  getExamenUrl: \"[Exam] Get Examen URL\",\n  examenesLogout: \"[Exam] Limpiar Examenes\",\n\n  //UI\n  uiOpenModal: \"[UI] Open Modal\",\n  uiCloseModal: \"[UI] Close Modal\",\n\n  //empresas\n  crearNuevaEmpresa: \"[EMP] Crear Nueva Empresa\",\n  getTodasLasEmpresas: \"[EMP] Get Todas Las Empresa\",\n};\n","// import Swal from \"sweetalert2\";\n\nimport { firebase, db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, \"\"));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName,\n  },\n});\n\n//TODO: descomponer funcion\nexport const startRegisterWithEmailPasswordName = (\n  email,\n  password,\n  name,\n  rol,\n  empresa\n) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n\n        const userDatabase = {\n          isAdmin: rol === \"true\" ? true : false,\n          idEmpresa: empresa,\n          nombre: name,\n        };\n        //autologin:  después de crear, no se necesita acá\n        //dispatch(login(user.uid, user.displayName));\n        /**\n         * TODO: HACER DISPATCH QUE CREE EL USER EN LA BD\n         */\n\n        const doc = await db\n          .collection(\"usuarios\")\n          .doc(user.uid)\n          .set(userDatabase);\n        console.log(doc);\n      })\n      .catch((e) => {\n        console.log(e);\n        // Swal.fire(\"Error\", e.message, \"error\");\n      });\n  };\n};\n\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    //borra datos de auth en state\n    dispatch(logout());\n    //borra datos de user en state\n  };\n};\n\nexport const logout = () => ({\n  type: types.logout,\n});\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { startLoginEmailPassword } from \"../../actions/auth\";\nimport { useForm } from \"../../hooks/useForm\";\nimport \"./signin.css\";\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange] = useForm({\n    email: \"jenny@morevaluecompany.com\",\n    password: \"12341234\",\n  });\n\n  const { email, password } = formValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLoginEmailPassword(email, password));\n  };\n  return (\n    <div className=\"text-center\">\n      <main className=\"form-signin\">\n        <form onSubmit={handleLogin}>\n          <h1 className=\"h3 mb-3 fw-normal\">Ingreso Empresas</h1>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            placeholder=\"Correo Electrónico\"\n            required\n            autoFocus\n            onChange={handleInputChange}\n            value={email}\n          />\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            placeholder=\"Contraseña\"\n            required\n            onChange={handleInputChange}\n            value={password}\n          />\n          <div className=\"checkbox mb-3\"></div>\n          <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n            Ingresar\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startGetTrabajadoresIdEmpresa = (idEmpresa) => {\n  return async (dispatch) => {\n    const trabajadores = [];\n    db.collection(\"trabajadores\")\n      .where(\"idEmpresa\", \"==\", idEmpresa)\n      .get()\n      .then((snapTrabajadores) => {\n        snapTrabajadores.forEach((trabajador) => {\n          trabajadores.push({\n            id: trabajador.id,\n            ...trabajador.data(),\n          });\n        });\n        dispatch(getTrabajadoresIdEmpresa(trabajadores));\n      });\n  };\n};\n\nexport const getTrabajadoresIdEmpresa = (trabajadores) => ({\n  type: types.getTrabajadoresIdEmpresa,\n  payload: trabajadores,\n});\n\nexport const trabajadoresLogout = () => ({\n  type: types.trabajadoresLogout,\n});\n\nexport const startCrearTrabajadorEmpresa = (idEmpresa, idEmpleado, nombre) => {\n  return async (dispatch) => {\n    //crea usuario\n    db.collection(\"trabajadores\").doc(idEmpleado).set({\n      idEmpresa: idEmpresa,\n      nombre: nombre,\n    });\n    dispatch(crearTrabajadorEmpresa());\n    //actualizar la lista de usuarios de la empresa\n    dispatch(startGetTrabajadoresIdEmpresa(idEmpresa));\n  };\n};\n\nexport const crearTrabajadorEmpresa = () => ({\n  type: types.crearTrabajadorEmpresa,\n  payload: true,\n});\nexport const trabajadorExist = () => ({\n  type: types.crearTrabajadorEmpresa,\n  payload: false,\n});\n","export const fileUpload = async (file) => {\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/dgoxdpdrc/upload\";\n  const formData = new FormData();\n  formData.append(\"upload_preset\", \"morevalue\");\n  formData.append(\"folder\", \"pdf\");\n  formData.append(\"file\", file);\n  try {\n    const resp = await fetch(cloudUrl, {\n      method: \"POST\",\n      body: formData,\n    });\n    if (resp.ok) {\n      const cloudResp = await resp.json();\n      return cloudResp.secure_url;\n    } else {\n      throw await resp.json();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { types } from \"../types/types\";\n\nexport const startGetExamenesPorVencerPorIdEmpresa = (idEmpresa) => {\n  var someDate = new Date();\n  var numberOfDaysToAdd = 60;\n  someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n  const newDate = someDate.getTime();\n  const examenes = [];\n  return async (dispatch) => {\n    await db\n      .collection(\"examenes\")\n      .where(\"idEmpresa\", \"==\", idEmpresa)\n      //TODO: Calcular fecha a 60 días\n      .where(\"fechaCaducidad\", \"<=\", newDate)\n      .get()\n      .then((snap) => {\n        snap.forEach((examen) =>\n          examenes.push({\n            id: examen.id,\n            ...examen.data(),\n          })\n        );\n      });\n    dispatch(getExamenesPorVencerPorIdEmpresa(examenes));\n  };\n};\n\nexport const getExamenesPorVencerPorIdEmpresa = (examenes) => ({\n  type: types.getExamenesPorVencerPorIdEmpresa,\n  payload: examenes,\n});\n\nexport const startCrearNuevoExamen = (examen) => {\n  return async (dispatch) => {\n    const examenRef = db.collection(\"examenes\");\n    //agredar Datos\n    examenRef\n      .add(examen)\n      .then((examen) => {\n        console.log(\"Agregado: \", examen.id);\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n    dispatch(crearNuevoExamen(examen));\n  };\n};\n\nexport const startUploadingExamen = (examenFile) => {\n  return async (dispatch) => {\n    const fileUrl = await fileUpload(examenFile);\n    dispatch(uploadingExamen(fileUrl));\n  };\n};\n\nexport const uploadingExamen = (fileUrl) => ({\n  type: types.getExamenUrl,\n  payload: fileUrl,\n});\n\nexport const crearNuevoExamen = (examen) => ({\n  type: types.crearNuevoExamen,\n  payload: examen,\n});\n\nexport const examenesLogout = () => ({\n  type: types.examenesLogout,\n});\n\nexport const startLogDescargas = (\n  idUsuario,\n  idEmpresa,\n  idTrabajador,\n  nombreExamen,\n  url\n) => {\n  return async () => {\n    await db\n      .collection(`registro/${idUsuario}/log`)\n      .add(\n        {\n          fechaDescarga: new Date().toLocaleDateString(),\n          id: idUsuario,\n          idEmpresa: idEmpresa,\n          idTrabajador: idTrabajador,\n          archivoDescargado: nombreExamen,\n          url: url,\n        },\n        { merge: true }\n      )\n      .then((ok) => {\n        console.log(\"Registro Ingresado: \", ok);\n      })\n      .catch((err) => {\n        console.log(\"Algo salió mal: \", err);\n      });\n  };\n};\n","// import Swal from \"sweetalert2\";\n\nimport { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startLoadUserData = (uid) => {\n  return async (dispatch) => {\n    const docRef = db.collection(\"usuarios\").doc(uid);\n    await docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          // console.log(doc.data());\n          const user = {\n            ...doc.data(),\n          };\n          dispatch(loadUserData(user));\n        } else {\n          console.log(\"no existe\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n//carga los datos del usuario en el store\nexport const loadUserData = (user) => ({\n  type: types.loadUserData,\n  payload: user,\n});\n//limpia el store\nexport const userLogout = () => ({\n  type: types.userLogout,\n});\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\nimport { trabajadoresLogout } from \"../../actions/employee\";\nimport { examenesLogout } from \"../../actions/exam\";\nimport { userLogout } from \"../../actions/user\";\n\nexport const Navbar = () => {\n  //obtiene el nombre\n  const { nombre } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n    dispatch(userLogout());\n    dispatch(trabajadoresLogout());\n    dispatch(examenesLogout());\n  };\n\n  return (\n    <div>\n      <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n        <div className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3 nav-link\">\n          {nombre}\n        </div>\n        <button\n          className=\"navbar-toggler position-absolute d-md-none collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#sidebarMenu\"\n          aria-controls=\"sidebarMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\">\n          </span>\n        </button>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap\">\n            <button className=\"btn nav-link\" onClick={handleLogout}>\n              Salir\n            </button>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogDescargas } from \"../../../actions/exam\";\nexport const ExamenScreen = ({ id, ...examen }) => {\n  const dispatch = useDispatch();\n  const { idEmpresa, idTrabajador, fechaCaducidad, url, nombreExamen } = examen;\n  const { nombre, idUsuario } = useSelector((state) => state.user);\n  const handleSearchEmployee = () => {\n    console.log(\"buscar employee\");\n    //TODO: registrar envento descarga\n    //dispatch(startRegistroDescarga())\n    //enviar a la página de busqueda de usuario\n  };\n\n  const handleDownload = () => {\n    console.log(\n      \"archivo descargado: \" + nombreExamen + \"descargado por: \" + nombre\n    );\n    dispatch(\n      startLogDescargas(idUsuario, idEmpresa, idTrabajador, nombreExamen, url)\n    );\n  };\n\n  return (\n    <tr>\n      <td>{idEmpresa}</td>\n      <td onClick={handleSearchEmployee}>{idTrabajador}</td>\n      <td>{new Date(fechaCaducidad).toLocaleDateString()}</td>\n      <td>{nombreExamen}</td>\n\n      <td>\n        <a\n          className=\"data\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          onClick={handleDownload}\n        >\n          descargar\n        </a>\n      </td>\n    </tr>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startGetExamenesPorVencerPorIdEmpresa } from \"../../actions/exam\";\nimport { ExamenScreen } from \"../ui/examenes/ExamenScreen\";\nexport const DashBoardScreen = () => {\n  const dispatch = useDispatch();\n  const { idEmpresa } = useSelector((state) => state.user);\n  const { examenes } = useSelector((state) => state.exam);\n  return (\n    <div>\n      <h1>Resumen:</h1>\n      <hr />\n      <h2>\n        Examenes por Vencer{\" \"}\n        <i\n          className=\"fas fa-sync fa-xs\"\n          style={{ cursor: \"pointer\", color: \"green\" }}\n          onClick={() => {\n            dispatch(startGetExamenesPorVencerPorIdEmpresa(idEmpresa));\n          }}\n        ></i>\n      </h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Rut Empresa</th>\n            <th scope=\"col\">Rut Trabajador</th>\n            <th scope=\"col\">Fecha Caducidad</th>\n            <th scope=\"col\">Nombre Examen</th>\n            <th scope=\"col\">Examen</th>\n          </tr>\n        </thead>\n        <tbody>\n          {examenes ? (\n            examenes.map((examen) => (\n              <ExamenScreen key={examen.id} {...examen} />\n            ))\n          ) : (\n            <>Loading...</>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n  payload: true,\n});\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n  payload: false,\n});\n\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport Modal from \"react-modal\";\nimport \"./modal.css\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../../actions/ui\";\nimport { startCrearNuevoExamen } from \"../../../actions/exam\";\nimport { startUploadingExamen } from \"../../../actions/exam\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst now = moment().minutes(0).seconds(0);\nModal.setAppElement(\"#root\");\n\nexport const CalendarModal = ({ idTrabajador, idEmpresa }) => {\n  const dispatch = useDispatch();\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { url } = useSelector((state) => state.exam);\n  const [dateStart, setDateStart] = useState(now.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n  const [formValues, setFormValues] = useState({\n    nombreExamen: \"\",\n    fechaCaducidad: now.toDate(),\n  });\n  const { nombreExamen } = formValues;\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e);\n    setFormValues({\n      ...formValues,\n      fechaCaducidad: e,\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    if (nombreExamen.trim().length < 2) {\n      return setTitleValid(false);\n    }\n    setTitleValid(true);\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    // setIsOpen(false);\n  };\n\n  const handleNewExamen = () => {\n    dispatch(\n      startCrearNuevoExamen({\n        idTrabajador: idTrabajador,\n        idEmpresa: idEmpresa,\n        nombreExamen: nombreExamen,\n        fechaCaducidad: new Date(formValues.fechaCaducidad).getTime(),\n        fechaCreacion: new Date().getTime(),\n        url: url,\n      })\n    );\n    Swal.fire(\"Examen Creado con Éxito\", \"\", \"success\");\n    dispatch(uiCloseModal());\n    \n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUploadingExamen(file));\n    }\n  };\n\n  const handleArchivoExamenchange = () => {\n    document.querySelector(\"#fileSelector\").click();\n  };\n  //   closeModal();\n  return (\n    <Modal\n      isOpen={modalOpen}\n      //   onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n      closeTimeoutMS={500}\n      \n    >\n      <h1> Nuevo examen </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && \"is-invalid\"}`}\n            placeholder=\"Nombre del examen\"\n            name=\"nombreExamen\"\n            autoComplete=\"off\"\n            value={nombreExamen}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Fecha Vencimiento</label>\n          <DateTimePicker\n            name=\"vencimiento\"\n            className=\"form-control\"\n            value={dateStart}\n            onChange={handleStartDateChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Adjuntar Archivo</label>\n          <br />\n          <input\n            id=\"fileSelector\"\n            type=\"file\"\n            name=\"file\"\n            style={{ display: \"none\" }}\n            onChange={handleFileChange}\n            required\n          />\n          <button\n            className=\"btn btn-success\"\n            onClick={handleArchivoExamenchange}\n          >\n            Archivo Examen\n          </button>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n          style={{\n            marginTop: \"10px\",\n            display: `${url ? \"\" : \"none\"}`,\n          }}\n          onClick={handleNewExamen}\n        >\n          <i className=\"far fa-save\" style={{ cursor: \"pointer\" }}></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"../../hooks/useForm\";\nimport Swal from \"sweetalert2\";\nimport { CalendarModal } from \"../ui/modal/CalendarModal\";\nimport { uiOpenModal } from \"../../actions/ui\";\nimport { ExamenScreen } from \"../ui/examenes/ExamenScreen\";\n\nexport const EditEmployeeScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange, reset] = useForm({\n    idTrabajador: \"\",\n  });\n\n  const { idTrabajador } = formValues;\n  const [exist, setExist] = useState(false);\n  const [datosTrabajador, setDatosTrabajador] = useState([]);\n  const [datosExamenes, setDatosExamenes] = useState([]);\n  const { trabajadores } = useSelector((state) => state.trab);\n  const { examenes } = useSelector((state) => state.exam);\n  const { idEmpresa } = useSelector((state) => state.user);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    buscar(idTrabajador);\n  };\n  const buscar = (idTrabajador) => {\n    const tra = trabajadores.filter((employee) => employee.id === idTrabajador);\n    setDatosTrabajador(tra);\n    const ex = examenes.filter(\n      (examen) => examen.idTrabajador === idTrabajador\n    );\n    setDatosExamenes(ex);\n\n    if (tra.length > 0) {\n      // setDatosTrabajador(tra);\n      // setDatosExamenes(ex);\n      setExist(true);\n    } else {\n      Swal.fire(\"Trabajador No Encontrado\", \"\", \"warning\");\n      reset();\n    }\n  };\n  const handleModal = () => {\n    dispatch(uiOpenModal());\n  };\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <h1 className=\"h3 mb-3 fw-normal\">Buscar Trabajador</h1>\n        <hr />\n        <input\n          type=\"text\"\n          id=\"idTrabajador\"\n          name=\"idTrabajador\"\n          className=\"form-control\"\n          placeholder=\"Ingrese rut, ej: 123456789\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={idTrabajador}\n        />\n        <button\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n          type=\"submit\"\n        >\n          Buscar\n        </button>\n      </form>\n\n      {exist ? (\n        <div>\n          <h3>Datos del Trabajador</h3>\n          <div className=\"datosTrabajador\">\n            {datosTrabajador ? (\n              <div>Nombre: {datosTrabajador[0].nombre}</div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <div>\n            <h3>\n              Examenes{\" \"}\n              <span style={{ color: \"green\", cursor: \"pointer\" }}>\n                <i className=\"fas fa-plus-circle\" onClick={handleModal}>\n                  {\" \"}\n                </i>\n              </span>\n            </h3>\n          </div>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Rut Empresa</th>\n                <th scope=\"col\">Rut Trabajador</th>\n                <th scope=\"col\">Fecha Caducidad</th>\n                <th scope=\"col\">Nombre Examen</th>\n                <th scope=\"col\">Examen</th>\n              </tr>\n            </thead>\n            <tbody>\n              {datosExamenes ? (\n                datosExamenes.map((examen) => (\n                  <ExamenScreen key={examen.id} {...examen} />\n                ))\n              ) : (\n                <>Loading...</>\n              )}\n            </tbody>\n          </table>\n          <CalendarModal idTrabajador={idTrabajador} idEmpresa={idEmpresa} />\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startCrearTrabajadorEmpresa } from \"../../actions/employee\";\nimport { useForm } from \"../../hooks/useForm\";\n\nexport const CreateEmployeeScreen = () => {\n  const { idEmpresa } = useSelector((state) => state.user);\n  const { trabajadores } = useSelector((state) => state.trab);\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpleado: \"\",\n    nombre: \"\",\n    idEmpresa: idEmpresa,\n  });\n\n  const { idEmpleado, nombre } = formValues;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const tra = trabajadores.filter((employee) => employee.id === idEmpleado);\n    if (tra.length > 0) {\n      Swal.fire(\"Ya existe este trabajador\",'', \"error\");\n      reset();\n    } else {\n      dispatch(startCrearTrabajadorEmpresa(idEmpresa, idEmpleado, nombre));\n      Swal.fire(\"Trabajador Creado con éxito\", \"\", \"success\");\n      reset();\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"h3 mb-3 fw-normal\">Nuevo Trabajador</h1>\n        <hr />\n        <input\n          type=\"text\"\n          id=\"idEmpleado\"\n          name=\"idEmpleado\"\n          className=\"form-control\"\n          placeholder=\"Ingrese Rut sin puntos, ni guión\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={idEmpleado}\n        />\n        <input\n          type=\"text\"\n          id=\"nombre\"\n          name=\"nombre\"\n          className=\"form-control\"\n          placeholder=\"Nombre\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={nombre}\n        />\n        <button\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\" }}\n          type=\"submit\"\n        >\n          Crear Trabajador\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startGetTodasLasEmpresas = () => {\n  return async (dispatch) => {\n    const empresas = [];\n    db.collection(\"empresas\")\n      .get()\n      .then((empresasRef) => {\n        empresasRef.forEach((empresa) => {\n          empresas.push({\n            idEmpresa: empresa.id,\n            ...empresa.data(),\n          });\n        });\n        dispatch(getTodasLasEmpresas(empresas));\n      });\n  };\n};\n\nexport const getTodasLasEmpresas = (empresas) => ({\n  type: types.getTodasLasEmpresas,\n  payload: empresas,\n});\n\nexport const startCrearNuevaEmpresa = (idEmpresa, empresa) => {\n  return async (dispatch) => {\n    await db.collection(\"empresas\").doc(idEmpresa).set(empresa);\n    // dispatch(crearNuevaEmpresa(empresa));\n    dispatch(startGetTodasLasEmpresas());\n  };\n};\n\nexport const startUpdateEmpresa = (idEmpresa, ...data) => {\n  const { nombre } = data;\n  return async (dispatch) => {\n    const transac = db.collection('empresas').doc(idEmpresa);\n    db.runTransaction.get(transac).then(sfDoc => {\n      if (!sfDoc.exits) {\n        throw 'No existe la empresa'\n      }\n      transac.update(transac, {\n        nombre: nombre\n      }).then(console.log('Actualizado')).catch(err => console.log('Falló ', err))\n    })\n  }\n}\n\n//TODO: updateEmpresa\n\n// export const crearNuevaEmpresa = (empresa) => ({\n//   type: types.crearNuevaEmpresa,\n//   payload: empresa,\n// });\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startCrearNuevaEmpresa } from \"../../actions/empresa.actions\";\nimport { useForm } from \"../../hooks/useForm\";\n\nexport const CreateEmpresaScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpresa: \"\",\n    nombre: \"\",\n  });\n  const { empresas } = useSelector((state) => state.empr);\n  const { idEmpresa, nombre } = formValues;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const emp = empresas.filter((empresa) => empresa.idEmpresa === idEmpresa);\n    if (emp.length > 0) {\n      Swal.fire(\"Ya existe esta Empresa\", \"\", \"error\");\n      reset();\n    } else {\n      dispatch(\n        startCrearNuevaEmpresa(idEmpresa, {\n          idEmpresa: idEmpresa,\n          nombre: nombre,\n        })\n      );\n      Swal.fire(\"Empresa Creada con éxito\", \"\", \"success\");\n      reset();\n    }\n  };\n\n  return (\n    <div>\n      <h3>Crear Empresa</h3>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          id=\"idEmpresa\"\n          name=\"idEmpresa\"\n          type=\"text\"\n          value={idEmpresa}\n          onChange={handleInputChange}\n          className=\"form-control\"\n          placeholder=\"Rut Empresa sin puntos ni guión\"\n          required\n        />\n        <input\n          id=\"nombre\"\n          name=\"nombre\"\n          type=\"text\"\n          value={nombre}\n          onChange={handleInputChange}\n          className=\"form-control\"\n          placeholder=\"Nombre Empresa\"\n          required\n        />\n        <button\n          type=\"Submit\"\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n        >\n          crear\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { useForm } from \"../../hooks/useForm\";\n\nexport const EditEmpresaScreen = () => {\n  const { empresas } = useSelector((state) => state.empr);\n  const [datosEmpresa, setDatosEmpresa] = useState();\n  const [exist, setExist] = useState(false);\n  const [editable, setEditable] = useState(false);\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpresa: \"\",\n  });\n  const { idEmpresa, nombre } = formValues;\n\n  const handleSearch = () => {\n    buscar(idEmpresa);\n  };\n  const buscar = (idEmpresa) => {\n    const emp = empresas.filter((empresa) => empresa.idEmpresa === idEmpresa);\n    if (emp.length > 0) {\n      // setDatosTrabajador(tra);\n      // setDatosExamenes(ex);\n      setDatosEmpresa(emp);\n      setExist(true);\n      setEditable(false);\n    } else {\n      Swal.fire(\"Empresa No Encontrada\", \"\", \"warning\");\n      setExist(false);\n      reset();\n    }\n  };\n\n  const handleEdit = () => {\n    setEditable(true);\n  };\n\n  const handleUpdate = (event) => {\n    event.preventDefault();\n    if (nombre.length <= 1) {\n      Swal.fire(\"El nombre es muy corto\", \"\", \"info\");\n      return;\n    }\n    console.log(\"hola\");\n    //TODO: realizar cambios\n  };\n\n  return (\n    <div>\n      <input\n        name=\"idEmpresa\"\n        id=\"idEmpresa\"\n        value={idEmpresa}\n        onChange={handleInputChange}\n        className=\"form-control\"\n        required\n        placeholder=\"Ingrese Rut sin puntos ni guión\"\n      />\n      <button\n        className=\"w-100 btn btn-lg btn-primary\"\n        style={{ marginTop: \"10px\" }}\n        type=\"submit\"\n        onClick={handleSearch}\n      >\n        Buscar\n      </button>\n\n      {exist ? (\n        <div>\n          <div style={{ marginTop: \"20px\" }}>\n            <h3>\n              <span>\n                Datos de la Empresa{\" \"}\n                <i\n                  className=\"fas fa-edit\"\n                  style={{ color: \"green\", cursor: \"pointer\" }}\n                  onClick={handleEdit}\n                ></i>\n              </span>\n            </h3>\n          </div>\n          <div>\n            <form onSubmit={handleUpdate}>\n              <label>Nombre</label>\n              <input\n                name=\"nombre\"\n                id=\"nombre\"\n                value={nombre}\n                onChange={handleInputChange}\n                className=\"form-control\"\n                readOnly={editable ? false : true}\n                required\n                placeholder={`${datosEmpresa[0].nombre} `}\n              />\n              {editable && (\n                <button\n                  className=\"w-100 btn btn-lg btn-primary\"\n                  style={{ marginTop: \"10px\" }}\n                  type=\"submit\"\n                >\n                  Guardar Cambios\n                </button>\n              )}\n            </form>\n          </div>\n        </div>\n      ) : (\n          <div></div>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Navbar } from \"../ui/Navbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./dashboard.css\";\nimport { DashBoardScreen } from \"../ui/DashBoardScreen\";\nimport { EditEmployeeScreen } from \"../employee/EditEmployeeScreen\";\nimport { startGetExamenesPorVencerPorIdEmpresa } from \"../../actions/exam\";\nimport { startGetTrabajadoresIdEmpresa } from \"../../actions/employee\";\nimport { CreateEmployeeScreen } from \"../employee/CreateEmployeeScreen\";\nimport { CreateEmpresaScreen } from \"../empresa/CreateEmpresaScreen\";\nimport { startGetTodasLasEmpresas } from \"../../actions/empresa.actions\";\nimport { EditEmpresaScreen } from \"../empresa/EditEmpresaScreen\";\n\nexport const MvcAppScreen = () => {\n  const dispatch = useDispatch();\n  const { isAdmin, idEmpresa } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (idEmpresa) {\n      dispatch(startGetExamenesPorVencerPorIdEmpresa(idEmpresa));\n      dispatch(startGetTrabajadoresIdEmpresa(idEmpresa));\n      dispatch(startGetTodasLasEmpresas());\n    }\n  }, [dispatch, idEmpresa]);\n  //aqui deberia hacer el dispatch porque ya se que empresa es\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <nav\n              id=\"sidebarMenu\"\n              className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\"\n            >\n              <div className=\"position-sticky pt-3\">\n                <ul className=\"nav flex-column\">\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/\">\n                      Escritorio\n                    </Link>\n                  </li>\n                  {isAdmin ? (\n                    <>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span>Empresa</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newempresa\">\n                          Nueva Empresa\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editempresa\">\n                          Editar Empresa\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span>Usuario</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newuser\">\n                          Nuevo Usuario\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/edituser\">\n                          Editar Usuario\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span>Trabajadores</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/createemployee\">\n                          Nuevo Trabajador\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editemployee\">\n                          Editar Trabajador\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span>Equipos</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newequipment\">\n                          Nuevo Equipo\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editequipment\">\n                          Editar Equipo\n                        </Link>\n                      </li>\n                    </>\n                  ) : (\n                    <div></div>\n                  )}\n                </ul>\n              </div>\n            </nav>\n          </div>\n          <div>\n            <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n              <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                <Switch>\n                  <Route exact component={DashBoardScreen} path=\"/\" />\n                  <Route\n                    exact\n                    component={EditEmployeeScreen}\n                    path=\"/admin/editemployee\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmployeeScreen}\n                    path=\"/admin/createemployee\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmpresaScreen}\n                    path=\"/admin/newempresa\"\n                  />\n                  <Route\n                    exact\n                    component={EditEmpresaScreen}\n                    path=\"/admin/editempresa\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmpresaScreen}\n                    path=\"/admin/newempresa\"\n                  />\n                </Switch>\n              </div>\n            </main>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { login } from \"../actions/auth\";\nimport { firebase } from \"../firebase/firebase-config\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { PrivateRoute } from \"../routers/PrivateRoute\";\nimport { PublicRoute } from \"../routers/PublicRoute\";\nimport { MvcAppScreen } from \"../components/main/MvcAppScreen\";\nimport { startLoadUserData } from \"../actions/user\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n\n  const [checking, setChecking] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //Mantiene el estado \"state\" de redux respecto a los cambios\n  //que se generan al reacargar la página\n  //está escuchando si se logueo o cambia el login del usuario\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid));\n        //cargar el usuario que se acaba de autenticar\n        dispatch(startLoadUserData(user.uid));\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setChecking(false);\n    });\n  }, [dispatch, setChecking, setIsLoggedIn]);\n\n  if (checking) {\n    return <h1>Cargando...</h1>;\n  }\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            path=\"/auth\"\n            component={AuthRouter}\n            isAuthenticated={isLoggedIn}\n          />\n\n          <PrivateRoute\n            exact\n            isAuthenticated={isLoggedIn}\n            path=\"/\"\n            component={MvcAppScreen}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { authReducer } from \"../reducers/authReducer\";\nimport { employeeReducer } from \"../reducers/employeeReducer\";\nimport { empresaReducer } from \"../reducers/empresaReducer\";\nimport { examReducer } from \"../reducers/examReducer\";\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { userReducer } from \"../reducers/userReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  exam: examReducer,\n  ui: uiReducer,\n  trab: employeeReducer,\n  empr: empresaReducer,\n});\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        //name: action.payload.displayName,\n      };\n\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.loadUserData:\n      return {\n        nombre: action.payload.nombre,\n        idEmpresa: action.payload.idEmpresa,\n        isAdmin: action.payload.isAdmin,\n        idUsuario:action.payload.idUsuario\n      };\n\n    case types.userLogout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const examReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getExamenesPorVencerPorIdEmpresa:\n      return {\n        ...state,\n        examenes: [...action.payload],\n      };\n\n    case types.getExamsIdTrabajador:\n      return {\n        ...state,\n        examenes: [...action.payload],\n      };\n\n    case types.crearNuevoExamen:\n      return {\n        ...state,\n        examen: action.payload,\n      };\n    case types.getExamenUrl:\n      return {\n        ...state,\n        url: action.payload,\n      };\n\n    case types.examenesLogout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { types } from \"../types/types\";\n\nexport const employeeReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getTrabajadoresIdEmpresa:\n      return {\n        ...state,\n        trabajadores: [...action.payload],\n      };\n\n    case types.crearTrabajadorEmpresa:\n      return {\n        ...state,\n        creado: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const empresaReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getTodasLasEmpresas:\n      return {\n        ...state,\n        empresas: action.payload,\n      };\n    // case types.crearNuevaEmpresa:\n    //   console.log(action.payload);\n    //   return {\n    //     ...state,\n    //     ultimaCreada: action.payload,\n    //   };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nexport const MvcApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MvcApp } from \"./MvcApp\";\n\nReactDOM.render(<MvcApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}