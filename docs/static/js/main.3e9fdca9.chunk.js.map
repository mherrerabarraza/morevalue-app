{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","actions/employee.js","helpers/fileUpload.js","actions/exam.js","actions/user.js","components/ui/Navbar.js","actions/permisos.actions.js","components/ui/examenes/ExamenScreen.js","components/ui/permisos/PermisosScreen.js","components/ui/DashBoardScreen.js","actions/ui.js","components/ui/modal/CalendarModal.js","components/employee/EditEmployeeScreen.js","components/ui/drop-down/DropDown.js","components/employee/CreateEmployeeScreen.js","actions/empresa.actions.js","components/empresa/CreateEmpresaScreen.js","components/empresa/EditEmpresaScreen.js","actions/equipos.actions.js","components/equipment/CreateEquipmentScreen.js","components/ui/modal/PermisosModal.js","components/equipment/EditEquipmentScreen.js","components/main/MvcAppScreen.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","reducers/userReducer.js","reducers/examReducer.js","reducers/employeeReducer.js","reducers/empresaReducer.js","reducers/equipmentReducer.js","reducers/permisosReducer.js","MvcApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","types","login","logout","loadUserData","userLogout","getTrabajadoresIdEmpresa","trabajadoresLogout","crearTrabajadorEmpresa","trabajadorExist","getExamenesPorVencerPorIdEmpresa","getExamenesPorVencerTodasLasEmpresas","crearNuevoExamen","getExamenUrl","removeExamenUrl","examenesLogout","getTodoExamenesTrabajadorID","uiOpenModal","uiCloseModal","crearNuevaEmpresa","getTodasLasEmpresas","getEquiposIdEmpresa","crearEquipoEmpresa","equiposLogout","equipoExist","getPermisosPorVencerIdEmpresas","getTodoPermisosEquipoID","getPermisosPorVencerTodasLasEmpresas","crearNuevoPermiso","uid","displayName","type","payload","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","email","password","formValues","className","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","then","user","catch","error","console","log","startLoginEmailPassword","id","placeholder","required","autoFocus","onChange","AuthRouter","exact","path","component","to","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","startGetTrabajadoresIdEmpresa","idEmpresa","a","trabajadores","collection","where","get","snapTrabajadores","forEach","trabajador","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","startGetTodoExamenesTrabajadorID","idTrabajador","examenes","snap","examen","startGetExamenesPorVencerTodasLasEmpresas","someDate","Date","setDate","getDate","newDate","getTime","startUploadingExamen","examenFile","fileUrl","uploadingExamen","Navbar","nombre","useSelector","state","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","onClick","signOut","startGetPermisosPorVencerTodasLasEmpresas","permisos","permiso","startGetTodoPermisosEquipoID","idEquipo","ExamenScreen","fechaCaducidad","url","nombreExamen","idUsuario","style","color","p30","p60","p90","calcularFecha","border","borderRadius","toLocaleDateString","href","rel","add","fechaDescarga","archivoDescargado","merge","err","startLogDescargas","PermisosScreen","nombrePermiso","DashBoardScreen","exam","perm","cursor","scope","data-sortable","data-field","map","customStyles","content","top","left","right","bottom","marginRight","transform","now","moment","minutes","seconds","Modal","setAppElement","CalendarModal","modalOpen","ui","toDate","dateStart","setDateStart","titleValid","setTitleValid","setFormValues","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","trim","length","autoComplete","display","files","document","querySelector","click","marginTop","fechaCreacion","Swal","fire","EditEmployeeScreen","useEffect","exist","setExist","datosTrabajador","setDatosTrabajador","datosExamenes","setDatosExamenes","trab","examenesIdTrabajador","buscar","tra","filter","employee","ex","marginBottom","DropDown","CreateEmployeeScreen","empresas","empr","idEmpleado","doc","set","startCrearTrabajadorEmpresa","defaultValue","empresa","startGetTodasLasEmpresas","empresasRef","startCrearNuevaEmpresa","CreateEmpresaScreen","event","EditEmpresaScreen","datosEmpresa","setDatosEmpresa","editable","setEditable","setValue","inputValue","setInputValue","emp","Autocomplete","options","getOptionLabel","option","width","newValue","onInputChange","newInputValue","renderInput","params","TextField","variant","exists","startUpdateEmpresa","readOnly","startGetEquiposIdEmpresa","equipos","snapEquipos","equipo","CreateEquipmentScreen","equi","startCrearEquipoEmpresa","toUpperCase","PermisosModal","EditEquipmentScreen","datosEquipo","setDatosEquipo","datosPermisos","setDatosPermisos","equ","per","MvcAppScreen","isAdmin","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","docRef","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","getExamsIdTrabajador","creado","getTodoExamenesPermisosEquipoID","permisosIdEquipo","store","createStore","applyMiddleware","thunk","MvcApp","ReactDOM","render","getElementById"],"mappings":"sQAaAA,IAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKX,IAAMC,EAAKR,IAASS,YCfPC,EAAQ,CACnBC,MAAO,eACPC,OAAQ,gBAIRC,aAAc,+BAEdC,WAAY,gBAGZC,yBAA0B,oCAC1BC,mBAAoB,6BACpBC,uBAAwB,0BACxBC,gBAAiB,oCAGjBC,iCAAkC,4CAClCC,qCAAsC,oDACtCC,iBAAkB,0CAClBC,aAAc,wBACdC,gBAAiB,2BACjBC,eAAgB,0BAChBC,4BAA6B,mCAI7BC,YAAa,kBACbC,aAAc,mBAGdC,kBAAmB,4BACnBC,oBAAqB,8BAGrBC,oBAAqB,+BACrBC,mBAAoB,sBACpBC,cAAe,wBACfC,YAAa,gCAGbC,+BAAgC,uCAChCC,wBAAyB,qCACzBC,qCAAsC,yDACtCC,kBAAmB,6BCzBR1B,EAAQ,SAAC2B,EAAKC,GAAN,MAAuB,CAC1CC,KAAM9B,EAAMC,MACZ8B,QAAS,CACPH,MACAC,iBAoDS3B,EAAS,iBAAO,CAC3B4B,KAAM9B,EAAME,S,eCzED8B,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WAAkC,IAAjCC,EAAgC,uDAAjBL,EAC1BG,EAAWE,IAITC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBJ,EAAU,2BACHD,GADE,kBAEHK,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEP,EAAQI,EAAmBF,ICf3BM,G,OAAc,WACzB,IAAMC,EAAWC,cADc,EAESb,EAAQ,CAC9Cc,MAAO,GACPC,SAAU,KAJmB,mBAExBC,EAFwB,KAEZT,EAFY,KAOvBO,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAMf,OACE,qBAAKE,UAAU,cAAf,SACE,sBAAMA,UAAU,cAAhB,SACE,uBAAMC,SAPQ,SAACC,GACnBA,EAAEC,iBACFR,EFZmC,SAACE,EAAOC,GAC7C,OAAO,SAACH,GACNtD,IACG+D,OACAC,2BAA2BR,EAAOC,GAClCQ,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPZ,EAAS3C,EAAMuD,EAAK5B,IAAK,QAE1B6B,OAAM,SAACC,GACNC,QAAQC,IAAIF,OEGPG,CAAwBf,EAAOC,KAKpC,UACE,oBAAIE,UAAU,oBAAd,8BACA,uBACEnB,KAAK,QACLgC,GAAG,QACHrB,KAAK,QACLQ,UAAU,eACVc,YAAY,wBACZC,UAAQ,EACRC,WAAS,EACTC,SAAU3B,EACVG,MAAOI,IAET,uBACEhB,KAAK,WACLgC,GAAG,WACHrB,KAAK,WACLQ,UAAU,eACVc,YAAY,gBACZC,UAAQ,EACRE,SAAU3B,EACVG,MAAOK,IAET,qBAAKE,UAAU,kBACf,wBAAQA,UAAU,+BAA+BnB,KAAK,SAAtD,+BC1CGqC,EAAa,WACxB,OACE,qBAAKlB,UAAU,aAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,cAAcC,UAAW3B,IAC3C,cAAC,IAAD,CAAU4B,GAAG,wB,QCJVC,EAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFJ,UACGK,EACD,+CAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIL,UAAY,SAACM,GAAD,OACNH,EACM,cAACC,EAAD,eAAgBE,IAChB,cAAC,IAAD,CAAUL,GAAG,qBCXxBM,EAAc,SAAC,GAIrB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFJ,UACGK,EACD,+CAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIL,UAAY,SAACM,GAAD,OACNH,EACM,cAAC,IAAD,CAAUF,GAAG,MACb,cAACG,EAAD,eAAgBE,SCd3BE,EAAgC,SAACC,GAC5C,8CAAO,WAAOnC,GAAP,eAAAoC,EAAA,sDACCC,EAAe,GACrBnF,EAAGoF,WAAW,gBACXC,MAAM,YAAa,KAAMJ,GACzBK,MACA7B,MAAK,SAAC8B,GACLA,EAAiBC,SAAQ,SAACC,GACxBN,EAAaO,KAAb,aACE1B,GAAIyB,EAAWzB,IACZyB,EAAWE,YAGlB7C,EAASvC,EAAyB4E,OAZjC,2CAAP,uDAiBW5E,EAA2B,SAAC4E,GAAD,MAAmB,CACzDnD,KAAM9B,EAAMK,yBACZ0B,QAASkD,IAoBE1E,EAAyB,iBAAO,CAC3CuB,KAAM9B,EAAMO,uBACZwB,SAAS,IC7CE2D,EAAU,uCAAG,WAAOC,GAAP,mBAAAX,EAAA,4DACP,oDACXY,EAAW,IAAIC,UACZC,OAAO,gBAAiB,aACjCF,EAASE,OAAO,SAAU,OAC1BF,EAASE,OAAO,OAAQH,GALA,kBAOHI,MANJ,mDAMoB,CACjCC,OAAQ,OACRC,KAAML,IATc,YAOhBM,EAPgB,QAWbC,GAXa,kCAYID,EAAKE,OAZT,eAYdC,EAZc,yBAabA,EAAUC,YAbG,yBAeRJ,EAAKE,OAfG,+EAkBtBzC,QAAQC,IAAR,MAlBsB,0DAAH,sDCMV2C,EAAmC,SAACC,GAC/C,IAAMC,EAAW,GACjB,8CAAO,WAAO7D,GAAP,SAAAoC,EAAA,sEACClF,EACHoF,WAAW,YACXC,MAAM,eAAgB,KAAMqB,GAC5BpB,MACA7B,MAAK,SAACmD,GACLA,EAAKpB,SAAQ,SAACqB,GACZF,EAASjB,KAAT,aACE1B,GAAI6C,EAAO7C,IACR6C,EAAOlB,eATb,OAcL7C,EAAS7B,EAA4B0F,IAdhC,2CAAP,uDAkBW1F,EAA8B,SAAC0F,GAAD,MAAe,CACxD3E,KAAM9B,EAAMe,4BACZgB,QAAS0E,IAGEG,EAA4C,WACvD,IAAIC,EAAW,IAAIC,KAEnBD,EAASE,QAAQF,EAASG,UADF,IAExB,IAAMC,EAAUJ,EAASK,UACnBT,EAAW,GACjB,8CAAO,WAAO7D,GAAP,SAAAoC,EAAA,sEACClF,EACHoF,WAAW,YACXC,MAAM,iBAAkB,KAAM8B,GAC9B7B,MACA7B,MAAK,SAACmD,GACLA,EAAKpB,SAAQ,SAACqB,GACZF,EAASjB,KAAT,aACE1B,GAAI6C,EAAO7C,IACR6C,EAAOlB,eATb,OAcL7C,EAASlC,EAAqC+F,IAdzC,2CAAP,uDAkBW/F,EAAuC,SAAC+F,GAAD,MAAe,CACjE3E,KAAM9B,EAAMU,qCACZqB,QAAS0E,IAkDE9F,EAAmB,SAACgG,GAAD,MAAa,CAC3C7E,KAAM9B,EAAMW,iBACZoB,QAAS4E,IAGEQ,EAAuB,SAACC,GACnC,8CAAO,WAAOxE,GAAP,eAAAoC,EAAA,sEACiBU,EAAW0B,GAD5B,OACCC,EADD,OAELzE,EAAS0E,EAAgBD,IAFpB,2CAAP,uDAMWC,EAAkB,SAACD,GAAD,MAAc,CAC3CvF,KAAM9B,EAAMY,aACZmB,QAASsF,IAGExG,EAAkB,iBAAO,CACpCiB,KAAM9B,EAAMa,kBClGDV,EAAe,SAACqD,GAAD,MAAW,CACrC1B,KAAM9B,EAAMG,aACZ4B,QAASyB,ICtBE+D,EAAS,WAAM,IAElBC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMlE,QAAxCgE,OACF5E,EAAWC,cASjB,OACE,8BACE,yBAAQI,UAAU,kEAAlB,UACE,qBAAKA,UAAU,oDAAf,SACGuE,IAEH,wBACEvE,UAAU,uDACVnB,KAAK,SACL6F,iBAAe,WACfC,iBAAe,eACfC,gBAAc,cACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAM9E,UAAU,0BAGlB,oBAAIA,UAAU,kBAAd,SACE,oBAAIA,UAAU,uBAAd,SACE,wBAAQA,UAAU,eAAe+E,QA3BtB,WACnBpF,EVsDF,uCAAO,WAAOA,GAAP,SAAAoC,EAAA,sEACC1F,IAAS+D,OAAO4E,UADjB,OAGLrF,EAAS1C,KAHJ,2CAAP,uDUrDE0C,EDkB6B,CAC/Bd,KAAM9B,EAAMI,aClBVwC,EJWqC,CACvCd,KAAM9B,EAAMM,qBIXVsC,EFiHiC,CACnCd,KAAM9B,EAAMc,kBE3FF,6BCJCoH,G,OAA4C,WACrD,IAAIrB,EAAW,IAAIC,KAEnBD,EAASE,QAAQF,EAASG,UADF,IAExB,IAAMC,EAAUJ,EAASK,UACnBiB,EAAW,GACjB,8CAAO,WAAOvF,GAAP,SAAAoC,EAAA,sEACClF,EACHoF,WAAW,YACXC,MAAM,iBAAkB,KAAM8B,GAC9B7B,MACA7B,MAAK,SAACmD,GACLA,EAAKpB,SAAQ,SAAC8C,GACZD,EAAS3C,KAAT,aACE1B,GAAIsE,EAAQtE,IACTsE,EAAQ3C,eATd,OAcL7C,EAASlB,EAAqCyG,IAdzC,2CAAP,wDAkBWzG,EAAuC,SAACyG,GAAD,MAAe,CACjErG,KAAM9B,EAAM0B,qCACZK,QAASoG,IAGEE,EAA+B,SAACC,GAC3C,IAAMH,EAAW,GACjB,8CAAO,WAAOvF,GAAP,SAAAoC,EAAA,sEACClF,EACHoF,WAAW,YACXC,MAAM,WAAY,KAAMmD,GACxBlD,MACA7B,MAAK,SAACmD,GACLA,EAAKpB,SAAQ,SAAC8C,GACZD,EAAS3C,KAAT,aACE1B,GAAIsE,EAAQtE,IACTsE,EAAQ3C,eATd,OAcL7C,EAASnB,EAAwB0G,IAd5B,2CAAP,uDAkBW1G,EAA0B,SAAC0G,GAAD,MAAc,CACnDrG,KAAM9B,EAAMyB,wBACZM,QAASoG,IAmBExH,EAAmB,SAACyH,GAAD,MAAc,CAC5CtG,KAAM9B,EAAM2B,kBACZI,QAASqG,ICxGAG,EAAe,SAAC,GAAsB,EAApBzE,GAAqB,IAAd6C,EAAa,sBAQ3C/D,EAAWC,cACTkC,EAA+D4B,EAA/D5B,UAAWyB,EAAoDG,EAApDH,aAAcgC,EAAsC7B,EAAtC6B,eAAgBC,EAAsB9B,EAAtB8B,IAAKC,EAAiB/B,EAAjB+B,aATL,EAUnBjB,aAAY,SAACC,GAAD,OAAWA,EAAMlE,QAAnDgE,EAVyC,EAUzCA,OAAQmB,EAViC,EAUjCA,UA2BhB,OACE,+BACE,6BAAI,mBAAG1F,UAAU,gBAAgB2F,MAAO,CAAEC,MAAM,GAAD,OAnB7B,SAACL,GACrB,IAAMM,EAAM,IAAIhC,KACViC,EAAM,IAAIjC,KACVkC,EAAM,IAAIlC,KAIhB,OAHAgC,EAAI/B,QAAQ+B,EAAI9B,UAAY,IAC5B+B,EAAIhC,QAAQgC,EAAI/B,UAAY,IAC5BgC,EAAIjC,QAAQiC,EAAIhC,UAAY,IACxBwB,GAAkBM,EAAI5B,UAClB,MAEJsB,GAAkBO,EAAI7B,WAAasB,GAAkBQ,EAAI9B,UACrD,SAEJsB,EAAiBQ,EAAI9B,UACjB,aADR,EAMsD+B,CAAcT,IAAmBU,OAAQ,kBAAmBC,aAAc,YAC9H,6BAAKpE,IACL,6BAAwCyB,IACxC,6BAAK,IAAIM,KAAK0B,GAAgBY,uBAC9B,6BAAKV,IAEL,6BACE,mBACEzF,UAAU,OACVoG,KAAMZ,EACNjG,OAAO,SACP8G,IAAI,aACJtB,QAxCe,WACrBrE,QAAQC,IACN,uBAAyB8E,EAAe,mBAAqBlB,GAE/D5E,EJmH6B,SAC/B+F,EACA5D,EACAyB,EACAkC,EACAD,GAEA,6BAAO,sBAAAzD,EAAA,sEACClF,EACHoF,WADG,mBACoByD,EADpB,SAEHY,IACC,CACEC,eAAe,IAAI1C,MAAOsC,qBAC1BtF,GAAI6E,EACJ5D,UAAWA,EACXyB,aAAcA,EACdiD,kBAAmBf,EACnBD,IAAKA,GAEP,CAAEiB,OAAO,IAEVnG,MAAK,SAAC4C,GACLxC,QAAQC,IAAI,uBAAwBuC,MAErC1C,OAAM,SAACkG,GACNhG,QAAQC,IAAI,sBAAoB+F,MAlB/B,2CIzHHC,CAAkBjB,EAAW5D,EAAWyB,EAAckC,EAAcD,KA8BlE,6BC/CKoB,EAAiB,SAAC,GAAuB,EAArB/F,GAAsB,IAAfsE,EAAc,sBAC1CrD,EAA4DqD,EAA5DrD,UAAWuD,EAAiDF,EAAjDE,SAAUE,EAAuCJ,EAAvCI,eAAgBC,EAAuBL,EAAvBK,IAAKqB,EAAkB1B,EAAlB0B,cAkBlD,OACI,+BACI,6BAAI,mBAAG7G,UAAU,gBAAgB2F,MAAO,CAAEC,MAAM,GAAD,OAnBjC,SAACL,GACnB,IAAMM,EAAM,IAAIhC,KACViC,EAAM,IAAIjC,KACVkC,EAAM,IAAIlC,KAIhB,OAHAgC,EAAI/B,QAAQ+B,EAAI9B,UAAY,IAC5B+B,EAAIhC,QAAQgC,EAAI/B,UAAY,IAC5BgC,EAAIjC,QAAQiC,EAAIhC,UAAY,IACxBwB,GAAkBM,EAAI5B,UAChB,MAENsB,EAAiBM,EAAI5B,WAAasB,GAAkBQ,EAAI9B,UAClD,SAENsB,EAAiBQ,EAAI9B,UACf,aADV,EAMwD+B,CAAcT,IAAmBU,OAAQ,kBAAmBC,aAAc,YAC9H,6BAAKpE,IACL,6BAAKuD,IACL,6BAAK,IAAIxB,KAAK0B,GAAgBY,uBAC9B,6BAAKU,IAEL,6BACI,mBACI7G,UAAU,OACVoG,KAAMZ,EACNjG,OAAO,SACP8G,IAAI,aAJR,6BCvBHS,EAAkB,WAC7B,IAAMnH,EAAWC,cACT4D,EAAagB,aAAY,SAACC,GAAD,OAAWA,EAAMsC,QAA1CvD,SACA0B,EAAaV,aAAY,SAACC,GAAD,OAAWA,EAAMuC,QAA1C9B,SACR,OACE,sBAAKlF,UAAU,kBAAf,UACE,0CACA,uBACA,uDACwB,IACtB,mBACEA,UAAU,oBACV2F,MAAO,CAAEsB,OAAQ,UAAWrB,MAAO,SACnCb,QAAS,WACPpF,EAASgE,KACThE,EAASsF,WAIf,wBAAOjF,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIkH,MAAM,SAAV,oBACA,oBAAIA,MAAM,MAAMC,gBAAc,OAAOC,aAAW,KAAhD,yBACA,oBAAIF,MAAM,MAAV,4BACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,8BACA,oBAAIA,MAAM,MAAV,4BAGJ,gCACG1D,EACCA,EAAS6D,KAAI,SAAC3D,GAAD,OACX,cAAC,EAAD,eAAkCA,GAAfA,EAAO7C,OAG1B,uDAKR,wBAAOb,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIkH,MAAM,SAAV,oBACA,oBAAIA,MAAM,MAAMC,gBAAc,OAAOC,aAAW,KAAhD,yBACA,oBAAIF,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,8BACA,oBAAIA,MAAM,MAAV,4BAGJ,gCACGhC,EACCA,EAASmC,KAAI,SAAClC,GAAD,OACX,cAAC,EAAD,eAAqCA,GAAhBA,EAAQtE,OAG7B,2D,wEC/DD9C,I,MAAc,iBAAO,CAChCc,KAAM9B,EAAMgB,YACZe,SAAS,KAEEd,GAAe,iBAAO,CACjCa,KAAM9B,EAAMiB,aACZc,SAAS,ICGLwI,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAGTC,GAAMC,MAASC,QAAQ,GAAGC,QAAQ,GACxCC,KAAMC,cAAc,SAEb,IAAMC,GAAgB,SAAC,GAAiC,IAA/B7E,EAA8B,EAA9BA,aAAczB,EAAgB,EAAhBA,UACtCnC,EAAWC,cACTyI,EAAc7D,aAAY,SAACC,GAAD,OAAWA,EAAM6D,MAA3CD,UACA7C,EAAQhB,aAAY,SAACC,GAAD,OAAWA,EAAMsC,QAArCvB,IAHoD,EAI1BvG,mBAAS6I,GAAIS,UAJa,mBAIrDC,EAJqD,KAI1CC,EAJ0C,OAKxBxJ,oBAAS,GALe,mBAKrDyJ,EALqD,KAKzCC,EALyC,OAMxB1J,mBAAS,CAC3CwG,aAAc,GACdF,eAAgBuC,GAAIS,WARsC,mBAMrDxI,EANqD,KAMzC6I,EANyC,KAUpDnD,EAAiB1F,EAAjB0F,aA6DR,OACE,eAAC,KAAD,CACEoD,OAAQR,EAERS,eAxCe,WACjBnJ,EAAS3B,MACT2B,EAAS/B,MAuCP+H,MAAO2B,GACPyB,aAAa,gBACb/I,UAAU,QACVgJ,iBAAiB,cACjBC,eAAgB,IARlB,UAWE,gDACA,uBACA,uBAAMjJ,UAAU,YAAYC,SA1DP,SAACC,GAExB,GADAA,EAAEC,iBACEsF,EAAayD,OAAOC,OAAS,EAC/B,OAAOR,GAAc,GAEvBA,GAAc,IAqDZ,UACE,sBAAK3I,UAAU,aAAf,UACE,2CACA,uBACEnB,KAAK,OACLmB,UAAS,wBAAmB0I,GAAc,cAC1C5H,YAAY,oBACZtB,KAAK,eACL4J,aAAa,MACb3J,MAAOgG,EACPxE,SAnFgB,SAAC,GAAgB,IAAd1B,EAAa,EAAbA,OAC3BqJ,EAAc,2BACT7I,GADQ,kBAEVR,EAAOC,KAAOD,EAAOE,UAiFhBsB,UAAQ,OAGZ,sBAAKf,UAAU,aAAf,UACE,sDACA,cAAC,KAAD,CACER,KAAK,cACLQ,UAAU,eACVP,MAAO+I,EACPvH,SAtFoB,SAACf,GAC7BuI,EAAavI,GACb0I,EAAc,2BACT7I,GADQ,IAEXwF,eAAgBrF,MAmFVa,UAAQ,OAGZ,sBAAKf,UAAU,aAAf,UACE,qDACA,uBACA,uBACEa,GAAG,eACHhC,KAAK,OACLW,KAAK,OACLmG,MAAO,CAAE0D,QAAS,QAClBpI,SA1De,SAACf,GACxB,IAAMwC,EAAOxC,EAAEX,OAAO+J,MAAM,GACxB5G,GAEF/C,EAASuE,EAAqBxB,KAuDxB3B,UAAQ,IAEV,wBACEf,UAAU,kBACV+E,QAvDwB,WAChCwE,SAASC,cAAc,iBAAiBC,SAoDlC,+BAQF,yBACE5K,KAAK,SACLmB,UAAU,oCACV2F,MAAO,CACL+D,UAAW,OACXL,QAAQ,GAAD,OAAK7D,EAAM,GAAK,SAEzBT,QA9FgB,WR0BW,IAACrB,EQzBlC/D,GRyBkC+D,EQxBV,CACpBH,aAAcA,EACdzB,UAAWA,EACX2D,aAAcA,EACdF,eAAgB,IAAI1B,KAAK9D,EAAWwF,gBAAgBtB,UACpD0F,eAAe,IAAI9F,MAAOI,UAC1BuB,IAAKA,GRmBX,uCAAO,WAAO7F,GAAP,SAAAoC,EAAA,sDACalF,EAAGoF,WAAW,YAG7BqE,IAAI5C,GACJpD,MAAK,SAACoD,GACLhD,QAAQC,IAAI,aAAc+C,EAAO7C,OAElCL,OAAM,SAACC,GACNC,QAAQC,IAAI,UAAWF,MAE3Bd,EAASjC,EAAiBgG,IAXrB,2CAAP,wDQfEkG,IAAKC,KAAK,6BAA2B,GAAI,WACzClK,EAAS3B,MACTsF,EAAiCC,GACjC5D,EAAS/B,MAwEL,UASE,mBAAGoC,UAAU,cAAc2F,MAAO,CAAEsB,OAAQ,aAC5C,sDCvJG6C,GAAqB,WAChC,IAAMnK,EAAWC,cADqB,EAESb,EAAQ,CACrDwE,aAAc,KAHsB,mBAE/BxD,EAF+B,KAEnBT,EAFmB,KAEAF,EAFA,KAK9BmE,EAAiBxD,EAAjBwD,aAGRwG,qBAAU,WACRpK,EAAS2D,EAAiCC,MACzC,CAAC5D,EAAU4D,IAVwB,MAYZtE,oBAAS,GAZG,mBAY/B+K,EAZ+B,KAYxBC,EAZwB,OAaQhL,mBAAS,IAbjB,mBAa/BiL,EAb+B,KAadC,EAbc,OAcIlL,mBAAS,IAdb,mBAc/BmL,EAd+B,KAchBC,EAdgB,KAe9BrI,EAAiBwC,aAAY,SAACC,GAAD,OAAWA,EAAM6F,QAA9CtI,aACAuI,EAAyB/F,aAAY,SAACC,GAAD,OAAWA,EAAMsC,QAAtDwD,qBACAzI,EAAc0C,aAAY,SAACC,GAAD,OAAWA,EAAMlE,QAA3CuB,UAMF0I,EAAS,SAACjH,GACd,IAAMkH,EAAMzI,EAAa0I,QAAO,SAACC,GAAD,OAAcA,EAAS9J,KAAO0C,KAC9D4G,EAAmBM,GACnB,IAAMG,EAAKL,EAAqBG,QAC9B,SAAChH,GAAD,OAAYA,EAAOH,eAAiBA,KAEtC8G,EAAiBO,GAEbH,EAAItB,OAAS,EAGfc,GAAS,IAETL,IAAKC,KAAK,2BAA4B,GAAI,WAE1CI,GAAS,GACT7K,MAMJ,OACE,gCACE,uBAAMa,SA5BW,SAACC,GACpBA,EAAEC,iBACFqK,EAAOjH,IA0BL,UACE,oBAAIvD,UAAU,oBAAd,+BACA,uBACA,uBACEnB,KAAK,OACLgC,GAAG,eACHrB,KAAK,eACLQ,UAAU,eACVc,YAAY,6BACZC,UAAQ,EACRC,WAAS,EACTC,SAAU3B,EACVG,MAAO8D,IAET,wBACEvD,UAAU,+BACV2F,MAAO,CAAE+D,UAAW,OAAQmB,aAAc,QAC1ChM,KAAK,SAHP,uBASDmL,EACC,gCACE,sDACA,qBAAKhK,UAAU,kBAAf,SACGkK,EACC,2CAAcA,EAAgB,GAAG3F,UAE/B,0BAGN,8BACE,6CACc,IACZ,sBAAMoB,MAAO,CAAEC,MAAO,QAASqB,OAAQ,WAAvC,SACE,mBAAGjH,UAAU,qBAAqB+E,QA1C5B,WAClBpF,EAAS5B,OAyCG,SACG,aAKT,wBAAOiC,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIkH,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,4BACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,8BACA,oBAAIA,MAAM,MAAV,4BAGJ,gCACGkD,EACCA,EAAc/C,KAAI,SAAC3D,GAAD,OAChB,cAAC,EAAD,eAAkCA,GAAfA,EAAO7C,OAG1B,uDAIR,cAAC,GAAD,CAAe0C,aAAcA,EAAczB,UAAWA,OAGtD,4BC1HGgJ,GAAW,SAACtI,GAAS,IAEtB+B,EAAsB/B,EAAtB+B,OAAQzC,EAAcU,EAAdV,UAChB,OAEI,wBAAwBrC,MAAOqC,EAAW9B,UAAU,gBAApD,SAAqEuE,GAAxDzC,ICARiJ,GAAuB,WAAM,IAEhC/I,EAAiBwC,aAAY,SAACC,GAAD,OAAWA,EAAM6F,QAA9CtI,aACAgJ,EAAaxG,aAAY,SAAAC,GAAK,OAAIA,EAAMwG,QAAxCD,SACFrL,EAAWC,cAJuB,EAOOb,EAAQ,CACrDmM,WAAY,GACZ3G,OAAQ,GACRzC,UAAW,KAV2B,mBAOjC/B,EAPiC,KAOrBT,EAPqB,KAOFF,EAPE,KAahC8L,EAAkCnL,EAAlCmL,WAAY3G,EAAsBxE,EAAtBwE,OAAQzC,EAAc/B,EAAd+B,UAC5BpB,QAAQC,IAAIZ,GAcZ,OACE,8BACE,uBAAME,SAfW,SAACC,GACpBA,EAAEC,iBACU6B,EAAa0I,QAAO,SAACC,GAAD,OAAcA,EAAS9J,KAAOqK,KACtD/B,OAAS,GACfS,IAAKC,KAAK,4BAA6B,GAAI,SAC3CzK,MAEAO,EbCqC,SAACmC,EAAWoJ,EAAY3G,GACjE,8CAAO,WAAO5E,GAAP,SAAAoC,EAAA,sDAELlF,EAAGoF,WAAW,gBAAgBkJ,IAAID,GAAYE,IAAI,CAChDtJ,UAAWA,EACXyC,OAAQA,IAEV5E,EAASrC,KAETqC,EAASkC,EAA8BC,IARlC,2CAAP,sDaFauJ,CAA4BvJ,EAAWoJ,EAAY3G,IAC5DqF,IAAKC,KAAK,iCAA+B,GAAI,WAC7CzK,MAMA,UACE,oBAAIY,UAAU,oBAAd,8BACA,uBACA,yBACEa,GAAG,YACHrB,KAAK,YACLQ,UAAU,cACVe,UAAQ,EACRtB,MAAOqC,EACPb,SAAU3B,EANZ,UASE,wBAAQgM,cAAY,EAAe7L,MAAM,UAAUO,UAAU,gBAA7D,mCAAyB,WAEvBgL,EAAS3D,KAAI,SAAAkE,GAAO,OAAI,cAAC,GAAD,eAAsCA,GAAvBA,EAAQzJ,iBAGnD,uBACEjD,KAAK,OACLgC,GAAG,aACHrB,KAAK,aACLQ,UAAU,eACVc,YAAY,sCACZC,UAAQ,EACRC,WAAS,EACTC,SAAU3B,EACVG,MAAOyL,IAET,uBACErM,KAAK,OACLgC,GAAG,SACHrB,KAAK,SACLQ,UAAU,eACVc,YAAY,SACZC,UAAQ,EACRC,WAAS,EACTC,SAAU3B,EACVG,MAAO8E,IAET,wBACEvE,UAAU,+BACV2F,MAAO,CAAE+D,UAAW,QACpB7K,KAAK,SAHP,oCCzEK2M,GAA2B,WACtC,8CAAO,WAAO7L,GAAP,eAAAoC,EAAA,sDACCiJ,EAAW,GACjBnO,EAAGoF,WAAW,YACXE,MACA7B,MAAK,SAACmL,GACLA,EAAYpJ,SAAQ,SAACkJ,GACnBP,EAASzI,KAAT,aACET,UAAWyJ,EAAQ1K,IAChB0K,EAAQ/I,YAGf7C,EAASzB,GAAoB8M,OAX5B,2CAAP,uDAgBW9M,GAAsB,SAAC8M,GAAD,MAAe,CAChDnM,KAAM9B,EAAMmB,oBACZY,QAASkM,IAGEU,GAAyB,SAAC5J,EAAWyJ,GAChD,8CAAO,WAAO5L,GAAP,SAAAoC,EAAA,sEACClF,EAAGoF,WAAW,YAAYkJ,IAAIrJ,GAAWsJ,IAAIG,GAD9C,OAGL5L,EAAS6L,MAHJ,2CAAP,uDCpBWG,GAAsB,WACjC,IAAMhM,EAAWC,cADsB,EAEQb,EAAQ,CACrD+C,UAAW,GACXyC,OAAQ,KAJ6B,mBAEhCxE,EAFgC,KAEpBT,EAFoB,KAEDF,EAFC,KAM/B4L,EAAaxG,aAAY,SAACC,GAAD,OAAWA,EAAMwG,QAA1CD,SACAlJ,EAAsB/B,EAAtB+B,UAAWyC,EAAWxE,EAAXwE,OAuBnB,OACE,gCACE,+CACA,uBAAMvE,UAAU,OAAOC,SAxBN,SAAC2L,GACpBA,EAAMzL,iBACM6K,EAASN,QAAO,SAACa,GAAD,OAAaA,EAAQzJ,YAAcA,KACvDqH,OAAS,GACfS,IAAKC,KAAK,yBAA0B,GAAI,SACxCzK,KACS0C,EAAY,GACrB8H,IAAKC,KAAK,oCAAqC,GAAI,SACnDzK,MAEAO,EACE+L,GAAuB5J,EAAW,CAChCA,UAAWA,EACXyC,OAAQA,KAGZqF,IAAKC,KAAK,8BAA4B,GAAI,WAC1CzK,MAOA,UACE,uBACEyB,GAAG,YACHrB,KAAK,YACLX,KAAK,OACLY,MAAOqC,EACPb,SAAU3B,EACVU,UAAU,eACVc,YAAY,qCACZC,UAAQ,IAEV,uBACEF,GAAG,SACHrB,KAAK,SACLX,KAAK,OACLY,MAAO8E,EACPtD,SAAU3B,EACVU,UAAU,eACVc,YAAY,iBACZC,UAAQ,IAEV,wBACElC,KAAK,SACLmB,UAAU,+BACV2F,MAAO,CAAE+D,UAAW,OAAQmB,aAAc,QAH5C,0B,oBCpDKgB,GAAoB,WAC/B,IAAMlM,EAAWC,cACToL,EAAaxG,aAAY,SAACC,GAAD,OAAWA,EAAMwG,QAA1CD,SAF6B,EAGG/L,qBAHH,mBAG9B6M,EAH8B,KAGhBC,EAHgB,OAIX9M,oBAAS,GAJE,mBAI9B+K,EAJ8B,KAIvBC,EAJuB,OAKLhL,oBAAS,GALJ,mBAK9B+M,EAL8B,KAKpBC,EALoB,OASXhN,mBAAS+L,EAAS,IATP,mBAS9BvL,EAT8B,KASvByM,EATuB,OAUDjN,mBAAS,IAVR,mBAU9BkN,EAV8B,KAUlBC,EAVkB,OAWUrN,EAAQ,CACrD+C,UAAW,GACXyC,OAAQ,KAb2B,mBAW9BxE,EAX8B,KAWlBT,EAXkB,KAWCF,EAXD,KAgB7B0C,EAAsB/B,EAAtB+B,UAAWyC,EAAWxE,EAAXwE,OACnB7D,QAAQC,IAAIZ,GACZ,IAGMyK,EAAS,SAAC1I,GACd,IAAMuK,EAAMrB,EAASN,QAAO,SAACa,GAAD,OAAaA,EAAQzJ,YAAcA,KAC3DuK,EAAIlD,OAAS,GACf4C,EAAgBM,GAChBpC,GAAS,GACTgC,GAAY,KAEZrC,IAAKC,KAAK,wBAAyB,GAAI,WACvCI,GAAS,GACT7K,MAgCJ,OACE,qBAAKY,UAAU,kBAAf,SAEE,sBAAKA,UAAU,MAAf,UACE,gDACA,uBACA,sBAAKA,UAAU,WAAf,UACE,yCACA,uBACER,KAAK,YACLqB,GAAG,YACHpB,MAAOqC,EACPb,SAAU3B,EACVU,UAAU,eACVe,UAAQ,EACRD,YAAY,uCAGd,wBACEd,UAAU,+BACV2F,MAAO,CAAE+D,UAAW,QACpB7K,KAAK,SACLkG,QAlEW,WACnByF,EAAO1I,IA6DD,uBASF,sBAAK9B,UAAU,WAAf,UACE,4CACA,cAACsM,GAAA,EAAD,CACEzL,GAAG,4BACHrB,KAAK,4BACL+M,QAASvB,EACTwB,eAAgB,SAACC,GAAD,OAAYA,EAAOlI,QACnCoB,MAAO,CAAE+G,MAAO,KAChBjN,MAAOA,EACPwB,SAAU,SAAC2K,EAAOe,GAChBT,EAASS,GACK,OAAVlN,GACFyM,EAASlB,EAAS,KAGtBmB,WAAYA,EACZS,cAAe,SAAChB,EAAOiB,GACrBT,EAAcS,IAEhBC,YAAa,SAACC,GAAD,OACX,cAACC,GAAA,EAAD,2BACMD,GADN,IAEEE,QAAQ,WACRjN,UAAU,qBAGhB,wBACEA,UAAU,+BACV2F,MAAO,CAAE+D,UAAW,QACpB7K,KAAK,SACLkG,QAAS,kBAAMyF,EAAO/K,EAAMqC,YAJ9B,uBAWDkI,EAEC,sBAAKhK,UAAU,YAAf,UACE,qBAAK2F,MAAO,CAAE+D,UAAW,QAAzB,SAEE,6BACE,uDACsB,IACpB,mBACE1J,UAAU,cACV2F,MAAO,CAAEC,MAAO,QAASqB,OAAQ,WACjClC,QAvGC,WACjBkH,GAAY,aA2GJ,8BACE,uBAAMhM,SAzGG,SAAC2L,GACpBA,EAAMzL,iBACFoE,EAAO4E,QAAU,EACnBS,IAAKC,KAAK,yBAA0B,GAAI,SAG1CnJ,QAAQC,IAAIlB,EAAMqC,WAIlBnC,EFvB8B,SAAC4L,GAAa,IACtCzJ,EAAcyJ,EAAdzJ,UACR,8CAAO,WAAOnC,GAAP,SAAAoC,EAAA,sEACgBlF,EAAGoF,WAAW,YAAYkJ,IAAIrJ,GAAWK,MADzD,kBAEM+K,OAFN,uBAGHvN,EAAS+L,GAAuB5J,EAAWyJ,IAHxC,mBAaI,GAbJ,iCAeI,GAfJ,2CAAP,sDEqBW4B,CAAmB,CAAErL,UAAWA,GAAwBrC,EAAMqC,UAAWyC,OAAQA,KACrFqF,IAAKC,KAAK,0CAAqC,GAAI,WACnDD,IAAKC,KAAK,mBAAoB,wBAAyB,OAC5DzK,IACA6K,GAAS,GACTiC,EAASlB,EAAS,MA0FR,UACE,2CACA,uBACExL,KAAK,SACLqB,GAAG,SACHpB,MAAO8E,EACPtD,SAAU3B,EACVU,UAAU,eACVoN,UAAUpB,EACVjL,UAAQ,EACRD,YAAW,UAAKgL,EAAa,GAAGvH,OAArB,OAEZyH,GACC,wBACEhM,UAAU,+BACV2F,MAAO,CAAE+D,UAAW,QACpB7K,KAAK,SAHP,qCAYN,8BChKCT,GAAqB,iBAAO,CACrCS,KAAM9B,EAAMqB,mBACZU,SAAS,IAGAuO,GAA2B,SAACvL,GACrC,8CAAO,WAAOnC,GAAP,eAAAoC,EAAA,sDACGuL,EAAU,GAChBzQ,EAAGoF,WAAW,WACTC,MAAM,YAAa,KAAMJ,GACzBK,MACA7B,MAAK,SAACiN,GACHA,EAAYlL,SAAQ,SAACmL,GACjBF,EAAQ/K,KAAR,aACI1B,GAAI2M,EAAO3M,IACR2M,EAAOhL,YAGlB7C,EAASxB,GAAoBmP,OAZlC,2CAAP,uDAiBSnP,GAAsB,SAACmP,GAAD,MAAc,CAC7CzO,KAAM9B,EAAMoB,oBACZW,QAASwO,IClCAG,GAAwB,WAAO,IAChCH,EAAY9I,aAAY,SAAAC,GAAK,OAAIA,EAAMiJ,QAAvCJ,QACAtC,EAAaxG,aAAY,SAAAC,GAAK,OAAIA,EAAMwG,QAAxCD,SACFrL,EAAWC,cAHsB,EAMQb,EAAQ,CACnD+C,UAAW,GACXuD,SAAU,GACVd,OAAQ,KAT2B,mBAMhCxE,EANgC,KAMpBT,EANoB,KAMDF,EANC,KAY/BiG,EAAgCtF,EAAhCsF,SAAUd,EAAsBxE,EAAtBwE,OAAQzC,EAAc/B,EAAd+B,UAc1B,OACI,8BACI,uBAAM7B,SAfO,SAACC,GAClBA,EAAEC,iBACUmN,EAAQ5C,QAAO,SAAA8C,GAAM,OAAIA,EAAO3M,KAAOwE,KAC3C8D,OAAS,GACbS,IAAKC,KAAK,wBAAyB,GAAI,SACvCzK,MAEAO,EDxB2B,SAACmC,EAAWuD,EAAUd,GACzD,8CAAO,WAAO5E,GAAP,SAAAoC,EAAA,sDAEHlF,EAAGoF,WAAW,WAAWkJ,IAAI9F,GAAU+F,IAAI,CACvCtJ,UAAWA,EACXyC,OAAQA,IAEZ5E,EAASvB,MAETuB,EAAS0N,GAAyBvL,IAR/B,2CAAP,sDCuBiB6L,CAAwB7L,EAAWuD,EAASuI,cAAerJ,IACpEqF,IAAKC,KAAK,6BAA2B,GAAI,WACzCzK,MAMA,UACI,oBAAIY,UAAU,oBAAd,0BACA,uBACA,yBACIa,GAAG,YACHrB,KAAK,YACLQ,UAAU,cACVe,UAAQ,EACRtB,MAAOqC,EACPb,SAAU3B,EANd,UASI,wBAAQgM,cAAY,EAAe7L,MAAM,UAAUO,UAAU,gBAA7D,mCAAyB,WAErBgL,EAAS3D,KAAI,SAAAkE,GAAO,OAAI,cAAC,GAAD,eAAsCA,GAAvBA,EAAQzJ,iBAGvD,uBACIjD,KAAK,OACLgC,GAAG,WACHrB,KAAK,WACLQ,UAAU,eACVc,YAAY,yCACZC,UAAQ,EACRC,WAAS,EACTC,SAAU3B,EACVG,MAAO4F,IAEX,uBACIxG,KAAK,OACLgC,GAAG,SACHrB,KAAK,SACLQ,UAAU,eACVc,YAAY,SACZC,UAAQ,EACRC,WAAS,EACTC,SAAU3B,EACVG,MAAO8E,IAEX,wBACIvE,UAAU,+BACV2F,MAAO,CAAE+D,UAAW,QACpB7K,KAAK,SAHT,gCC/DVyI,GAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAGbC,GAAMC,MAASC,QAAQ,GAAGC,QAAQ,GACxCC,KAAMC,cAAc,SAEb,IAAM0F,GAAgB,SAAC,GAA6B,IAA3BxI,EAA0B,EAA1BA,SAAUvD,EAAgB,EAAhBA,UAChCnC,EAAWC,cACTyI,EAAc7D,aAAY,SAACC,GAAD,OAAWA,EAAM6D,MAA3CD,UACA7C,EAAQhB,aAAY,SAACC,GAAD,OAAWA,EAAMsC,QAArCvB,IAH8C,EAIpBvG,mBAAS6I,GAAIS,UAJO,mBAI/CC,EAJ+C,KAIpCC,EAJoC,OAKlBxJ,oBAAS,GALS,mBAK/CyJ,EAL+C,KAKnCC,EALmC,OAMlB1J,mBAAS,CACzC4H,cAAe,GACftB,eAAgBuC,GAAIS,WAR8B,mBAM/CxI,EAN+C,KAMnC6I,EANmC,KAU9C/B,EAAkB9G,EAAlB8G,cA6DR,OACI,eAAC,KAAD,CACIgC,OAAQR,EAERS,eAxCW,WACfnJ,EAAS3B,MACT2B,EAAS/B,MAuCL+H,MAAO2B,GACPyB,aAAa,gBACb/I,UAAU,QACVgJ,iBAAiB,cACjBC,eAAgB,IARpB,UAWI,iDACA,uBACA,uBAAMjJ,UAAU,YAAYC,SA1DX,SAACC,GAEtB,GADAA,EAAEC,iBACE0G,EAAcqC,OAAOC,OAAS,EAC9B,OAAOR,GAAc,GAEzBA,GAAc,IAqDV,UACI,sBAAK3I,UAAU,aAAf,UACI,2CACA,uBACInB,KAAK,OACLmB,UAAS,wBAAmB0I,GAAc,cAC1C5H,YAAY,qBACZtB,KAAK,gBACL4J,aAAa,MACb3J,MAAOoH,EACP5F,SAnFM,SAAC,GAAgB,IAAd1B,EAAa,EAAbA,OACzBqJ,EAAc,2BACP7I,GADM,kBAERR,EAAOC,KAAOD,EAAOE,UAiFVsB,UAAQ,OAGhB,sBAAKf,UAAU,aAAf,UACI,sDACA,cAAC,KAAD,CACIR,KAAK,cACLQ,UAAU,eACVP,MAAO+I,EACPvH,SAtFU,SAACf,GAC3BuI,EAAavI,GACb0I,EAAc,2BACP7I,GADM,IAETwF,eAAgBrF,MAmFJa,UAAQ,OAGhB,sBAAKf,UAAU,aAAf,UACI,qDACA,uBACA,uBACIa,GAAG,eACHhC,KAAK,OACLW,KAAK,OACLmG,MAAO,CAAE0D,QAAS,QAClBpI,SA1DK,SAACf,GACtB,IAAMwC,EAAOxC,EAAEX,OAAO+J,MAAM,GACxB5G,GAEA/C,EAASuE,EAAqBxB,KAuDlB3B,UAAQ,IAEZ,wBACIf,UAAU,kBACV+E,QAvDc,WAC9BwE,SAASC,cAAc,iBAAiBC,SAoD5B,gCAQJ,yBACI5K,KAAK,SACLmB,UAAU,oCACV2F,MAAO,CACH+D,UAAW,OACXL,QAAQ,GAAD,OAAK7D,EAAM,GAAK,SAE3BT,QA/FS,WdyBW,IAACI,EcxBjCxF,GdwBiCwF,EcvBN,CACnBE,SAAUA,EACVvD,UAAWA,EACX+E,cAAeA,EACftB,eAAgB,IAAI1B,KAAK9D,EAAWwF,gBAAgBtB,UACpD0F,eAAe,IAAI9F,MAAOI,UAC1BuB,IAAKA,GdkBjB,uCAAO,WAAO7F,GAAP,SAAAoC,EAAA,sDACclF,EAAGoF,WAAW,YAG9BqE,IAAInB,GACJ7E,MAAK,SAAC6E,GACLzE,QAAQC,IAAI,aAAcwE,EAAQtE,OAEnCL,OAAM,SAACC,GACNC,QAAQC,IAAI,UAAWF,MAE3Bd,EAASjC,EAAiByH,IAXrB,2CAAP,wDcdIyE,IAAKC,KAAK,8BAA4B,GAAI,WAC1ClK,EAAS3B,MACToH,EAA6BC,GAC7B1F,EAAS/B,MAyED,UASI,mBAAGoC,UAAU,cAAc2F,MAAO,CAAEsB,OAAQ,aAC5C,sDCzJP6G,GAAsB,WAC/B,IAAMnO,EAAWC,cADoB,EAEUb,EAAQ,CACnDsG,SAAU,KAHuB,mBAE9BtF,EAF8B,KAElBT,EAFkB,KAECF,EAFD,KAK7BiG,EAAatF,EAAbsF,SAGR0E,qBAAU,WACNpK,EAASyF,EAA6BC,MACvC,CAAC1F,EAAU0F,IAVuB,MAYXpG,oBAAS,GAZE,mBAY9B+K,EAZ8B,KAYvBC,EAZuB,OAaChL,mBAAS,IAbV,mBAa9B8O,EAb8B,KAajBC,EAbiB,OAcK/O,mBAAS,IAdd,mBAc9BgP,EAd8B,KAcfC,EAde,KAe7BZ,EAAY9I,aAAY,SAACC,GAAD,OAAWA,EAAMiJ,QAAzCJ,QACApI,EAAaV,aAAY,SAACC,GAAD,OAAWA,EAAMuC,QAA1C9B,SACApD,EAAc0C,aAAY,SAACC,GAAD,OAAWA,EAAMlE,QAA3CuB,UAMF0I,EAAS,SAACnF,GACZ,IAAM8I,EAAMb,EAAQ5C,QAAO,SAAC8C,GAAD,OAAYA,EAAO3M,KAAOwE,KACrD2I,EAAeG,GACf,IAAMC,EAAMlJ,EAASwF,QACjB,SAACvF,GAAD,OAAaA,EAAQE,WAAaA,KAEtC6I,EAAiBE,GAEbD,EAAIhF,OAAS,EAGbc,GAAS,IAETL,IAAKC,KAAK,uBAAwB,GAAI,WAEtCI,GAAS,GACT7K,MAMR,OACI,gCACI,uBAAMa,SA5BO,SAACC,GAClBA,EAAEC,iBACFqK,EAAOnF,IA0BH,UACI,oBAAIrF,UAAU,oBAAd,2BACA,uBACA,uBACInB,KAAK,OACLgC,GAAG,WACHrB,KAAK,WACLQ,UAAU,eACVc,YAAY,8BACZC,UAAQ,EACRC,WAAS,EACTC,SAAU3B,EACVG,MAAO4F,IAEX,wBACIrF,UAAU,+BACV2F,MAAO,CAAE+D,UAAW,OAAQmB,aAAc,QAC1ChM,KAAK,SAHT,uBASHmL,EACG,gCACI,kDACA,qBAAKhK,UAAU,kBAAf,SACK+N,EACG,2CAAcA,EAAY,GAAGxJ,UAEzB,0BAGZ,8BACI,4CACe,IACX,sBAAMoB,MAAO,CAAEC,MAAO,QAASqB,OAAQ,WAAvC,SACI,mBAAGjH,UAAU,qBAAqB+E,QA1C1C,WAChBpF,EAAS5B,OAyCe,SACK,aAKjB,wBAAOiC,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIkH,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,iCACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,8BACA,oBAAIA,MAAM,MAAV,4BAGR,gCACK+G,EACGA,EAAc5G,KAAI,SAAClC,GAAD,OACd,cAAC,EAAD,eAAqCA,GAAhBA,EAAQtE,OAG7B,uDAIhB,cAAC,GAAD,CAAewE,SAAUA,EAAUvD,UAAWA,OAG9C,4BCvGPuM,GAAe,WAC1B,IAAM1O,EAAWC,cADe,EAED4E,aAAY,SAACC,GAAD,OAAWA,EAAMlE,QAApD+N,EAFwB,EAExBA,QAASxM,EAFe,EAEfA,UAYjB,OAVAiI,qBAAU,WACJjI,IACFnC,EAASgE,KACThE,EAASsF,KACTtF,EAAS6L,MACT7L,EAASkC,EAA8BC,IACvCnC,EAAS0N,GAAyBvL,OAEnC,CAACnC,EAAUmC,IAGZ,8BACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,sBAAK9B,UAAU,kBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBACEa,GAAG,cACHb,UAAU,yDAFZ,SAIE,qBAAKA,UAAU,uBAAf,SACE,qBAAIA,UAAU,kBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWsB,GAAG,IAA9B,UACE,+BAAM,mBAAGtB,UAAU,kBAClB,IAFH,kBAKDsO,EACC,qCACE,oBAAItO,UAAU,8FAAd,SACE,iCAAM,mBAAGA,UAAU,iBAAoB,IAAvC,eAEF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWsB,GAAG,iBAA9B,UACE,iCAAM,mBAAGtB,UAAU,qBAAwB,OAD7C,qBAIF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWsB,GAAG,kBAA9B,UACE,iCAAM,mBAAGtB,UAAU,qBAAwB,OAD7C,sBAIF,oBAAIA,UAAU,8FAAd,SACE,iCAAM,mBAAGA,UAAU,wBAA2B,IAA9C,eAEF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWsB,GAAG,oBAA9B,UACE,iCAAM,mBAAGtB,UAAU,uBAA0B,OAD/C,qBAIF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWsB,GAAG,qBAA9B,UACE,iCAAM,mBAAGtB,UAAU,eAAkB,OADvC,sBAIF,oBAAIA,UAAU,8FAAd,SACE,iCAAM,mBAAGA,UAAU,oBAAuB,IAA1C,oBAEF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWsB,GAAG,wBAA9B,UACA,iCAAM,mBAAGtB,UAAU,uBAA0B,OAD7C,wBAIF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWsB,GAAG,sBAA9B,UACA,iCAAM,mBAAGtB,UAAU,eAAkB,OADrC,yBAIF,oBAAIA,UAAU,8FAAd,SACE,iCAAM,mBAAGA,UAAU,wBAA2B,IAA9C,eAEF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWsB,GAAG,sBAA9B,UACA,iCAAM,mBAAGtB,UAAU,uBAA0B,OAD7C,oBAIF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWsB,GAAG,uBAA9B,UACA,iCAAM,mBAAGtB,UAAU,eAAkB,OADrC,wBAMF,iCAMZ,8BACE,sBAAMA,UAAU,wCAAhB,SACE,qBAAKA,UAAU,0GAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,OAAK,EAACE,UAAWyF,EAAiB1F,KAAK,MAC9C,cAAC,IAAD,CACED,OAAK,EACLE,UAAWyI,GACX1I,KAAK,wBAEP,cAAC,IAAD,CACED,OAAK,EACLE,UAAW0J,GACX3J,KAAK,0BAEP,cAAC,IAAD,CACED,OAAK,EACLE,UAAWsK,GACXvK,KAAK,sBAEP,cAAC,IAAD,CACED,OAAK,EACLE,UAAWwK,GACXzK,KAAK,uBAEP,cAAC,IAAD,CACED,OAAK,EACLE,UAAWsK,GACXvK,KAAK,sBAEP,cAAC,IAAD,CACED,OAAK,EACLE,UAAWoM,GACXrM,KAAK,wBAEP,cAAC,IAAD,CACED,OAAK,EACLE,UAAWyM,GACX1M,KAAK,2CC5IZmN,GAAY,WACvB,IAAM5O,EAAWC,cADY,EAGGX,oBAAS,GAHZ,mBAGtBuP,EAHsB,KAGZC,EAHY,OAIOxP,oBAAS,GAJhB,mBAItByP,EAJsB,KAIVC,EAJU,KAuB7B,OAdA5E,qBAAU,WACR1N,IAAS+D,OAAOwO,oBAAmB,SAACrO,GnBhBP,IAAC5B,GmBiB5B,OAAI4B,QAAJ,IAAIA,OAAJ,EAAIA,EAAM5B,MACRgB,EAAS3C,EAAMuD,EAAK5B,MAEpBgB,GnBpB0BhB,EmBoBC4B,EAAK5B,InBnBtC,uCAAO,WAAOgB,GAAP,eAAAoC,EAAA,6DACC8M,EAAShS,EAAGoF,WAAW,YAAYkJ,IAAIxM,GADxC,SAECkQ,EACH1M,MACA7B,MAAK,SAAC6K,GACL,GAAIA,EAAI+B,OAAQ,CAEd,IAAM3M,EAAI,eACL4K,EAAI3I,QAET7C,EAASzC,EAAaqD,SAEtBG,QAAQC,IAAI,gBAGfH,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAhBX,2CAAP,wDmBoBMkO,GAAc,IAEdA,GAAc,GAEhBF,GAAY,QAEb,CAAC9O,EAAU8O,EAAaE,IAEvBH,EACK,6CAGP,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,EAAD,CACEpN,KAAK,QACLC,UAAWH,EACXM,gBAAiBkN,IAGnB,cAAC,EAAD,CACEvN,OAAK,EACLK,gBAAiBkN,EACjBtN,KAAK,IACLC,UAAWgN,KAEb,cAAC,IAAD,CAAU/M,GAAG,c,2BCnDjBtC,GAAe,CACnBqJ,WAAW,GCQPyG,GACe,qBAAXC,QACNA,OAAOC,sCACTC,KAEIC,GAAWC,aAAgB,CAC/B/O,KCfyB,WAAyB,IAAxBqE,EAAuB,uDAAf,GAAI2K,EAAW,uCACjD,OAAQA,EAAOvQ,MACb,KAAK9B,EAAMC,MACT,MAAO,CACL2B,IAAKyQ,EAAOtQ,QAAQH,KAIxB,KAAK5B,EAAME,OACT,MAAO,GAET,QACE,OAAOwH,IDIXlE,KEhByB,WAAyB,IAAxBkE,EAAuB,uDAAf,GAAI2K,EAAW,uCACjD,OAAQA,EAAOvQ,MACb,KAAK9B,EAAMG,aACT,MAAO,CACLqH,OAAQ6K,EAAOtQ,QAAQyF,OACvBzC,UAAWsN,EAAOtQ,QAAQgD,UAC1BwM,QAASc,EAAOtQ,QAAQwP,QACxB5I,UAAU0J,EAAOtQ,QAAQ4G,WAG7B,KAAK3I,EAAMI,WACT,MAAO,GAET,QACE,OAAOsH,IFGXsC,KGjByB,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAI2K,EAAW,uCACjD,OAAQA,EAAOvQ,MACb,KAAK9B,EAAMS,iCACT,OAAO,2BACFiH,GADL,IAEEjB,SAAS,aAAK4L,EAAOtQ,WAEzB,KAAK/B,EAAMe,4BACT,OAAO,2BACF2G,GADL,IAEE8F,qBAAqB,aAAK6E,EAAOtQ,WAGrC,KAAK/B,EAAMU,qCACT,OAAO,2BACFgH,GADL,IAEEjB,SAAS,aAAK4L,EAAOtQ,WAGzB,KAAK/B,EAAMa,gBACT,OAAO,2BACF6G,GADL,IAEEe,IAAK,OAGT,KAAKzI,EAAMsS,qBACT,OAAO,2BACF5K,GADL,IAEEjB,SAAS,aAAK4L,EAAOtQ,WAGzB,KAAK/B,EAAMW,iBACT,OAAO,2BACF+G,GADL,IAEEf,OAAQ0L,EAAOtQ,UAEnB,KAAK/B,EAAMY,aACT,OAAO,2BACF8G,GADL,IAEEe,IAAK4J,EAAOtQ,UAGhB,KAAK/B,EAAMc,eACT,MAAO,GAET,QACE,OAAO4G,IH5BX6D,GDduB,WAAmC,IAAlC7D,EAAiC,uDAAzBzF,GAAcoQ,EAAW,uCACzD,OAAQA,EAAOvQ,MACb,KAAK9B,EAAMgB,YACT,OAAO,2BACF0G,GADL,IAEE4D,WAAW,IAEf,KAAKtL,EAAMiB,aACT,OAAO,2BACFyG,GADL,IAEE4D,WAAW,IAGf,QACE,OAAO5D,ICCX6F,KIlB6B,WAAyB,IAAxB7F,EAAuB,uDAAf,GAAI2K,EAAW,uCACrD,OAAQA,EAAOvQ,MACb,KAAK9B,EAAMK,yBACT,OAAO,2BACFqH,GADL,IAEEzC,aAAa,aAAKoN,EAAOtQ,WAG7B,KAAK/B,EAAMO,uBACT,OAAO,2BACFmH,GADL,IAEE6K,OAAQF,EAAOtQ,UAGnB,QACE,OAAO2F,IJIXwG,KKpB4B,WAAyB,IAAxBxG,EAAuB,uDAAf,GAAI2K,EAAW,uCACpD,OAAQA,EAAOvQ,MACb,KAAK9B,EAAMmB,oBACT,OAAO,2BACFuG,GADL,IAEEuG,SAAUoE,EAAOtQ,UAQrB,QACE,OAAO2F,ILOXiJ,KMrB8B,WAAyB,IAAxBjJ,EAAuB,uDAAf,GAAI2K,EAAW,uCACpD,OAAQA,EAAOvQ,MACX,KAAK9B,EAAMqB,mBACP,OAAO,2BACAqG,GADP,IAEI+I,OAAQ4B,EAAOtQ,UAEvB,KAAK/B,EAAMoB,oBACP,OAAO,2BACAsG,GADP,IAEI6I,QAAQ,aAAK8B,EAAOtQ,WAG5B,QACI,OAAO2F,INQjBuC,KOtB6B,WAAyB,IAAxBvC,EAAuB,uDAAf,GAAI2K,EAAW,uCACnD,OAAQA,EAAOvQ,MACX,KAAK9B,EAAM0B,qCACP,OAAO,2BACAgG,GADP,IAEIS,SAAS,aAAKkK,EAAOtQ,WAE7B,KAAK/B,EAAMwS,gCACP,OAAO,2BACA9K,GADP,IAEI+K,iBAAiB,aAAKJ,EAAOtQ,WAGrC,QACI,OAAO2F,MPWNgL,GAAQC,aACnBR,GACAJ,GAAiBa,aAAgBC,QQxBtBC,GAAS,WACpB,OACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,OCJNK,IAASC,OAAO,cAAC,GAAD,IAAYxG,SAASyG,eAAe,U","file":"static/js/main.3e9fdca9.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDUGKdITlmFd_OsNHsf_vRa1_9i5Y_m0NQ\",\n    authDomain: \"morevalue-f6170.firebaseapp.com\",\n    projectId: \"morevalue-f6170\",\n    storageBucket: \"morevalue-f6170.appspot.com\",\n    messagingSenderId: \"738327980225\",\n    appId: \"1:738327980225:web:f0e12eae6aca8b8f4fcc40\"\n  };\n  \nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\n\nexport {\n    db,\n    firebase\n}","export const types = {\n  login: \"[Auth] Login\",\n  logout: \"[Auth] Logout\",\n\n  //user types\n  //obtiene los datos del usuario de la BD\n  loadUserData: \"[User] Load Logged User Data\",\n  //Quita el usuario del state\n  userLogout: \"[User] Logout\",\n\n  //Trabajadores\n  getTrabajadoresIdEmpresa: \"[Emp] Get Trabajadores ID Empresa\",\n  trabajadoresLogout: \"[Emp] Limpiar Trabajadores\",\n  crearTrabajadorEmpresa: \"[Emp] Trabajador Creado\",\n  trabajadorExist: \"[Emp] Trabajador ya está en DB\",\n\n  //examenes\n  getExamenesPorVencerPorIdEmpresa: \"[Exam] Get Examenes por Vencer ID Empresa\",\n  getExamenesPorVencerTodasLasEmpresas: \"[Exam] Get Examenes por Vencer todas las Empresas\",\n  crearNuevoExamen: \"[Exam] Crear Nuevo Examen ID Trabajador\",\n  getExamenUrl: \"[Exam] Get Examen URL\",\n  removeExamenUrl: \"[Exam] Remove Examen URL\",\n  examenesLogout: \"[Exam] Limpiar Examenes\",\n  getTodoExamenesTrabajadorID: \"[Exam] Examenes por idTrabajador\",\n\n\n  //UI\n  uiOpenModal: \"[UI] Open Modal\",\n  uiCloseModal: \"[UI] Close Modal\",\n\n  //empresas\n  crearNuevaEmpresa: \"[EMP] Crear Nueva Empresa\",\n  getTodasLasEmpresas: \"[EMP] Get Todas Las Empresa\",\n\n  //Equipos\n  getEquiposIdEmpresa: \"[Emp] Get Equipos ID Empresa\",\n  crearEquipoEmpresa: \"[Emp] Equipo Creado\",\n  equiposLogout: \"[Emp] Limpiar Equipos\",\n  equipoExist: \"[Emp] Equipo ya está en DB\",\n\n  //Permisos\n  getPermisosPorVencerIdEmpresas: '[PER] Permisos por vencer ID Empresa',\n  getTodoPermisosEquipoID: '[PER] Get todos Permisos Equipo ID',\n  getPermisosPorVencerTodasLasEmpresas: '[PER] Get todos Permisos por vencer todas las empresas',\n  crearNuevoPermiso: '[PER] Crear Nuevo Permiso'\n};\n","// import Swal from \"sweetalert2\";\n\nimport { firebase, db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, \"\"));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName,\n  },\n});\n\n//TODO: descomponer funcion\nexport const startRegisterWithEmailPasswordName = (\n  email,\n  password,\n  name,\n  rol,\n  empresa\n) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n\n        const userDatabase = {\n          isAdmin: rol === \"true\" ? true : false,\n          idEmpresa: empresa,\n          nombre: name,\n        };\n        //autologin:  después de crear, no se necesita acá\n        //dispatch(login(user.uid, user.displayName));\n        /**\n         * TODO: HACER DISPATCH QUE CREE EL USER EN LA BD\n         */\n\n        const doc = await db\n          .collection(\"usuarios\")\n          .doc(user.uid)\n          .set(userDatabase);\n        console.log(doc);\n      })\n      .catch((e) => {\n        console.log(e);\n        // Swal.fire(\"Error\", e.message, \"error\");\n      });\n  };\n};\n\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    //borra datos de auth en state\n    dispatch(logout());\n    //borra datos de user en state\n  };\n};\n\nexport const logout = () => ({\n  type: types.logout,\n});\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { startLoginEmailPassword } from \"../../actions/auth\";\nimport { useForm } from \"../../hooks/useForm\";\nimport \"./signin.css\";\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange] = useForm({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLoginEmailPassword(email, password));\n  };\n  return (\n    <div className=\"text-center\">\n      <main className=\"form-signin\">\n        <form onSubmit={handleLogin}>\n          <h1 className=\"h3 mb-3 fw-normal\">Ingreso Empresas</h1>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            placeholder=\"Correo Electrónico\"\n            required\n            autoFocus\n            onChange={handleInputChange}\n            value={email}\n          />\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            placeholder=\"Contraseña\"\n            required\n            onChange={handleInputChange}\n            value={password}\n          />\n          <div className=\"checkbox mb-3\"></div>\n          <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n            Ingresar\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startGetTrabajadoresIdEmpresa = (idEmpresa) => {\n  return async (dispatch) => {\n    const trabajadores = [];\n    db.collection(\"trabajadores\")\n      .where(\"idEmpresa\", \"==\", idEmpresa)\n      .get()\n      .then((snapTrabajadores) => {\n        snapTrabajadores.forEach((trabajador) => {\n          trabajadores.push({\n            id: trabajador.id,\n            ...trabajador.data(),\n          });\n        });\n        dispatch(getTrabajadoresIdEmpresa(trabajadores));\n      });\n  };\n};\n\nexport const getTrabajadoresIdEmpresa = (trabajadores) => ({\n  type: types.getTrabajadoresIdEmpresa,\n  payload: trabajadores,\n});\n\nexport const trabajadoresLogout = () => ({\n  type: types.trabajadoresLogout,\n});\n\nexport const startCrearTrabajadorEmpresa = (idEmpresa, idEmpleado, nombre) => {\n  return async (dispatch) => {\n    //crea usuario\n    db.collection(\"trabajadores\").doc(idEmpleado).set({\n      idEmpresa: idEmpresa,\n      nombre: nombre,\n    });\n    dispatch(crearTrabajadorEmpresa());\n    //actualizar la lista de usuarios de la empresa\n    dispatch(startGetTrabajadoresIdEmpresa(idEmpresa));\n  };\n};\n\nexport const crearTrabajadorEmpresa = () => ({\n  type: types.crearTrabajadorEmpresa,\n  payload: true,\n});\nexport const trabajadorExist = () => ({\n  type: types.crearTrabajadorEmpresa,\n  payload: false,\n});\n","export const fileUpload = async (file) => {\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/dgoxdpdrc/upload\";\n  const formData = new FormData();\n  formData.append(\"upload_preset\", \"morevalue\");\n  formData.append(\"folder\", \"pdf\");\n  formData.append(\"file\", file);\n  try {\n    const resp = await fetch(cloudUrl, {\n      method: \"POST\",\n      body: formData,\n    });\n    if (resp.ok) {\n      const cloudResp = await resp.json();\n      return cloudResp.secure_url;\n    } else {\n      throw await resp.json();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { types } from \"../types/types\";\n\n\n\nexport const startGetTodoExamenesTrabajadorID = (idTrabajador) => {\n  const examenes = [];\n  return async (dispatch) => {\n    await db\n      .collection(\"examenes\")\n      .where(\"idTrabajador\", \"==\", idTrabajador)\n      .get()\n      .then((snap) => {\n        snap.forEach((examen) => {\n          examenes.push({\n            id: examen.id,\n            ...examen.data(),\n          })\n        }\n        );\n      });\n    dispatch(getTodoExamenesTrabajadorID(examenes));\n  };\n}\n\nexport const getTodoExamenesTrabajadorID = (examenes) => ({\n  type: types.getTodoExamenesTrabajadorID,\n  payload: examenes,\n})\n\nexport const startGetExamenesPorVencerTodasLasEmpresas = () => {\n  var someDate = new Date();\n  var numberOfDaysToAdd = 90;\n  someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n  const newDate = someDate.getTime();\n  const examenes = [];\n  return async (dispatch) => {\n    await db\n      .collection(\"examenes\")\n      .where(\"fechaCaducidad\", \"<=\", newDate)\n      .get()\n      .then((snap) => {\n        snap.forEach((examen) => {\n          examenes.push({\n            id: examen.id,\n            ...examen.data(),\n          })\n        }\n        );\n      });\n    dispatch(getExamenesPorVencerTodasLasEmpresas(examenes));\n  };\n}\n\nexport const getExamenesPorVencerTodasLasEmpresas = (examenes) => ({\n  type: types.getExamenesPorVencerTodasLasEmpresas,\n  payload: examenes,\n});\n\n\nexport const startGetExamenesPorVencerPorIdEmpresa = (idEmpresa) => {\n  var someDate = new Date();\n  var numberOfDaysToAdd = 90;\n  someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n  const newDate = someDate.getTime();\n  const examenes = [];\n  return async (dispatch) => {\n    await db\n      .collection(\"examenes\")\n      .where(\"idEmpresa\", \"==\", idEmpresa)\n      //Calcular fecha a 60 días (se creo un filtro en firestore tambien)\n      .where(\"fechaCaducidad\", \"<=\", newDate)\n      .get()\n      .then((snap) => {\n        snap.forEach((examen) =>\n          examenes.push({\n            id: examen.id,\n            ...examen.data(),\n          })\n        );\n      });\n    dispatch(getExamenesPorVencerPorIdEmpresa(examenes));\n  };\n};\n\nexport const getExamenesPorVencerPorIdEmpresa = (examenes) => ({\n  type: types.getExamenesPorVencerPorIdEmpresa,\n  payload: examenes,\n});\n\nexport const startCrearNuevoExamen = (examen) => {\n  return async (dispatch) => {\n    const examenRef = db.collection(\"examenes\");\n    //agredar Datos\n    examenRef\n      .add(examen)\n      .then((examen) => {\n        console.log(\"Agregado: \", examen.id);\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n    dispatch(crearNuevoExamen(examen));\n  };\n};\n\nexport const crearNuevoExamen = (examen) => ({\n  type: types.crearNuevoExamen,\n  payload: examen,\n});\n\nexport const startUploadingExamen = (examenFile) => {\n  return async (dispatch) => {\n    const fileUrl = await fileUpload(examenFile);\n    dispatch(uploadingExamen(fileUrl));\n  };\n};\n\nexport const uploadingExamen = (fileUrl) => ({\n  type: types.getExamenUrl,\n  payload: fileUrl,\n});\n\nexport const removeExamenUrl = () => ({\n  type: types.removeExamenUrl,\n})\n\n\nexport const examenesLogout = () => ({\n  type: types.examenesLogout,\n});\n\nexport const startLogDescargas = (\n  idUsuario,\n  idEmpresa,\n  idTrabajador,\n  nombreExamen,\n  url\n) => {\n  return async () => {\n    await db\n      .collection(`registro/${idUsuario}/log`)\n      .add(\n        {\n          fechaDescarga: new Date().toLocaleDateString(),\n          id: idUsuario,\n          idEmpresa: idEmpresa,\n          idTrabajador: idTrabajador,\n          archivoDescargado: nombreExamen,\n          url: url,\n        },\n        { merge: true }\n      )\n      .then((ok) => {\n        console.log(\"Registro Ingresado: \", ok);\n      })\n      .catch((err) => {\n        console.log(\"Algo salió mal: \", err);\n      });\n  };\n};\n\n","// import Swal from \"sweetalert2\";\n\nimport { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startLoadUserData = (uid) => {\n  return async (dispatch) => {\n    const docRef = db.collection(\"usuarios\").doc(uid);\n    await docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          // console.log(doc.data());\n          const user = {\n            ...doc.data(),\n          };\n          dispatch(loadUserData(user));\n        } else {\n          console.log(\"no existe\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n//carga los datos del usuario en el store\nexport const loadUserData = (user) => ({\n  type: types.loadUserData,\n  payload: user,\n});\n//limpia el store\nexport const userLogout = () => ({\n  type: types.userLogout,\n});\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\nimport { trabajadoresLogout } from \"../../actions/employee\";\nimport { examenesLogout } from \"../../actions/exam\";\nimport { userLogout } from \"../../actions/user\";\n\nexport const Navbar = () => {\n  //obtiene el nombre\n  const { nombre } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n    dispatch(userLogout());\n    dispatch(trabajadoresLogout());\n    dispatch(examenesLogout());\n  };\n\n  return (\n    <div>\n      <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n        <div className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3 nav-link\">\n          {nombre}\n        </div>\n        <button\n          className=\"navbar-toggler position-absolute d-md-none collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#sidebarMenu\"\n          aria-controls=\"sidebarMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\">\n          </span>\n        </button>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap\">\n            <button className=\"btn nav-link\" onClick={handleLogout}>\n              Salir\n            </button>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n};\n","import { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\n\nexport const startGetPermisosPorVencerIdEmpresas = (idEmpresa) => {\n  var someDate = new Date();\n  var numberOfDaysToAdd = 90;\n  someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n  const newDate = someDate.getTime();\n  const permisos = [];\n  return async (dispatch) => {\n    await db\n      .collection(\"permisos\")\n      .where(\"idEmpresa\", \"==\", idEmpresa)\n      //Calcular fecha a 60 días (se creo un filtro en firestore tambien)\n      .where(\"fechaCaducidad\", \"<=\", newDate)\n      .get()\n      .then((snap) => {\n        snap.forEach((permiso) =>\n        permisos.push({\n            id: permiso.id,\n            ...permiso.data(),\n          })\n        );\n      });\n    dispatch(getPermisosPorVencerIdEmpresas(permisos));\n  };\n};\n\nexport const getPermisosPorVencerIdEmpresas = (examenes) => ({\n  type: types.getPermisosPorVencerIdEmpresas,\n  payload: examenes,\n});\n\n\nexport const startGetPermisosPorVencerTodasLasEmpresas = () => {\n    var someDate = new Date();\n    var numberOfDaysToAdd = 90;\n    someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n    const newDate = someDate.getTime();\n    const permisos = [];\n    return async (dispatch) => {\n      await db\n        .collection(\"permisos\")\n        .where(\"fechaCaducidad\", \"<=\", newDate)\n        .get()\n        .then((snap) => {\n          snap.forEach((permiso) => {\n            permisos.push({\n              id: permiso.id,\n              ...permiso.data(),\n            })\n          }\n          );\n        });\n      dispatch(getPermisosPorVencerTodasLasEmpresas(permisos));\n    };\n  }\n  \n  export const getPermisosPorVencerTodasLasEmpresas = (permisos) => ({\n    type: types.getPermisosPorVencerTodasLasEmpresas,\n    payload: permisos,\n  });\n\n  export const startGetTodoPermisosEquipoID = (idEquipo) => {\n    const permisos = [];\n    return async (dispatch) => {\n      await db\n        .collection(\"permisos\")\n        .where(\"idEquipo\", \"==\", idEquipo)\n        .get()\n        .then((snap) => {\n          snap.forEach((permiso) => {\n            permisos.push({\n              id: permiso.id,\n              ...permiso.data(),\n            })\n          }\n          );\n        });\n      dispatch(getTodoPermisosEquipoID(permisos));\n    };\n   }\n  \n  export const getTodoPermisosEquipoID = (permisos) =>({\n    type: types.getTodoPermisosEquipoID,\n    payload: permisos,\n  })\n\n  export const startCrearNuevoPermiso = (permiso) => {\n    return async (dispatch) => {\n      const permisoRef = db.collection(\"permisos\");\n      //agredar Datos\n      permisoRef\n        .add(permiso)\n        .then((permiso) => {\n          console.log(\"Agregado: \", permiso.id);\n        })\n        .catch((error) => {\n          console.log(\"Error: \", error);\n        });\n      dispatch(crearNuevoExamen(permiso));\n    };\n  };\n  \n  export const crearNuevoExamen = (permiso) => ({\n    type: types.crearNuevoPermiso,\n    payload: permiso,\n  });","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogDescargas } from \"../../../actions/exam\";\nexport const ExamenScreen = ({ id, ...examen }) => {\n\n\n  /**\n   * TODO: al presionar el rut del trabajador ir a la págiba del trabajador\n   */\n\n\n  const dispatch = useDispatch();\n  const { idEmpresa, idTrabajador, fechaCaducidad, url, nombreExamen } = examen;\n  const { nombre, idUsuario } = useSelector((state) => state.user);\n  const handleDownload = () => {\n    console.log(\n      \"archivo descargado: \" + nombreExamen + \"descargado por: \" + nombre\n    );\n    dispatch(\n      startLogDescargas(idUsuario, idEmpresa, idTrabajador, nombreExamen, url)\n    );\n  };\n\n  const calcularFecha = (fechaCaducidad) => {\n    const p30 = new Date();\n    const p60 = new Date()\n    const p90 = new Date()\n    p30.setDate(p30.getDate() + 30)\n    p60.setDate(p60.getDate() + 60)\n    p90.setDate(p90.getDate() + 90)\n    if (fechaCaducidad <= p30.getTime()) {\n      return `red`;\n    }\n    if (fechaCaducidad <= p60.getTime() && fechaCaducidad <= p90.getTime()) {\n      return `yellow`;\n    }\n    if (fechaCaducidad > p90.getTime()) {\n      return `green`;\n    }\n  }\n  return (\n    <tr>\n      <td><i className=\"fas fa-circle\" style={{ color: `${calcularFecha(fechaCaducidad)}`, border: '1px solid black', borderRadius: '50px' }}></i></td>\n      <td>{idEmpresa}</td>\n      <td /*onClick={handleSearchEmployee}*/>{idTrabajador}</td>\n      <td>{new Date(fechaCaducidad).toLocaleDateString()}</td>\n      <td>{nombreExamen}</td>\n\n      <td>\n        <a\n          className=\"data\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          onClick={handleDownload}\n        >\n          descargar\n        </a>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react'\n\nexport const PermisosScreen = ({ id, ...permiso }) => {\n    const { idEmpresa, idEquipo, fechaCaducidad, url, nombrePermiso } = permiso;\n    const calcularFecha = (fechaCaducidad) => {\n        const p30 = new Date();\n        const p60 = new Date()\n        const p90 = new Date()\n        p30.setDate(p30.getDate() + 30)\n        p60.setDate(p60.getDate() + 60)\n        p90.setDate(p90.getDate() + 90)\n        if (fechaCaducidad <= p30.getTime()) {\n            return `red`;\n        }\n        if (fechaCaducidad > p30.getTime() && fechaCaducidad <= p90.getTime()) {\n            return `yellow`;\n        }\n        if (fechaCaducidad > p90.getTime()) {\n            return `green`;\n        }\n    }\n    return (\n        <tr>\n            <td><i className=\"fas fa-circle\" style={{ color: `${calcularFecha(fechaCaducidad)}`, border: '1px solid black', borderRadius: '50px' }}></i></td>\n            <td>{idEmpresa}</td>\n            <td>{idEquipo}</td>\n            <td>{new Date(fechaCaducidad).toLocaleDateString()}</td>\n            <td>{nombrePermiso}</td>\n\n            <td>\n                <a\n                    className=\"data\"\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                // onClick={handleDownload}\n                >\n                    descargar\n        </a>\n            </td>\n        </tr >\n    );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startGetPermisosPorVencerTodasLasEmpresas } from \"../../actions/permisos.actions\";\nimport { startGetExamenesPorVencerTodasLasEmpresas } from \"../../actions/exam\";\nimport { ExamenScreen } from \"../ui/examenes/ExamenScreen\";\nimport { PermisosScreen } from \"./permisos/PermisosScreen\";\n\nexport const DashBoardScreen = () => {\n  const dispatch = useDispatch();\n  const { examenes } = useSelector((state) => state.exam);\n  const { permisos } = useSelector((state) => state.perm);\n  return (\n    <div className=\"container-fluid\">\n      <h1>Resumen:</h1>\n      <hr />\n      <h2>\n        Documentos por Vencer{\" \"}\n        <i\n          className=\"fas fa-sync fa-xs\"\n          style={{ cursor: \"pointer\", color: \"green\" }}\n          onClick={() => {\n            dispatch(startGetExamenesPorVencerTodasLasEmpresas());\n            dispatch(startGetPermisosPorVencerTodasLasEmpresas());\n          }}\n        ></i>\n      </h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th scope='column'>Estado</th>\n            <th scope=\"col\" data-sortable=\"true\" data-field=\"id\">Rut Empresa</th>\n            <th scope=\"col\">Rut Trabajador</th>\n            <th scope=\"col\">Fecha Caducidad</th>\n            <th scope=\"col\">Nombre Documento</th>\n            <th scope=\"col\">Descargar</th>\n          </tr>\n        </thead>\n        <tbody>\n          {examenes ? (\n            examenes.map((examen) => (\n              <ExamenScreen key={examen.id} {...examen} />\n            ))\n          ) : (\n              <>Loading...</>\n            )}\n        </tbody>\n\n      </table>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th scope='column'>Estado</th>\n            <th scope=\"col\" data-sortable=\"true\" data-field=\"id\">Rut Empresa</th>\n            <th scope=\"col\">ID Equipo</th>\n            <th scope=\"col\">Fecha Caducidad</th>\n            <th scope=\"col\">Nombre Documento</th>\n            <th scope=\"col\">Descargar</th>\n          </tr>\n        </thead>\n        <tbody>\n          {permisos ? (\n            permisos.map((permiso) => (\n              <PermisosScreen key={permiso.id} {...permiso} />\n            ))\n          ) : (\n              <>Loading...</>\n            )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n  payload: true,\n});\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n  payload: false,\n});\n\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport Modal from \"react-modal\";\nimport \"./modal.css\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../../actions/ui\";\nimport { removeExamenUrl, startCrearNuevoExamen, startGetTodoExamenesTrabajadorID } from \"../../../actions/exam\";\nimport { startUploadingExamen } from \"../../../actions/exam\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst now = moment().minutes(0).seconds(0);\nModal.setAppElement(\"#root\");\n\nexport const CalendarModal = ({ idTrabajador, idEmpresa }) => {\n  const dispatch = useDispatch();\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { url } = useSelector((state) => state.exam);\n  const [dateStart, setDateStart] = useState(now.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n  const [formValues, setFormValues] = useState({\n    nombreExamen: \"\",\n    fechaCaducidad: now.toDate(),\n  });\n  const { nombreExamen } = formValues;\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e);\n    setFormValues({\n      ...formValues,\n      fechaCaducidad: e,\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    if (nombreExamen.trim().length < 2) {\n      return setTitleValid(false);\n    }\n    setTitleValid(true);\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(removeExamenUrl());\n    // setIsOpen(false);\n  };\n\n  const handleNewExamen = () => {\n    dispatch(\n      startCrearNuevoExamen({\n        idTrabajador: idTrabajador,\n        idEmpresa: idEmpresa,\n        nombreExamen: nombreExamen,\n        fechaCaducidad: new Date(formValues.fechaCaducidad).getTime(),\n        fechaCreacion: new Date().getTime(),\n        url: url,\n      })\n    );\n    //carga de inmediato el nuevo examen\n    Swal.fire(\"Examen Creado con Éxito\", \"\", \"success\");\n    dispatch(uiCloseModal());\n    startGetTodoExamenesTrabajadorID(idTrabajador)\n    dispatch(removeExamenUrl());\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      //si se adjuntó archivo, obtener la URL\n      dispatch(startUploadingExamen(file));\n    }\n  };\n\n  const handleArchivoExamenchange = () => {\n    document.querySelector(\"#fileSelector\").click();\n  };\n  //   closeModal();\n  return (\n    <Modal\n      isOpen={modalOpen}\n      //   onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n      closeTimeoutMS={500}\n\n    >\n      <h1> Nuevo examen </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && \"is-invalid\"}`}\n            placeholder=\"Nombre del examen\"\n            name=\"nombreExamen\"\n            autoComplete=\"off\"\n            value={nombreExamen}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Fecha Vencimiento</label>\n          <DateTimePicker\n            name=\"vencimiento\"\n            className=\"form-control\"\n            value={dateStart}\n            onChange={handleStartDateChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Adjuntar Archivo</label>\n          <br />\n          <input\n            id=\"fileSelector\"\n            type=\"file\"\n            name=\"file\"\n            style={{ display: \"none\" }}\n            onChange={handleFileChange}\n            required\n          />\n          <button\n            className=\"btn btn-success\"\n            onClick={handleArchivoExamenchange}\n          >\n            Archivo Examen\n          </button>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n          style={{\n            marginTop: \"10px\",\n            display: `${url ? \"\" : \"none\"}`,\n          }}\n          onClick={handleNewExamen}\n        >\n          <i className=\"far fa-save\" style={{ cursor: \"pointer\" }}></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"../../hooks/useForm\";\nimport Swal from \"sweetalert2\";\n\nimport { CalendarModal } from \"../ui/modal/CalendarModal\";\n\nimport { uiOpenModal } from \"../../actions/ui\";\nimport { ExamenScreen } from \"../ui/examenes/ExamenScreen\";\nimport { startGetTodoExamenesTrabajadorID } from \"../../actions/exam\";\n\nexport const EditEmployeeScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange, reset] = useForm({\n    idTrabajador: \"\",\n  });\n  const { idTrabajador } = formValues;\n\n\n  useEffect(() => {\n    dispatch(startGetTodoExamenesTrabajadorID(idTrabajador));\n  }, [dispatch, idTrabajador])\n\n  const [exist, setExist] = useState(false);\n  const [datosTrabajador, setDatosTrabajador] = useState([]);\n  const [datosExamenes, setDatosExamenes] = useState([]);\n  const { trabajadores } = useSelector((state) => state.trab);\n  const { examenesIdTrabajador } = useSelector((state) => state.exam);\n  const { idEmpresa } = useSelector((state) => state.user);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    buscar(idTrabajador);\n  };\n  const buscar = (idTrabajador) => {\n    const tra = trabajadores.filter((employee) => employee.id === idTrabajador);\n    setDatosTrabajador(tra);\n    const ex = examenesIdTrabajador.filter(\n      (examen) => examen.idTrabajador === idTrabajador\n    );\n    setDatosExamenes(ex);\n\n    if (tra.length > 0) {\n      // setDatosTrabajador(tra);\n      // setDatosExamenes(ex);\n      setExist(true);\n    } else {\n      Swal.fire(\"Trabajador No Encontrado\", \"\", \"warning\");\n      //evita error de busqueda de no existente, después de encontrado\n      setExist(false)\n      reset();\n    }\n  };\n  const handleModal = () => {\n    dispatch(uiOpenModal());\n  };\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <h1 className=\"h3 mb-3 fw-normal\">Buscar Trabajador</h1>\n        <hr />\n        <input\n          type=\"text\"\n          id=\"idTrabajador\"\n          name=\"idTrabajador\"\n          className=\"form-control\"\n          placeholder=\"Ingrese rut, ej: 123456789\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={idTrabajador}\n        />\n        <button\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n          type=\"submit\"\n        >\n          Buscar\n        </button>\n      </form>\n\n      {exist ? (\n        <div>\n          <h3>Datos del Trabajador</h3>\n          <div className=\"datosTrabajador\">\n            {datosTrabajador ? (\n              <div>Nombre: {datosTrabajador[0].nombre}</div>\n            ) : (\n                <div></div>\n              )}\n          </div>\n          <div>\n            <h3>\n              Docuementos{\" \"}\n              <span style={{ color: \"green\", cursor: \"pointer\" }}>\n                <i className=\"fas fa-plus-circle\" onClick={handleModal}>\n                  {\" \"}\n                </i>\n              </span>\n            </h3>\n          </div>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Rut Empresa</th>\n                <th scope=\"col\">Rut Trabajador</th>\n                <th scope=\"col\">Fecha Caducidad</th>\n                <th scope=\"col\">Nombre Documento</th>\n                <th scope=\"col\">Descargar</th>\n              </tr>\n            </thead>\n            <tbody>\n              {datosExamenes ? (\n                datosExamenes.map((examen) => (\n                  <ExamenScreen key={examen.id} {...examen} />\n                ))\n              ) : (\n                  <>Loading...</>\n                )}\n            </tbody>\n          </table>\n          <CalendarModal idTrabajador={idTrabajador} idEmpresa={idEmpresa} />\n        </div>\n      ) : (\n          <div></div>\n        )}\n    </div>\n  );\n};\n","import React from 'react'\n\nexport const DropDown = (data) => {\n    //nombre Empresa\n    const { nombre, idEmpresa } = data;\n    return (\n        \n        <option key={idEmpresa} value={idEmpresa} className='dropdown-item'>{nombre}</option>\n    )\n}\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startCrearTrabajadorEmpresa } from \"../../actions/employee\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { DropDown } from \"../ui/drop-down/DropDown\";\n\nexport const CreateEmployeeScreen = () => {\n  // const { idEmpresa } = useSelector((state) => state.user);\n  const { trabajadores } = useSelector((state) => state.trab);\n  const { empresas } = useSelector(state => state.empr);\n  const dispatch = useDispatch();\n\n\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpleado: \"\",\n    nombre: \"\",\n    idEmpresa: \"\",\n  });\n\n  const { idEmpleado, nombre, idEmpresa } = formValues;\n  console.log(formValues);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const tra = trabajadores.filter((employee) => employee.id === idEmpleado);\n    if (tra.length > 0) {\n      Swal.fire(\"Ya existe este trabajador\", '', \"error\");\n      reset();\n    } else {\n      dispatch(startCrearTrabajadorEmpresa(idEmpresa, idEmpleado, nombre));\n      Swal.fire(\"Trabajador Creado con éxito\", \"\", \"success\");\n      reset();\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"h3 mb-3 fw-normal\">Nuevo Trabajador</h1>\n        <hr />\n        <select\n          id='idEmpresa'\n          name='idEmpresa'\n          className=\"form-select\"\n          required\n          value={idEmpresa}\n          onChange={handleInputChange}\n\n        >\n          <option defaultValue key='default' value='default' className='dropdown-item'>Selecciona una empresa</option>\n          {\n            empresas.map(empresa => <DropDown key={empresa.idEmpresa} {...empresa} />)\n          }\n        </select>\n        <input\n          type=\"text\"\n          id=\"idEmpleado\"\n          name=\"idEmpleado\"\n          className=\"form-control\"\n          placeholder=\"Ingrese Rut sin puntos, ni guión\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={idEmpleado}\n        />\n        <input\n          type=\"text\"\n          id=\"nombre\"\n          name=\"nombre\"\n          className=\"form-control\"\n          placeholder=\"Nombre\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={nombre}\n        />\n        <button\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\" }}\n          type=\"submit\"\n        >\n          Crear Trabajador\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startGetTodasLasEmpresas = () => {\n  return async (dispatch) => {\n    const empresas = [];\n    db.collection(\"empresas\")\n      .get()\n      .then((empresasRef) => {\n        empresasRef.forEach((empresa) => {\n          empresas.push({\n            idEmpresa: empresa.id,\n            ...empresa.data(),\n          });\n        });\n        dispatch(getTodasLasEmpresas(empresas));\n      });\n  };\n};\n\nexport const getTodasLasEmpresas = (empresas) => ({\n  type: types.getTodasLasEmpresas,\n  payload: empresas,\n});\n\nexport const startCrearNuevaEmpresa = (idEmpresa, empresa) => {\n  return async (dispatch) => {\n    await db.collection(\"empresas\").doc(idEmpresa).set(empresa);\n    // dispatch(crearNuevaEmpresa(empresa));\n    dispatch(startGetTodasLasEmpresas());\n  };\n};\n\nexport const startUpdateEmpresa = (empresa) => {\n  const { idEmpresa } = empresa\n  return async (dispatch) => {\n    const docRef = await db.collection('empresas').doc(idEmpresa).get();\n    if (docRef.exists) {\n      dispatch(startCrearNuevaEmpresa(idEmpresa, empresa))\n      // await db.collection('empresas').doc(idEmpresa).set({\n      //   idEmpresa: idEmpresa,\n      //   nombre: nombre,\n      // })\n      //   .then(console.log('Actualizado: ', idEmpresa))\n      //   .catch(error => {\n      //     console.log('Ocurrió un error: ', error);\n      //   })\n      // dispatch(updateEmpresa(idEmpresa, nombre))\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport const updateEmpresa = (idEmpresa, nombre) => ({\n  types: types.updateEmpresa,\n  payload: [idEmpresa, nombre]\n})\n\n//TODO: updateEmpresa\n\n// export const crearNuevaEmpresa = (empresa) => ({\n//   type: types.crearNuevaEmpresa,\n//   payload: empresa,\n// });\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startCrearNuevaEmpresa } from \"../../actions/empresa.actions\";\nimport { useForm } from \"../../hooks/useForm\";\n\nexport const CreateEmpresaScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpresa: \"\",\n    nombre: \"\",\n  });\n  const { empresas } = useSelector((state) => state.empr);\n  const { idEmpresa, nombre } = formValues;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const emp = empresas.filter((empresa) => empresa.idEmpresa === idEmpresa);\n    if (emp.length > 0) {\n      Swal.fire(\"Ya existe esta Empresa\", \"\", \"error\");\n      reset();\n    } else if (idEmpresa < 9) {\n      Swal.fire(\"El rut proporcionado es muy corto\", \"\", \"error\");\n      reset();\n    } else {\n      dispatch(\n        startCrearNuevaEmpresa(idEmpresa, {\n          idEmpresa: idEmpresa,\n          nombre: nombre,\n        })\n      );\n      Swal.fire(\"Empresa Creada con éxito\", \"\", \"success\");\n      reset();\n    }\n  };\n\n  return (\n    <div>\n      <h3>Crear Empresa</h3>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          id=\"idEmpresa\"\n          name=\"idEmpresa\"\n          type=\"text\"\n          value={idEmpresa}\n          onChange={handleInputChange}\n          className=\"form-control\"\n          placeholder=\"Rut Empresa sin puntos ni guión\"\n          required\n        />\n        <input\n          id=\"nombre\"\n          name=\"nombre\"\n          type=\"text\"\n          value={nombre}\n          onChange={handleInputChange}\n          className=\"form-control\"\n          placeholder=\"Nombre Empresa\"\n          required\n        />\n        <button\n          type=\"Submit\"\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n        >\n          crear\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { Autocomplete } from '@material-ui/lab';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { startUpdateEmpresa } from \"../../actions/empresa.actions\";\nimport { useForm } from \"../../hooks/useForm\";\n\nexport const EditEmpresaScreen = () => {\n  const dispatch = useDispatch()\n  const { empresas } = useSelector((state) => state.empr);\n  const [datosEmpresa, setDatosEmpresa] = useState();\n  const [exist, setExist] = useState(false);\n  const [editable, setEditable] = useState(false);\n  /**\n   *  Controles value, inputValue \n   */\n  const [value, setValue] = useState(empresas[0])\n  const [inputValue, setInputValue] = useState('')\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpresa: \"\",\n    nombre: \"\"\n  });\n\n  const { idEmpresa, nombre } = formValues;\n  console.log(formValues);\n  const handleSearch = () => {\n    buscar(idEmpresa);\n  };\n  const buscar = (idEmpresa) => {\n    const emp = empresas.filter((empresa) => empresa.idEmpresa === idEmpresa);\n    if (emp.length > 0) {\n      setDatosEmpresa(emp);\n      setExist(true);\n      setEditable(false);\n    } else {\n      Swal.fire(\"Empresa No Encontrada\", \"\", \"warning\");\n      setExist(false);\n      reset();\n    }\n  };\n\n  const handleEdit = () => {\n    setEditable(true);\n  };\n\n  const handleUpdate = (event) => {\n    event.preventDefault();\n    if (nombre.length <= 1) {\n      Swal.fire(\"El nombre es muy corto\", \"\", \"info\");\n      return;\n    }\n    console.log(value.idEmpresa);\n    /**\n     * TODO: limpiar el formulario al actualizar\n     */\n    dispatch(startUpdateEmpresa({ idEmpresa: idEmpresa ? idEmpresa : value.idEmpresa, nombre: nombre }))\n      ? (Swal.fire(\"La Empresa se actualizó con éxito\", \"\", 'success'))\n      : (Swal.fire(\"Hubo un problema\", \"No se pudo actualizar\", 'err'))\n    reset()\n    setExist(false)\n    setValue(empresas[0])\n  };\n\n  // const filtrarEmpresa = (sug) => {\n  //   const filtered = empresas.filter(emp => {\n  //     return emp.nombre.toLowerCase().includes(sug.toLowerCase());\n  //   })\n  //   console.log(filtered);\n  // }\n  return (\n    <div className=\"container-fluid\">\n\n      <div className=\"row\">\n        <h3>Buscar Empresa</h3>\n        <hr />\n        <div className=\"col-md-6\">\n          <h4>Por Rut</h4>\n          <input\n            name=\"idEmpresa\"\n            id=\"idEmpresa\"\n            value={idEmpresa}\n            onChange={handleInputChange}\n            className=\"form-control\"\n            required\n            placeholder=\"Ingrese Rut sin puntos ni guión\"\n          />\n\n          <button\n            className=\"w-100 btn btn-lg btn-primary\"\n            style={{ marginTop: \"10px\" }}\n            type=\"submit\"\n            onClick={handleSearch}\n          >\n            Buscar\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Por Nombre</h4>\n          <Autocomplete\n            id=\"nombreEmpresaAutoComplete\"\n            name='nombreEmpresaAutoComplete'\n            options={empresas}\n            getOptionLabel={(option) => option.nombre}\n            style={{ width: 300 }}\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n              if (value === null) {\n                setValue(empresas[0])\n              }\n            }}\n            inputValue={inputValue}\n            onInputChange={(event, newInputValue) => {\n              setInputValue(newInputValue);\n            }}\n            renderInput={(params) =>\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                className=\"form-control\"\n              />}\n          />\n          <button\n            className=\"w-100 btn btn-lg btn-primary\"\n            style={{ marginTop: \"10px\" }}\n            type=\"submit\"\n            onClick={() => buscar(value.idEmpresa)}\n          >\n            Buscar\n          </button>\n\n\n        </div>\n        {exist ? (\n\n          <div className=\"col-md-12\">\n            <div style={{ marginTop: \"20px\" }}>\n\n              <h3>\n                <span>\n                  Datos de la Empresa{\" \"}\n                  <i\n                    className=\"fas fa-edit\"\n                    style={{ color: \"green\", cursor: \"pointer\" }}\n                    onClick={handleEdit}\n                  ></i>\n                </span>\n              </h3>\n            </div>\n            <div>\n              <form onSubmit={handleUpdate}>\n                <label>Nombre</label>\n                <input\n                  name=\"nombre\"\n                  id=\"nombre\"\n                  value={nombre}\n                  onChange={handleInputChange}\n                  className=\"form-control\"\n                  readOnly={editable ? false : true}\n                  required\n                  placeholder={`${datosEmpresa[0].nombre} `}\n                />\n                {editable && (\n                  <button\n                    className=\"w-100 btn btn-lg btn-primary\"\n                    style={{ marginTop: \"10px\" }}\n                    type=\"submit\"\n                  >\n                    Guardar Cambios\n                  </button>\n                )}\n              </form>\n            </div>\n          </div>\n        ) : (\n            <div></div>\n          )}\n      </div>\n    </div >\n  );\n};\n","import { db } from '../firebase/firebase-config'\nimport { types } from '../types/types';\n\nexport const startCrearEquipoEmpresa = (idEmpresa, idEquipo, nombre) => {\n    return async (dispatch) => {\n        //crea equipo\n        db.collection(\"equipos\").doc(idEquipo).set({\n            idEmpresa: idEmpresa,\n            nombre: nombre,\n        });\n        dispatch(crearEquipoEmpresa());\n        //actualizar la lista de equipos de la empresa\n        dispatch(startGetEquiposIdEmpresa(idEmpresa));\n    };\n};\n\nexport const crearEquipoEmpresa = () => ({\n    type: types.crearEquipoEmpresa,\n    payload: true,\n});\n\nexport const startGetEquiposIdEmpresa = (idEmpresa) => {\n    return async (dispatch) => {\n        const equipos = [];\n        db.collection(\"equipos\")\n            .where(\"idEmpresa\", \"==\", idEmpresa)\n            .get()\n            .then((snapEquipos) => {\n                snapEquipos.forEach((equipo) => {\n                    equipos.push({\n                        id: equipo.id,\n                        ...equipo.data(),\n                    });\n                });\n                dispatch(getEquiposIdEmpresa(equipos));\n            });\n    };\n};\n\nexport const getEquiposIdEmpresa = (equipos) => ({\n    type: types.getEquiposIdEmpresa,\n    payload: equipos,\n});","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { DropDown } from \"../ui/drop-down/DropDown\";\nimport { startCrearEquipoEmpresa } from \"../../actions/equipos.actions\";\n\nexport const CreateEquipmentScreen = () => {\n    const { equipos } = useSelector(state => state.equi)\n    const { empresas } = useSelector(state => state.empr);\n    const dispatch = useDispatch();\n\n\n    const [formValues, handleInputChange, reset] = useForm({\n        idEmpresa: \"\",\n        idEquipo: \"\",\n        nombre: \"\",\n    });\n\n    const { idEquipo, nombre, idEmpresa } = formValues;\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const eqp = equipos.filter(equipo => equipo.id === idEquipo);\n        if (eqp.length > 0) {\n            Swal.fire(\"Ya existe este equipo\", '', \"error\");\n            reset();\n        } else {\n            dispatch(startCrearEquipoEmpresa(idEmpresa, idEquipo.toUpperCase(), nombre));\n            Swal.fire(\"Equipo Creado con éxito\", \"\", \"success\");\n            reset();\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <h1 className=\"h3 mb-3 fw-normal\">Nuevo Eqiupo</h1>\n                <hr />\n                <select\n                    id='idEmpresa'\n                    name='idEmpresa'\n                    className=\"form-select\"\n                    required\n                    value={idEmpresa}\n                    onChange={handleInputChange}\n\n                >\n                    <option defaultValue key='default' value='default' className='dropdown-item'>Selecciona una empresa</option>\n                    {\n                        empresas.map(empresa => <DropDown key={empresa.idEmpresa} {...empresa} />)\n                    }\n                </select>\n                <input\n                    type=\"text\"\n                    id=\"idEquipo\"\n                    name=\"idEquipo\"\n                    className=\"form-control\"\n                    placeholder=\"Ingrese patente o código del equipo\"\n                    required\n                    autoFocus\n                    onChange={handleInputChange}\n                    value={idEquipo}\n                />\n                <input\n                    type=\"text\"\n                    id=\"nombre\"\n                    name=\"nombre\"\n                    className=\"form-control\"\n                    placeholder=\"Nombre\"\n                    required\n                    autoFocus\n                    onChange={handleInputChange}\n                    value={nombre}\n                />\n                <button\n                    className=\"w-100 btn btn-lg btn-primary\"\n                    style={{ marginTop: \"10px\" }}\n                    type=\"submit\"\n                >\n                    Crear Eqiupo\n        </button>\n            </form>\n        </div>\n    );\n};\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport Modal from \"react-modal\";\nimport \"./modal.css\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../../actions/ui\";\nimport { removeExamenUrl, startUploadingExamen } from \"../../../actions/exam\";\nimport { startCrearNuevoPermiso, startGetTodoPermisosEquipoID } from \"../../../actions/permisos.actions\";\n\nconst customStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n    },\n};\nconst now = moment().minutes(0).seconds(0);\nModal.setAppElement(\"#root\");\n\nexport const PermisosModal = ({ idEquipo, idEmpresa }) => {\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector((state) => state.ui);\n    const { url } = useSelector((state) => state.exam);\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n    const [formValues, setFormValues] = useState({\n        nombrePermiso: \"\",\n        fechaCaducidad: now.toDate(),\n    });\n    const { nombrePermiso } = formValues;\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            fechaCaducidad: e,\n        });\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        if (nombrePermiso.trim().length < 2) {\n            return setTitleValid(false);\n        }\n        setTitleValid(true);\n    };\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(removeExamenUrl());\n        // setIsOpen(false);\n    };\n    const handleNewPermiso = () => {\n        dispatch(\n            startCrearNuevoPermiso({\n                idEquipo: idEquipo,\n                idEmpresa: idEmpresa,\n                nombrePermiso: nombrePermiso,\n                fechaCaducidad: new Date(formValues.fechaCaducidad).getTime(),\n                fechaCreacion: new Date().getTime(),\n                url: url,\n            })\n        );\n        //carga de inmediato el nuevo examen\n        Swal.fire(\"Permiso Creado con Éxito\", \"\", \"success\");\n        dispatch(uiCloseModal());\n        startGetTodoPermisosEquipoID(idEquipo)\n        dispatch(removeExamenUrl());\n        \n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            //si se adjuntó archivo, obtener la URL\n            dispatch(startUploadingExamen(file));\n        }\n    };\n\n    const handleArchivoExamenchange = () => {\n        document.querySelector(\"#fileSelector\").click();\n    };\n    //   closeModal();\n    return (\n        <Modal\n            isOpen={modalOpen}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel=\"Example Modal\"\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n            closeTimeoutMS={500}\n\n        >\n            <h1> Nuevo Permiso </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n                <div className=\"form-group\">\n                    <label>Nombre</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && \"is-invalid\"}`}\n                        placeholder=\"Nombre del permiso\"\n                        name=\"nombrePermiso\"\n                        autoComplete=\"off\"\n                        value={nombrePermiso}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Fecha Vencimiento</label>\n                    <DateTimePicker\n                        name=\"vencimiento\"\n                        className=\"form-control\"\n                        value={dateStart}\n                        onChange={handleStartDateChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Adjuntar Archivo</label>\n                    <br />\n                    <input\n                        id=\"fileSelector\"\n                        type=\"file\"\n                        name=\"file\"\n                        style={{ display: \"none\" }}\n                        onChange={handleFileChange}\n                        required\n                    />\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={handleArchivoExamenchange}\n                    >\n                        Archivo Permiso\n          </button>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                    style={{\n                        marginTop: \"10px\",\n                        display: `${url ? \"\" : \"none\"}`,\n                    }}\n                    onClick={handleNewPermiso}\n                >\n                    <i className=\"far fa-save\" style={{ cursor: \"pointer\" }}></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    );\n};\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startGetTodoPermisosEquipoID } from '../../actions/permisos.actions';\nimport { useForm } from '../../hooks/useForm';\nimport { PermisosScreen } from '../ui/permisos/PermisosScreen';\nimport { uiOpenModal } from '../../actions/ui'\nimport { PermisosModal } from '../ui/modal/PermisosModal';\n\nexport const EditEquipmentScreen = () => {\n    const dispatch = useDispatch();\n    const [formValues, handleInputChange, reset] = useForm({\n        idEquipo: \"\",\n    });\n    const { idEquipo } = formValues;\n\n\n    useEffect(() => {\n        dispatch(startGetTodoPermisosEquipoID(idEquipo));\n    }, [dispatch, idEquipo]);\n\n    const [exist, setExist] = useState(false);\n    const [datosEquipo, setDatosEquipo] = useState([]);\n    const [datosPermisos, setDatosPermisos] = useState([]);\n    const { equipos } = useSelector((state) => state.equi);\n    const { permisos } = useSelector((state) => state.perm);\n    const { idEmpresa } = useSelector((state) => state.user);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        buscar(idEquipo);\n    };\n    const buscar = (idEquipo) => {\n        const equ = equipos.filter((equipo) => equipo.id === idEquipo);\n        setDatosEquipo(equ);\n        const per = permisos.filter(\n            (permiso) => permiso.idEquipo === idEquipo\n        );\n        setDatosPermisos(per);\n\n        if (equ.length > 0) {\n            // setDatosTrabajador(tra);\n            // setDatosExamenes(ex);\n            setExist(true);\n        } else {\n            Swal.fire(\"Equipo No Encontrado\", \"\", \"warning\");\n            //evita error de busqueda de no existente, después de encontrado\n            setExist(false)\n            reset();\n        }\n    };\n    const handleModal = () => {\n        dispatch(uiOpenModal());\n    };\n    return (\n        <div>\n            <form onSubmit={handleSearch}>\n                <h1 className=\"h3 mb-3 fw-normal\">Buscar Eqiupo</h1>\n                <hr />\n                <input\n                    type=\"text\"\n                    id=\"idEquipo\"\n                    name=\"idEquipo\"\n                    className=\"form-control\"\n                    placeholder=\"Ingrese patente, ej: AABB11\"\n                    required\n                    autoFocus\n                    onChange={handleInputChange}\n                    value={idEquipo}\n                />\n                <button\n                    className=\"w-100 btn btn-lg btn-primary\"\n                    style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n                    type=\"submit\"\n                >\n                    Buscar\n        </button>\n            </form>\n\n            {exist ? (\n                <div>\n                    <h3>Datos del Equipo</h3>\n                    <div className=\"datosTrabajador\">\n                        {datosEquipo ? (\n                            <div>Nombre: {datosEquipo[0].nombre}</div>\n                        ) : (\n                                <div></div>\n                            )}\n                    </div>\n                    <div>\n                        <h3>\n                            Documentos{\" \"}\n                            <span style={{ color: \"green\", cursor: \"pointer\" }}>\n                                <i className=\"fas fa-plus-circle\" onClick={handleModal}>\n                                    {\" \"}\n                                </i>\n                            </span>\n                        </h3>\n                    </div>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Rut Empresa</th>\n                                <th scope=\"col\">ID o Patente Equipo</th>\n                                <th scope=\"col\">Fecha Caducidad</th>\n                                <th scope=\"col\">Nombre Documento</th>\n                                <th scope=\"col\">Descargar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {datosPermisos ? (\n                                datosPermisos.map((permiso) => (\n                                    <PermisosScreen key={permiso.id} {...permiso} />\n                                ))\n                            ) : (\n                                    <>Loading...</>\n                                )}\n                        </tbody>\n                    </table>\n                    <PermisosModal idEquipo={idEquipo} idEmpresa={idEmpresa} />\n                </div>\n            ) : (\n                    <div></div>\n                )}\n        </div>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Navbar } from \"../ui/Navbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./dashboard.css\";\nimport { DashBoardScreen } from \"../ui/DashBoardScreen\";\nimport { EditEmployeeScreen } from \"../employee/EditEmployeeScreen\";\nimport { startGetExamenesPorVencerTodasLasEmpresas } from \"../../actions/exam\";\nimport { startGetTrabajadoresIdEmpresa } from \"../../actions/employee\";\nimport { CreateEmployeeScreen } from \"../employee/CreateEmployeeScreen\";\nimport { CreateEmpresaScreen } from \"../empresa/CreateEmpresaScreen\";\nimport { startGetTodasLasEmpresas } from \"../../actions/empresa.actions\";\nimport { EditEmpresaScreen } from \"../empresa/EditEmpresaScreen\";\nimport { CreateEquipmentScreen } from \"../equipment/CreateEquipmentScreen\";\nimport { startGetEquiposIdEmpresa } from \"../../actions/equipos.actions\";\nimport { startGetPermisosPorVencerTodasLasEmpresas } from \"../../actions/permisos.actions\";\nimport { EditEquipmentScreen } from \"../equipment/EditEquipmentScreen\";\n\nexport const MvcAppScreen = () => {\n  const dispatch = useDispatch();\n  const { isAdmin, idEmpresa } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (idEmpresa) {\n      dispatch(startGetExamenesPorVencerTodasLasEmpresas());\n      dispatch(startGetPermisosPorVencerTodasLasEmpresas());\n      dispatch(startGetTodasLasEmpresas());\n      dispatch(startGetTrabajadoresIdEmpresa(idEmpresa));\n      dispatch(startGetEquiposIdEmpresa(idEmpresa));\n    }\n  }, [dispatch, idEmpresa]);\n  //aqui deberia hacer el dispatch porque ya se que empresa es\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <nav\n              id=\"sidebarMenu\"\n              className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\"\n            >\n              <div className=\"position-sticky pt-3\">\n                <ul className=\"nav flex-column\">\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/\">\n                      <span><i className='fas fa-home'></i></span>\n                      {' '}Escritorio\n                    </Link>\n                  </li>\n                  {isAdmin ? (\n                    <>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span><i className=\"fas fa-users\"></i>{' '}Usuario</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newuser\">\n                          <span><i className=\"fas fa-user-plus\"></i>{' '}</span>Nuevo Usuario\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/edituser\">\n                          <span><i className=\"fas fa-user-edit\"></i>{' '}</span>Editar Usuario\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span><i className=\"fas fa-laptop-house\"></i>{' '}Empresa</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newempresa\">\n                          <span><i className=\"fas fa-plus-circle\"></i>{' '}</span>Nueva Empresa\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editempresa\">\n                          <span><i className=\"fas fa-pen\"></i>{' '}</span>Editar Empresa\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span><i className=\"fas fa-hard-hat\"></i>{' '}Trabajadores</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/createemployee\">\n                        <span><i className=\"fas fa-plus-circle\"></i>{' '}</span>Nuevo Trabajador\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editemployee\">\n                        <span><i className=\"fas fa-pen\"></i>{' '}</span>Editar Trabajador\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span><i className=\"fas fa-truck-pickup\"></i>{' '}Equipos</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newequipment\">\n                        <span><i className=\"fas fa-plus-circle\"></i>{' '}</span>Nuevo Equipo\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editequipment\">\n                        <span><i className=\"fas fa-pen\"></i>{' '}</span>Editar Equipo\n                        </Link>\n                      </li>\n                    </>\n                  ) : (\n                      <div></div>\n                    )}\n                </ul>\n              </div>\n            </nav>\n          </div>\n          <div>\n            <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n              <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                <Switch>\n                  <Route exact component={DashBoardScreen} path=\"/\" />\n                  <Route\n                    exact\n                    component={EditEmployeeScreen}\n                    path=\"/admin/editemployee\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmployeeScreen}\n                    path=\"/admin/createemployee\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmpresaScreen}\n                    path=\"/admin/newempresa\"\n                  />\n                  <Route\n                    exact\n                    component={EditEmpresaScreen}\n                    path=\"/admin/editempresa\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmpresaScreen}\n                    path=\"/admin/newempresa\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEquipmentScreen}\n                    path=\"/admin/newequipment\"\n                  />\n                  <Route\n                    exact\n                    component={EditEquipmentScreen}\n                    path=\"/admin/editequipment\"\n                  />\n                </Switch>\n              </div>\n            </main>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { login } from \"../actions/auth\";\nimport { firebase } from \"../firebase/firebase-config\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { PrivateRoute } from \"../routers/PrivateRoute\";\nimport { PublicRoute } from \"../routers/PublicRoute\";\nimport { MvcAppScreen } from \"../components/main/MvcAppScreen\";\nimport { startLoadUserData } from \"../actions/user\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n\n  const [checking, setChecking] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //Mantiene el estado \"state\" de redux respecto a los cambios\n  //que se generan al reacargar la página\n  //está escuchando si se logueo o cambia el login del usuario\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid));\n        //cargar el usuario que se acaba de autenticar\n        dispatch(startLoadUserData(user.uid));\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setChecking(false);\n    });\n  }, [dispatch, setChecking, setIsLoggedIn]);\n\n  if (checking) {\n    return <h1>Cargando...</h1>;\n  }\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            path=\"/auth\"\n            component={AuthRouter}\n            isAuthenticated={isLoggedIn}\n          />\n\n          <PrivateRoute\n            exact\n            isAuthenticated={isLoggedIn}\n            path=\"/\"\n            component={MvcAppScreen}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { authReducer } from \"../reducers/authReducer\";\nimport { employeeReducer } from \"../reducers/employeeReducer\";\nimport { empresaReducer } from \"../reducers/empresaReducer\";\nimport { equipmentReducer } from \"../reducers/equipmentReducer\";\nimport { examReducer } from \"../reducers/examReducer\";\nimport { permisosReducer } from \"../reducers/permisosReducer\";\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { userReducer } from \"../reducers/userReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  exam: examReducer,\n  ui: uiReducer,\n  trab: employeeReducer,\n  empr: empresaReducer,\n  equi: equipmentReducer,\n  perm: permisosReducer\n});\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        //name: action.payload.displayName,\n      };\n\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.loadUserData:\n      return {\n        nombre: action.payload.nombre,\n        idEmpresa: action.payload.idEmpresa,\n        isAdmin: action.payload.isAdmin,\n        idUsuario:action.payload.idUsuario\n      };\n\n    case types.userLogout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const examReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getExamenesPorVencerPorIdEmpresa:\n      return {\n        ...state,\n        examenes: [...action.payload],\n      };\n    case types.getTodoExamenesTrabajadorID:\n      return {\n        ...state,\n        examenesIdTrabajador: [...action.payload]\n      }\n\n    case types.getExamenesPorVencerTodasLasEmpresas:\n      return {\n        ...state,\n        examenes: [...action.payload]\n      }\n\n    case types.removeExamenUrl:\n      return {\n        ...state,\n        url: null,\n      }\n\n    case types.getExamsIdTrabajador:\n      return {\n        ...state,\n        examenes: [...action.payload],\n      };\n\n    case types.crearNuevoExamen:\n      return {\n        ...state,\n        examen: action.payload,\n      };\n    case types.getExamenUrl:\n      return {\n        ...state,\n        url: action.payload,\n      };\n\n    case types.examenesLogout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { types } from \"../types/types\";\n\nexport const employeeReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getTrabajadoresIdEmpresa:\n      return {\n        ...state,\n        trabajadores: [...action.payload],\n      };\n\n    case types.crearTrabajadorEmpresa:\n      return {\n        ...state,\n        creado: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const empresaReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getTodasLasEmpresas:\n      return {\n        ...state,\n        empresas: action.payload,\n      };\n    // case types.crearNuevaEmpresa:\n    //   console.log(action.payload);\n    //   return {\n    //     ...state,\n    //     ultimaCreada: action.payload,\n    //   };\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const equipmentReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.crearEquipoEmpresa:\n            return {\n                ...state,\n                equipo: action.payload\n            }\n        case types.getEquiposIdEmpresa:\n            return {\n                ...state,\n                equipos: [...action.payload]\n            }\n\n        default:\n            return state;\n    }\n\n}\n","import { types } from \"../types/types\";\n\nexport const permisosReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.getPermisosPorVencerTodasLasEmpresas:\n            return {\n                ...state,\n                permisos: [...action.payload],\n            };\n        case types.getTodoExamenesPermisosEquipoID:\n            return {\n                ...state,\n                permisosIdEquipo: [...action.payload]\n            }\n\n        default:\n            return state;\n    }\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nexport const MvcApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MvcApp } from \"./MvcApp\";\n\nReactDOM.render(<MvcApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}