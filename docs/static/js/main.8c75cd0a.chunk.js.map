{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","actions/employee.js","helpers/fileUpload.js","actions/exam.js","actions/user.js","components/ui/Navbar.js","components/ui/examenes/ExamenScreen.js","components/ui/DashBoardScreen.js","actions/ui.js","components/ui/modal/CalendarModal.js","components/employee/EditEmployeeScreen.js","components/employee/CreateEmployeeScreen.js","components/main/MvcAppScreen.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","reducers/userReducer.js","reducers/examReducer.js","reducers/employeeReducer.js","MvcApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","types","login","logout","loadUserData","userLogout","getTrabajadoresIdEmpresa","trabajadoresLogout","getExamenesPorVencerPorIdEmpresa","getExamenesPorVencer","crearNuevoExamen","getExamenUrl","examenesLogout","uiOpenModal","uiCloseModal","uid","displayName","type","payload","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","email","password","formValues","className","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","then","user","catch","error","console","log","startLoginEmailPassword","id","placeholder","required","autoFocus","onChange","AuthRouter","exact","path","component","to","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","trabajadores","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","examenes","uploadingExamen","fileUrl","examen","Navbar","nombre","useSelector","state","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","onClick","signOut","ExamenScreen","idEmpresa","idTrabajador","fechaCaducidad","url","nombreExamen","idUsuario","Date","toLocaleDateString","href","rel","collection","add","fechaDescarga","archivoDescargado","merge","err","startLogDescargas","DashBoardScreen","exam","style","cursor","color","scope","map","customStyles","content","top","left","right","bottom","marginRight","transform","now","moment","minutes","seconds","Modal","setAppElement","CalendarModal","modalOpen","ui","toDate","dateStart","setDateStart","titleValid","setTitleValid","setFormValues","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","trim","length","autoComplete","display","examenFile","files","document","querySelector","click","marginTop","getTime","fechaCreacion","Swal","fire","EditEmployeeScreen","exist","setExist","setDatosTrabajador","setDatosExamenes","trab","buscar","tra","filter","employee","ex","marginBottom","CreateEmployeeScreen","idEmpleado","doc","set","startCrearTrabajadorEmpresa","MvcAppScreen","isAdmin","useEffect","someDate","setDate","getDate","newDate","where","get","snap","forEach","push","data","startGetExamenesPorVencerPorIdEmpresa","snapTrabajadores","trabajador","startGetTrabajadoresIdEmpresa","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","docRef","exists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","getExamsIdTrabajador","store","createStore","applyMiddleware","thunk","MvcApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8c75cd0a.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDUGKdITlmFd_OsNHsf_vRa1_9i5Y_m0NQ\",\n    authDomain: \"morevalue-f6170.firebaseapp.com\",\n    projectId: \"morevalue-f6170\",\n    storageBucket: \"morevalue-f6170.appspot.com\",\n    messagingSenderId: \"738327980225\",\n    appId: \"1:738327980225:web:f0e12eae6aca8b8f4fcc40\"\n  };\n  \nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\n\nexport {\n    db,\n    firebase\n}","export const types = {\n  login: \"[Auth] Login\",\n  logout: \"[Auth] Logout\",\n\n  //user types\n  //obtiene los datos del usuario de la BD\n  loadUserData: \"[User] Load Logged User Data\",\n  //Quita el usuario del state\n  userLogout: \"[User] Logout\",\n\n  //Trabajadores\n  getTrabajadoresIdEmpresa: \"[Emp] Get Trabajadores ID Empresa\",\n  trabajadoresLogout: \"[Emp] Limpiar Trabajadores\",\n\n  //examenes\n\n  getExamenesPorVencerPorIdEmpresa: \"[Exam] Get Examenes por Vencer ID Empresa\",\n  getExamenesPorVencer: \"[Exam] Get Examenes por Vencer\",\n  crearNuevoExamen: \"[Exam] Crear Nuevo Examen ID Trabajador\",\n  getExamenUrl: \"[Exam] Get Examen URL\",\n  examenesLogout: \"[Exam] Limpiar Examenes\",\n\n  //UI\n  uiOpenModal: \"[UI] Open Modal\",\n  uiCloseModal: \"[UI] Close Modal\",\n  \n};\n","// import Swal from \"sweetalert2\";\n\nimport { firebase, db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, \"\"));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName,\n  },\n});\n\n//TODO: descomponer funcion\nexport const startRegisterWithEmailPasswordName = (\n  email,\n  password,\n  name,\n  rol,\n  empresa\n) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n\n        const userDatabase = {\n          isAdmin: rol === \"true\" ? true : false,\n          idEmpresa: empresa,\n          nombre: name,\n        };\n        //autologin:  después de crear, no se necesita acá\n        //dispatch(login(user.uid, user.displayName));\n        /**\n         * TODO: HACER DISPATCH QUE CREE EL USER EN LA BD\n         */\n\n        const doc = await db\n          .collection(\"usuarios\")\n          .doc(user.uid)\n          .set(userDatabase);\n        console.log(doc);\n      })\n      .catch((e) => {\n        console.log(e);\n        // Swal.fire(\"Error\", e.message, \"error\");\n      });\n  };\n};\n\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    //borra datos de auth en state\n    dispatch(logout());\n    //borra datos de user en state\n  };\n};\n\nexport const logout = () => ({\n  type: types.logout,\n});\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { startLoginEmailPassword } from \"../../actions/auth\";\nimport { useForm } from \"../../hooks/useForm\";\nimport \"./signin.css\";\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange] = useForm({\n    email: \"jenny@morevaluecompany.com\",\n    password: \"12341234\",\n  });\n\n  const { email, password } = formValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLoginEmailPassword(email, password));\n  };\n  return (\n    <div className=\"text-center\">\n      <main className=\"form-signin\">\n        <form onSubmit={handleLogin}>\n          <h1 className=\"h3 mb-3 fw-normal\">Ingreso Empresas</h1>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            placeholder=\"Correo Electrónico\"\n            required\n            autoFocus\n            onChange={handleInputChange}\n            value={email}\n          />\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            placeholder=\"Contraseña\"\n            required\n            onChange={handleInputChange}\n            value={password}\n          />\n          <div className=\"checkbox mb-3\"></div>\n          <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n            Ingresar\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startGetTrabajadoresIdEmpresa = (idEmpresa) => {\n  return async (dispatch) => {\n    const trabajadores = [];\n    db.collection(\"trabajadores\")\n      .where(\"idEmpresa\", \"==\", idEmpresa)\n      .get()\n      .then((snapTrabajadores) => {\n        snapTrabajadores.forEach((trabajador) => {\n          trabajadores.push({\n            id: trabajador.id,\n            ...trabajador.data(),\n          });\n        });\n        dispatch(getTrabajadoresIdEmpresa(trabajadores));\n      });\n  };\n};\n\nexport const getTrabajadoresIdEmpresa = (trabajadores) => ({\n  type: types.getTrabajadoresIdEmpresa,\n  payload: trabajadores,\n});\n\nexport const trabajadoresLogout = () => ({\n  type: types.trabajadoresLogout,\n});\n\nexport const startCrearTrabajadorEmpresa = (idEmpresa, idEmpleado, nombre) => {\n  //TODO: Verificar si existe el usuairo antes, retornar\n  return async () => {\n    db.collection(\"trabajadores\").doc(idEmpleado).set({\n      idEmpresa: idEmpresa,\n      nombre: nombre,\n    });\n  };\n};\n","export const fileUpload = async (file) => {\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/dgoxdpdrc/upload\";\n  const formData = new FormData();\n  formData.append(\"upload_preset\", \"morevalue\");\n  formData.append(\"folder\", \"pdf\");\n  formData.append(\"file\", file);\n  try {\n    const resp = await fetch(cloudUrl, {\n      method: \"POST\",\n      body: formData,\n    });\n    if (resp.ok) {\n      const cloudResp = await resp.json();\n      return cloudResp.secure_url;\n    } else {\n      throw await resp.json();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { types } from \"../types/types\";\n\nexport const startGetExamenesPorVencerPorIdEmpresa = (idEmpresa) => {\n  var someDate = new Date();\n  var numberOfDaysToAdd = 60;\n  someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n  const newDate = someDate.getTime();\n  const examenes = [];\n  return async (dispatch) => {\n    await db\n      .collection(\"examenes\")\n      .where(\"idEmpresa\", \"==\", idEmpresa)\n      //TODO: Calcular fecha a 60 días\n      .where(\"fechaCaducidad\", \"<=\", newDate)\n      .get()\n      .then((snap) => {\n        snap.forEach((examen) =>\n          examenes.push({\n            id: examen.id,\n            ...examen.data(),\n          })\n        );\n      });\n    dispatch(getExamenesPorVencerPorIdEmpresa(examenes));\n  };\n};\n\nexport const getExamenesPorVencerPorIdEmpresa = (examenes) => ({\n  type: types.getExamenesPorVencerPorIdEmpresa,\n  payload: examenes,\n});\n\nexport const startCrearNuevoExamen = (examen) => {\n  return async (dispatch) => {\n    const examenRef = db.collection(\"examenes\");\n    //agredar Datos\n    examenRef\n      .add(examen)\n      .then((examen) => {\n        console.log(\"Agregado: \", examen.id);\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n    dispatch(crearNuevoExamen(examen));\n  };\n};\n\nexport const startUploadingExamen = (examenFile) => {\n  return async (dispatch) => {\n    const fileUrl = await fileUpload(examenFile);\n    dispatch(uploadingExamen(fileUrl));\n  };\n};\n\nexport const uploadingExamen = (fileUrl) => ({\n  type: types.getExamenUrl,\n  payload: fileUrl,\n});\n\nexport const crearNuevoExamen = (examen) => ({\n  type: types.crearNuevoExamen,\n  payload: examen,\n});\n\nexport const examenesLogout = () => ({\n  type: types.examenesLogout,\n});\n\nexport const startLogDescargas = (\n  idUsuario,\n  idEmpresa,\n  idTrabajador,\n  nombreExamen,\n  url\n) => {\n  return async () => {\n    await db\n      .collection(`registro/${idUsuario}/log`)\n      .add(\n        {\n          fechaDescarga: new Date().toLocaleDateString(),\n          id: idUsuario,\n          idEmpresa: idEmpresa,\n          idTrabajador: idTrabajador,\n          archivoDescargado: nombreExamen,\n          url: url,\n        },\n        { merge: true }\n      )\n      .then((ok) => {\n        console.log(\"Registro Ingresado: \", ok);\n      })\n      .catch((err) => {\n        console.log(\"Algo salió mal: \", err);\n      });\n  };\n};\n","// import Swal from \"sweetalert2\";\n\nimport { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startLoadUserData = (uid) => {\n  return async (dispatch) => {\n    const docRef = db.collection(\"usuarios\").doc(uid);\n    await docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          console.log(doc.data());\n          const user = {\n            ...doc.data(),\n          };\n          dispatch(loadUserData(user));\n        } else {\n          console.log(\"no existe\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n//carga los datos del usuario en el store\nexport const loadUserData = (user) => ({\n  type: types.loadUserData,\n  payload: user,\n});\n//limpia el store\nexport const userLogout = () => ({\n  type: types.userLogout,\n});\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\nimport { trabajadoresLogout } from \"../../actions/employee\";\nimport { examenesLogout } from \"../../actions/exam\";\nimport { userLogout } from \"../../actions/user\";\n\nexport const Navbar = () => {\n  //obtiene el nombre\n  const { nombre } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n    dispatch(userLogout());\n    dispatch(trabajadoresLogout());\n    dispatch(examenesLogout());\n  };\n\n  return (\n    <div>\n      <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n        <div className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3 nav-link\">\n          {nombre}\n        </div>\n        <button\n          className=\"navbar-toggler position-absolute d-md-none collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#sidebarMenu\"\n          aria-controls=\"sidebarMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\">\n          </span>\n        </button>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap\">\n            <button className=\"btn nav-link\" onClick={handleLogout}>\n              Salir\n            </button>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogDescargas } from \"../../../actions/exam\";\nexport const ExamenScreen = ({ id, ...examen }) => {\n  const dispatch = useDispatch();\n  const { idEmpresa, idTrabajador, fechaCaducidad, url, nombreExamen } = examen;\n  const { nombre, idUsuario } = useSelector((state) => state.user);\n  const handleSearchEmployee = () => {\n    console.log(\"buscar employee\");\n    //TODO: registrar envento descarga\n    //dispatch(startRegistroDescarga())\n    //enviar a la página de busqueda de usuario\n  };\n\n  const handleDownload = () => {\n    console.log(\n      \"archivo descargado: \" + nombreExamen + \"descargado por: \" + nombre\n    );\n    dispatch(\n      startLogDescargas(idUsuario, idEmpresa, idTrabajador, nombreExamen, url)\n    );\n  };\n\n  return (\n    <tr>\n      <td>{idEmpresa}</td>\n      <td onClick={handleSearchEmployee}>{idTrabajador}</td>\n      <td>{new Date(fechaCaducidad).toLocaleDateString()}</td>\n      <td>{nombreExamen}</td>\n\n      <td>\n        <a\n          className=\"data\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          onClick={handleDownload}\n        >\n          descargar\n        </a>\n      </td>\n    </tr>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ExamenScreen } from \"../ui/examenes/ExamenScreen\";\nexport const DashBoardScreen = () => {\n  const { idEmpresa } = useSelector((state) => state.user);\n  const { examenes } = useSelector((state) => state.exam);\n\n  return (\n    <div>\n      <h1>Resumen:</h1>\n      <hr />\n      <h2>\n        Examenes por Vencer{\" \"}\n        <i\n          className=\"fas fa-sync fa-xs\"\n          style={{ cursor: \"pointer\", color: \"green\"}}\n        ></i>\n      </h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Rut Empresa</th>\n            <th scope=\"col\">Rut Trabajador</th>\n            <th scope=\"col\">Fecha Caducidad</th>\n            <th scope=\"col\">Nombre Examen</th>\n            <th scope=\"col\">Examen</th>\n          </tr>\n        </thead>\n        <tbody>\n          {examenes ? (\n            examenes.map((examen) => (\n              <ExamenScreen key={examen.id} {...examen} />\n            ))\n          ) : (\n            <>Loading...</>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n  payload: true,\n});\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n  payload: false,\n});\n\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport Modal from \"react-modal\";\nimport \"./modal.css\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../../actions/ui\";\nimport { startCrearNuevoExamen } from \"../../../actions/exam\";\nimport { startUploadingExamen } from \"../../../actions/exam\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst now = moment().minutes(0).seconds(0);\nModal.setAppElement(\"#root\");\n\nexport const CalendarModal = ({ idTrabajador, idEmpresa }) => {\n  console.log(idTrabajador);\n  const dispatch = useDispatch();\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { url } = useSelector((state) => state.exam);\n  const [dateStart, setDateStart] = useState(now.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n  const [formValues, setFormValues] = useState({\n    nombreExamen: \"\",\n    fechaCaducidad: now.toDate(),\n  });\n  const { nombreExamen } = formValues;\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e);\n    setFormValues({\n      ...formValues,\n      fechaCaducidad: e,\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    if (nombreExamen.trim().length < 2) {\n      return setTitleValid(false);\n    }\n    setTitleValid(true);\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    // setIsOpen(false);\n  };\n\n  const handleNewExamen = () => {\n    dispatch(\n      startCrearNuevoExamen({\n        idTrabajador: idTrabajador,\n        idEmpresa: idEmpresa,\n        nombreExamen: nombreExamen,\n        fechaCaducidad: new Date(formValues.fechaCaducidad).getTime(),\n        fechaCreacion: new Date().getTime(),\n        url: url,\n      })\n    );\n    Swal.fire(\"Examen Creado con Éxito\", \"\", \"success\");\n    dispatch(uiCloseModal());\n    \n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUploadingExamen(file));\n    }\n  };\n\n  const handleArchivoExamenchange = () => {\n    document.querySelector(\"#fileSelector\").click();\n  };\n  //   closeModal();\n  return (\n    <Modal\n      isOpen={modalOpen}\n      //   onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n      closeTimeoutMS={500}\n      \n    >\n      <h1> Nuevo examen </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && \"is-invalid\"}`}\n            placeholder=\"Nombre del examen\"\n            name=\"nombreExamen\"\n            autoComplete=\"off\"\n            value={nombreExamen}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Fecha Vencimiento</label>\n          <DateTimePicker\n            name=\"vencimiento\"\n            className=\"form-control\"\n            value={dateStart}\n            onChange={handleStartDateChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Adjuntar Archivo</label>\n          <br />\n          <input\n            id=\"fileSelector\"\n            type=\"file\"\n            name=\"file\"\n            style={{ display: \"none\" }}\n            onChange={handleFileChange}\n            required\n          />\n          <button\n            className=\"btn btn-success\"\n            onClick={handleArchivoExamenchange}\n          >\n            Archivo Examen\n          </button>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n          style={{\n            marginTop: \"10px\",\n            display: `${url ? \"\" : \"none\"}`,\n          }}\n          onClick={handleNewExamen}\n        >\n          <i className=\"far fa-save\" style={{ cursor: \"pointer\" }}></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"../../hooks/useForm\";\nimport Swal from \"sweetalert2\";\nimport { CalendarModal } from \"../ui/modal/CalendarModal\";\nimport { uiOpenModal } from \"../../actions/ui\";\n\nexport const EditEmployeeScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange, reset] = useForm({\n    idTrabajador: \"\",\n  });\n\n  const { idTrabajador } = formValues;\n  const [exist, setExist] = useState(false);\n  const [datosTrabajador, setDatosTrabajador] = useState([]);\n  const [datosExamenes, setDatosExamenes] = useState([]);\n  const { trabajadores } = useSelector((state) => state.trab);\n  const { examenes } = useSelector((state) => state.exam);\n  const { idEmpresa } = useSelector((state) => state.user);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    buscar(idTrabajador);\n    // console.log(examenes);\n    // dispatch(startGetExamsIdTrabajador(idEmpleado));\n  };\n  const buscar = (idTrabajador) => {\n    const tra = trabajadores.filter((employee) => employee.id === idTrabajador);\n    const ex = examenes.filter(\n      (examen) => examen.idTrabajador === idTrabajador\n    );\n    console.log(ex);\n\n    if (tra.length > 0) {\n      setDatosTrabajador(tra);\n      setDatosExamenes(ex);\n      setExist(true);\n    } else {\n      Swal.fire(\"Trabajador No Encontrado\", \"\", \"warning\");\n      reset();\n    }\n  };\n  const handleModal = () => {\n    dispatch(uiOpenModal());\n  };\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <h1 className=\"h3 mb-3 fw-normal\">Buscar Trabajador</h1>\n        <hr />\n        <input\n          type=\"text\"\n          id=\"idTrabajador\"\n          name=\"idTrabajador\"\n          className=\"form-control\"\n          placeholder=\"Ingrese rut, ej: 123456789\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={idTrabajador}\n        />\n        <button\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n          type=\"submit\"\n        >\n          Buscar\n        </button>\n      </form>\n\n      {exist ? (\n        <div>\n          <h4>Datos del Trabajador</h4>\n          <div>\n            <h3>\n              Examenes{\" \"}\n              <span style={{ color: \"green\", cursor: \"pointer\" }}>\n                <i className=\"fas fa-plus-circle\" onClick={handleModal}></i>\n              </span>\n            </h3>\n            \n          </div>\n          <CalendarModal idTrabajador={idTrabajador} idEmpresa={idEmpresa} />\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startCrearTrabajadorEmpresa } from \"../../actions/employee\";\nimport { useForm } from \"../../hooks/useForm\";\n\nexport const CreateEmployeeScreen = () => {\n  const { idEmpresa } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpleado: \"\",\n    nombre: \"\",\n    idEmpresa: idEmpresa,\n  });\n\n  const { idEmpleado, nombre } = formValues;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(startCrearTrabajadorEmpresa(idEmpresa, idEmpleado, nombre));\n    Swal.fire(\"Trabajador Creado con éxito\", \"\", \"success\");\n    reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"h3 mb-3 fw-normal\">Nuevo Trabajador</h1>\n        <hr />\n        <input\n          type=\"text\"\n          id=\"idEmpleado\"\n          name=\"idEmpleado\"\n          className=\"form-control\"\n          placeholder=\"Ingrese Rut sin puntos, ni guión\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={idEmpleado}\n        />\n        <input\n          type=\"text\"\n          id=\"nombre\"\n          name=\"nombre\"\n          className=\"form-control\"\n          placeholder=\"Nombre\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={nombre}\n        />\n        <button\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\" }}\n          type=\"submit\"\n        >\n          Crear Trabajador\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Navbar } from \"../ui/Navbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./dashboard.css\";\nimport { DashBoardScreen } from \"../ui/DashBoardScreen\";\nimport { EditEmployeeScreen } from \"../employee/EditEmployeeScreen\";\nimport { startGetExamenesPorVencerPorIdEmpresa } from \"../../actions/exam\";\nimport { startGetTrabajadoresIdEmpresa } from \"../../actions/employee\";\nimport { CreateEmployeeScreen } from \"../employee/CreateEmployeeScreen\";\n\nexport const MvcAppScreen = () => {\n  const dispatch = useDispatch();\n  const { isAdmin, idEmpresa } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (idEmpresa) {\n      dispatch(startGetExamenesPorVencerPorIdEmpresa(idEmpresa));\n      dispatch(startGetTrabajadoresIdEmpresa(idEmpresa));\n    }\n  }, [dispatch, idEmpresa]);\n  //aqui deberia hacer el dispatch porque ya se que empresa es\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <nav\n              id=\"sidebarMenu\"\n              className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\"\n            >\n              <div className=\"position-sticky pt-3\">\n                <ul className=\"nav flex-column\">\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/\">\n                      Escritorio\n                    </Link>\n                  </li>\n                  {isAdmin ? (\n                    <>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span>Empresa</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newempresa\">\n                          Nueva Empresa\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editempresa\">\n                          Editar Empresa\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span>Usuario</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newuser\">\n                          Nuevo Usuario\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/edituser\">\n                          Editar Usuario\n                        </Link>\n                      </li>\n                    </>\n                  ) : (\n                    <div></div>\n                  )}\n\n                  <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                    <span>Trabajadores</span>\n                  </h6>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/admin/createemployee\">\n                      Nuevo Trabajador\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/admin/editemployee\">\n                      Editar Trabajador\n                    </Link>\n                  </li>\n                  <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                    <span>Equipos</span>\n                  </h6>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/admin/newequipment\">\n                      Nuevo Equipo\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/admin/editequipment\">\n                      Editar Equipo\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </div>\n          <div>\n            <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n              <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                <Switch>\n                  <Route exact component={DashBoardScreen} path=\"/\" />\n                  <Route\n                    exact\n                    component={EditEmployeeScreen}\n                    path=\"/admin/editemployee\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmployeeScreen}\n                    path=\"/admin/createemployee\"\n                  />\n                </Switch>\n              </div>\n            </main>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { login } from \"../actions/auth\";\nimport { firebase } from \"../firebase/firebase-config\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { PrivateRoute } from \"../routers/PrivateRoute\";\nimport { PublicRoute } from \"../routers/PublicRoute\";\nimport { MvcAppScreen } from \"../components/main/MvcAppScreen\";\nimport { startLoadUserData } from \"../actions/user\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n\n  const [checking, setChecking] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //Mantiene el estado \"state\" de redux respecto a los cambios\n  //que se generan al reacargar la página\n  //está escuchando si se logueo o cambia el login del usuario\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid));\n        //cargar el usuario que se acaba de autenticar\n        dispatch(startLoadUserData(user.uid));\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setChecking(false);\n    });\n  }, [dispatch, setChecking, setIsLoggedIn]);\n\n  if (checking) {\n    return <h1>Cargando...</h1>;\n  }\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            path=\"/auth\"\n            component={AuthRouter}\n            isAuthenticated={isLoggedIn}\n          />\n\n          <PrivateRoute\n            exact\n            isAuthenticated={isLoggedIn}\n            path=\"/\"\n            component={MvcAppScreen}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { authReducer } from \"../reducers/authReducer\";\nimport { employeeReducer } from \"../reducers/employeeReducer\";\nimport { examReducer } from \"../reducers/examReducer\";\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { userReducer } from \"../reducers/userReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  exam: examReducer,\n  ui: uiReducer,\n  trab: employeeReducer,\n});\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        //name: action.payload.displayName,\n      };\n\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.loadUserData:\n      return {\n        nombre: action.payload.nombre,\n        idEmpresa: action.payload.idEmpresa,\n        isAdmin: action.payload.isAdmin,\n        idUsuario:action.payload.idUsuario\n      };\n\n    case types.userLogout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const examReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getExamenesPorVencerPorIdEmpresa:\n      return {\n        ...state,\n        examenes: [...action.payload],\n      };\n\n    case types.getExamsIdTrabajador:\n      return {\n        ...state,\n        examenes: [...action.payload],\n      };\n\n    case types.crearNuevoExamen:\n      return {\n        ...state,\n        examen: action.payload,\n      };\n    case types.getExamenUrl:\n      return {\n        ...state,\n        url: action.payload,\n      };\n\n    case types.examenesLogout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { types } from \"../types/types\";\n\nexport const employeeReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getTrabajadoresIdEmpresa:\n      return {\n        ...state,\n        trabajadores: [...action.payload],\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nexport const MvcApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MvcApp } from \"./MvcApp\";\n\nReactDOM.render(<MvcApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}