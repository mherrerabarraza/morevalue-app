{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","actions/employee.js","helpers/fileUpload.js","actions/exam.js","actions/user.js","components/ui/Navbar.js","actions/permisos.actions.js","components/ui/examenes/ExamenScreen.js","components/ui/permisos/PermisosScreen.js","components/ui/DashBoardScreen.js","actions/ui.js","components/ui/modal/CalendarModal.js","components/employee/EditEmployeeScreen.js","components/ui/drop-down/DropDown.js","components/employee/CreateEmployeeScreen.js","actions/empresa.actions.js","components/empresa/CreateEmpresaScreen.js","components/empresa/EditEmpresaScreen.js","actions/equipos.actions.js","components/equipment/CreateEquipmentScreen.js","components/ui/modal/PermisosModal.js","components/equipment/EditEquipmentScreen.js","components/main/MvcAppScreen.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","reducers/userReducer.js","reducers/examReducer.js","reducers/employeeReducer.js","reducers/empresaReducer.js","reducers/equipmentReducer.js","reducers/permisosReducer.js","MvcApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","types","login","logout","loadUserData","userLogout","getTrabajadoresIdEmpresa","trabajadoresLogout","crearTrabajadorEmpresa","trabajadorExist","getExamenesPorVencerPorIdEmpresa","getExamenesPorVencerTodasLasEmpresas","crearNuevoExamen","getExamenUrl","examenesLogout","getTodoExamenesTrabajadorID","uiOpenModal","uiCloseModal","crearNuevaEmpresa","getTodasLasEmpresas","getEquiposIdEmpresa","crearEquipoEmpresa","equiposLogout","equipoExist","getTodoPermisosEquipoID","getPermisosPorVencerTodasLasEmpresas","crearNuevoPermiso","uid","displayName","type","payload","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","email","password","formValues","className","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","then","user","catch","error","console","log","startLoginEmailPassword","id","placeholder","required","autoFocus","onChange","AuthRouter","exact","path","component","to","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","startGetTrabajadoresIdEmpresa","idEmpresa","a","trabajadores","collection","where","get","snapTrabajadores","forEach","trabajador","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","startGetTodoExamenesTrabajadorID","idTrabajador","examenes","snap","examen","startGetExamenesPorVencerTodasLasEmpresas","someDate","Date","setDate","getDate","newDate","getTime","startUploadingExamen","examenFile","fileUrl","uploadingExamen","Navbar","nombre","useSelector","state","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","onClick","signOut","startGetPermisosPorVencerTodasLasEmpresas","permisos","permiso","startGetTodoPermisosEquipoID","idEquipo","ExamenScreen","fechaCaducidad","url","nombreExamen","idUsuario","toLocaleDateString","href","rel","add","fechaDescarga","archivoDescargado","merge","err","startLogDescargas","PermisosScreen","nombrePermiso","DashBoardScreen","exam","perm","style","cursor","color","scope","data-sortable","data-field","map","customStyles","content","top","left","right","bottom","marginRight","transform","now","moment","minutes","seconds","Modal","setAppElement","CalendarModal","modalOpen","ui","toDate","dateStart","setDateStart","titleValid","setTitleValid","setFormValues","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","trim","length","autoComplete","display","files","document","querySelector","click","marginTop","fechaCreacion","Swal","fire","EditEmployeeScreen","exist","setExist","datosTrabajador","setDatosTrabajador","datosExamenes","setDatosExamenes","trab","examenesIdTrabajador","buscar","tra","filter","employee","ex","marginBottom","DropDown","CreateEmployeeScreen","empresas","empr","idEmpleado","doc","set","startCrearTrabajadorEmpresa","defaultValue","empresa","startGetTodasLasEmpresas","empresasRef","startCrearNuevaEmpresa","CreateEmpresaScreen","event","EditEmpresaScreen","datosEmpresa","setDatosEmpresa","editable","setEditable","emp","exists","startUpdateEmpresa","readOnly","startGetEquiposIdEmpresa","equipos","snapEquipos","equipo","CreateEquipmentScreen","equi","startCrearEquipoEmpresa","PermisosModal","EditEquipmentScreen","datosEquipo","setDatosEquipo","datosPermisos","setDatosPermisos","equ","per","MvcAppScreen","isAdmin","useEffect","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","docRef","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","getExamsIdTrabajador","creado","getTodoExamenesPermisosEquipoID","permisosIdEquipo","store","createStore","applyMiddleware","thunk","MvcApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7f2f85c2.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDUGKdITlmFd_OsNHsf_vRa1_9i5Y_m0NQ\",\n    authDomain: \"morevalue-f6170.firebaseapp.com\",\n    projectId: \"morevalue-f6170\",\n    storageBucket: \"morevalue-f6170.appspot.com\",\n    messagingSenderId: \"738327980225\",\n    appId: \"1:738327980225:web:f0e12eae6aca8b8f4fcc40\"\n  };\n  \nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\n\nexport {\n    db,\n    firebase\n}","export const types = {\n  login: \"[Auth] Login\",\n  logout: \"[Auth] Logout\",\n\n  //user types\n  //obtiene los datos del usuario de la BD\n  loadUserData: \"[User] Load Logged User Data\",\n  //Quita el usuario del state\n  userLogout: \"[User] Logout\",\n\n  //Trabajadores\n  getTrabajadoresIdEmpresa: \"[Emp] Get Trabajadores ID Empresa\",\n  trabajadoresLogout: \"[Emp] Limpiar Trabajadores\",\n  crearTrabajadorEmpresa: \"[Emp] Trabajador Creado\",\n  trabajadorExist: \"[Emp] Trabajador ya está en DB\",\n\n  //examenes\n  getExamenesPorVencerPorIdEmpresa: \"[Exam] Get Examenes por Vencer ID Empresa\",\n  getExamenesPorVencerTodasLasEmpresas: \"[Exam] Get Examenes por Vencer todas las Empresas\",\n  crearNuevoExamen: \"[Exam] Crear Nuevo Examen ID Trabajador\",\n  getExamenUrl: \"[Exam] Get Examen URL\",\n  examenesLogout: \"[Exam] Limpiar Examenes\",\n  getTodoExamenesTrabajadorID: \"[Exam] Examenes por idTrabajador\",\n\n\n  //UI\n  uiOpenModal: \"[UI] Open Modal\",\n  uiCloseModal: \"[UI] Close Modal\",\n\n  //empresas\n  crearNuevaEmpresa: \"[EMP] Crear Nueva Empresa\",\n  getTodasLasEmpresas: \"[EMP] Get Todas Las Empresa\",\n\n  //Equipos\n  getEquiposIdEmpresa: \"[Emp] Get Equipos ID Empresa\",\n  crearEquipoEmpresa: \"[Emp] Equipo Creado\",\n  equiposLogout: \"[Emp] Limpiar Equipos\",\n  equipoExist: \"[Emp] Equipo ya está en DB\",\n\n  //Permisos\n  getTodoPermisosEquipoID: '[PER] Get todos Permisos Equipo ID',\n  getPermisosPorVencerTodasLasEmpresas: '[PER] Get todos Permisos por vencer todas las empresas',\n  crearNuevoPermiso: '[PER] Crear Nuevo Permiso'\n};\n","// import Swal from \"sweetalert2\";\n\nimport { firebase, db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, \"\"));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName,\n  },\n});\n\n//TODO: descomponer funcion\nexport const startRegisterWithEmailPasswordName = (\n  email,\n  password,\n  name,\n  rol,\n  empresa\n) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n\n        const userDatabase = {\n          isAdmin: rol === \"true\" ? true : false,\n          idEmpresa: empresa,\n          nombre: name,\n        };\n        //autologin:  después de crear, no se necesita acá\n        //dispatch(login(user.uid, user.displayName));\n        /**\n         * TODO: HACER DISPATCH QUE CREE EL USER EN LA BD\n         */\n\n        const doc = await db\n          .collection(\"usuarios\")\n          .doc(user.uid)\n          .set(userDatabase);\n        console.log(doc);\n      })\n      .catch((e) => {\n        console.log(e);\n        // Swal.fire(\"Error\", e.message, \"error\");\n      });\n  };\n};\n\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    //borra datos de auth en state\n    dispatch(logout());\n    //borra datos de user en state\n  };\n};\n\nexport const logout = () => ({\n  type: types.logout,\n});\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { startLoginEmailPassword } from \"../../actions/auth\";\nimport { useForm } from \"../../hooks/useForm\";\nimport \"./signin.css\";\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange] = useForm({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLoginEmailPassword(email, password));\n  };\n  return (\n    <div className=\"text-center\">\n      <main className=\"form-signin\">\n        <form onSubmit={handleLogin}>\n          <h1 className=\"h3 mb-3 fw-normal\">Ingreso Empresas</h1>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            placeholder=\"Correo Electrónico\"\n            required\n            autoFocus\n            onChange={handleInputChange}\n            value={email}\n          />\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            placeholder=\"Contraseña\"\n            required\n            onChange={handleInputChange}\n            value={password}\n          />\n          <div className=\"checkbox mb-3\"></div>\n          <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n            Ingresar\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startGetTrabajadoresIdEmpresa = (idEmpresa) => {\n  return async (dispatch) => {\n    const trabajadores = [];\n    db.collection(\"trabajadores\")\n      .where(\"idEmpresa\", \"==\", idEmpresa)\n      .get()\n      .then((snapTrabajadores) => {\n        snapTrabajadores.forEach((trabajador) => {\n          trabajadores.push({\n            id: trabajador.id,\n            ...trabajador.data(),\n          });\n        });\n        dispatch(getTrabajadoresIdEmpresa(trabajadores));\n      });\n  };\n};\n\nexport const getTrabajadoresIdEmpresa = (trabajadores) => ({\n  type: types.getTrabajadoresIdEmpresa,\n  payload: trabajadores,\n});\n\nexport const trabajadoresLogout = () => ({\n  type: types.trabajadoresLogout,\n});\n\nexport const startCrearTrabajadorEmpresa = (idEmpresa, idEmpleado, nombre) => {\n  return async (dispatch) => {\n    //crea usuario\n    db.collection(\"trabajadores\").doc(idEmpleado).set({\n      idEmpresa: idEmpresa,\n      nombre: nombre,\n    });\n    dispatch(crearTrabajadorEmpresa());\n    //actualizar la lista de usuarios de la empresa\n    dispatch(startGetTrabajadoresIdEmpresa(idEmpresa));\n  };\n};\n\nexport const crearTrabajadorEmpresa = () => ({\n  type: types.crearTrabajadorEmpresa,\n  payload: true,\n});\nexport const trabajadorExist = () => ({\n  type: types.crearTrabajadorEmpresa,\n  payload: false,\n});\n","export const fileUpload = async (file) => {\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/dgoxdpdrc/upload\";\n  const formData = new FormData();\n  formData.append(\"upload_preset\", \"morevalue\");\n  formData.append(\"folder\", \"pdf\");\n  formData.append(\"file\", file);\n  try {\n    const resp = await fetch(cloudUrl, {\n      method: \"POST\",\n      body: formData,\n    });\n    if (resp.ok) {\n      const cloudResp = await resp.json();\n      return cloudResp.secure_url;\n    } else {\n      throw await resp.json();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { types } from \"../types/types\";\n\n\n\n/**\n * TODO: Falta crear getExamenesPorIdTrabajador para mostrar en resumen trabajador\n */\n\n\n export const startGetTodoExamenesTrabajadorID = (idTrabajador) => {\n  const examenes = [];\n  return async (dispatch) => {\n    await db\n      .collection(\"examenes\")\n      .where(\"idTrabajador\", \"==\", idTrabajador)\n      .get()\n      .then((snap) => {\n        snap.forEach((examen) => {\n          examenes.push({\n            id: examen.id,\n            ...examen.data(),\n          })\n        }\n        );\n      });\n    dispatch(getTodoExamenesTrabajadorID(examenes));\n  };\n }\n\nexport const getTodoExamenesTrabajadorID = (examenes) =>({\n  type: types.getTodoExamenesTrabajadorID,\n  payload: examenes,\n})\n\nexport const startGetExamenesPorVencerTodasLasEmpresas = () => {\n  var someDate = new Date();\n  var numberOfDaysToAdd = 60;\n  someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n  const newDate = someDate.getTime();\n  const examenes = [];\n  return async (dispatch) => {\n    await db\n      .collection(\"examenes\")\n      .where(\"fechaCaducidad\", \"<=\", newDate)\n      .get()\n      .then((snap) => {\n        snap.forEach((examen) => {\n          examenes.push({\n            id: examen.id,\n            ...examen.data(),\n          })\n        }\n        );\n      });\n    dispatch(getExamenesPorVencerTodasLasEmpresas(examenes));\n  };\n}\n\nexport const getExamenesPorVencerTodasLasEmpresas = (examenes) => ({\n  type: types.getExamenesPorVencerTodasLasEmpresas,\n  payload: examenes,\n});\n\n\nexport const startGetExamenesPorVencerPorIdEmpresa = (idEmpresa) => {\n  var someDate = new Date();\n  var numberOfDaysToAdd = 60;\n  someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n  const newDate = someDate.getTime();\n  const examenes = [];\n  return async (dispatch) => {\n    await db\n      .collection(\"examenes\")\n      .where(\"idEmpresa\", \"==\", idEmpresa)\n      //Calcular fecha a 60 días (se creo un filtro en firestore tambien)\n      .where(\"fechaCaducidad\", \"<=\", newDate)\n      .get()\n      .then((snap) => {\n        snap.forEach((examen) =>\n          examenes.push({\n            id: examen.id,\n            ...examen.data(),\n          })\n        );\n      });\n    dispatch(getExamenesPorVencerPorIdEmpresa(examenes));\n  };\n};\n\nexport const getExamenesPorVencerPorIdEmpresa = (examenes) => ({\n  type: types.getExamenesPorVencerPorIdEmpresa,\n  payload: examenes,\n});\n\nexport const startCrearNuevoExamen = (examen) => {\n  return async (dispatch) => {\n    const examenRef = db.collection(\"examenes\");\n    //agredar Datos\n    examenRef\n      .add(examen)\n      .then((examen) => {\n        console.log(\"Agregado: \", examen.id);\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n    dispatch(crearNuevoExamen(examen));\n  };\n};\n\nexport const crearNuevoExamen = (examen) => ({\n  type: types.crearNuevoExamen,\n  payload: examen,\n});\n\nexport const startUploadingExamen = (examenFile) => {\n  return async (dispatch) => {\n    const fileUrl = await fileUpload(examenFile);\n    dispatch(uploadingExamen(fileUrl));\n  };\n};\n\nexport const uploadingExamen = (fileUrl) => ({\n  type: types.getExamenUrl,\n  payload: fileUrl,\n});\n\n\nexport const examenesLogout = () => ({\n  type: types.examenesLogout,\n});\n\nexport const startLogDescargas = (\n  idUsuario,\n  idEmpresa,\n  idTrabajador,\n  nombreExamen,\n  url\n) => {\n  return async () => {\n    await db\n      .collection(`registro/${idUsuario}/log`)\n      .add(\n        {\n          fechaDescarga: new Date().toLocaleDateString(),\n          id: idUsuario,\n          idEmpresa: idEmpresa,\n          idTrabajador: idTrabajador,\n          archivoDescargado: nombreExamen,\n          url: url,\n        },\n        { merge: true }\n      )\n      .then((ok) => {\n        console.log(\"Registro Ingresado: \", ok);\n      })\n      .catch((err) => {\n        console.log(\"Algo salió mal: \", err);\n      });\n  };\n};\n\n","// import Swal from \"sweetalert2\";\n\nimport { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startLoadUserData = (uid) => {\n  return async (dispatch) => {\n    const docRef = db.collection(\"usuarios\").doc(uid);\n    await docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          // console.log(doc.data());\n          const user = {\n            ...doc.data(),\n          };\n          dispatch(loadUserData(user));\n        } else {\n          console.log(\"no existe\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n//carga los datos del usuario en el store\nexport const loadUserData = (user) => ({\n  type: types.loadUserData,\n  payload: user,\n});\n//limpia el store\nexport const userLogout = () => ({\n  type: types.userLogout,\n});\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\nimport { trabajadoresLogout } from \"../../actions/employee\";\nimport { examenesLogout } from \"../../actions/exam\";\nimport { userLogout } from \"../../actions/user\";\n\nexport const Navbar = () => {\n  //obtiene el nombre\n  const { nombre } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n    dispatch(userLogout());\n    dispatch(trabajadoresLogout());\n    dispatch(examenesLogout());\n  };\n\n  return (\n    <div>\n      <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n        <div className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3 nav-link\">\n          {nombre}\n        </div>\n        <button\n          className=\"navbar-toggler position-absolute d-md-none collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#sidebarMenu\"\n          aria-controls=\"sidebarMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\">\n          </span>\n        </button>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap\">\n            <button className=\"btn nav-link\" onClick={handleLogout}>\n              Salir\n            </button>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n};\n","import { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startGetPermisosPorVencerTodasLasEmpresas = () => {\n    var someDate = new Date();\n    var numberOfDaysToAdd = 60;\n    someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n    const newDate = someDate.getTime();\n    const permisos = [];\n    return async (dispatch) => {\n      await db\n        .collection(\"permisos\")\n        .where(\"fechaCaducidad\", \"<=\", newDate)\n        .get()\n        .then((snap) => {\n          snap.forEach((permiso) => {\n            permisos.push({\n              id: permiso.id,\n              ...permiso.data(),\n            })\n          }\n          );\n        });\n      dispatch(getPermisosPorVencerTodasLasEmpresas(permisos));\n    };\n  }\n  \n  export const getPermisosPorVencerTodasLasEmpresas = (permisos) => ({\n    type: types.getPermisosPorVencerTodasLasEmpresas,\n    payload: permisos,\n  });\n\n  export const startGetTodoPermisosEquipoID = (idEquipo) => {\n    const permisos = [];\n    return async (dispatch) => {\n      await db\n        .collection(\"permisos\")\n        .where(\"idEquipo\", \"==\", idEquipo)\n        .get()\n        .then((snap) => {\n          snap.forEach((permiso) => {\n            permisos.push({\n              id: permiso.id,\n              ...permiso.data(),\n            })\n          }\n          );\n        });\n      dispatch(getTodoPermisosEquipoID(permisos));\n    };\n   }\n  \n  export const getTodoPermisosEquipoID = (permisos) =>({\n    type: types.getTodoPermisosEquipoID,\n    payload: permisos,\n  })\n\n  export const startCrearNuevoPermiso = (permiso) => {\n    return async (dispatch) => {\n      const permisoRef = db.collection(\"permisos\");\n      //agredar Datos\n      permisoRef\n        .add(permiso)\n        .then((permiso) => {\n          console.log(\"Agregado: \", permiso.id);\n        })\n        .catch((error) => {\n          console.log(\"Error: \", error);\n        });\n      dispatch(crearNuevoExamen(permiso));\n    };\n  };\n  \n  export const crearNuevoExamen = (permiso) => ({\n    type: types.crearNuevoPermiso,\n    payload: permiso,\n  });","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogDescargas } from \"../../../actions/exam\";\nexport const ExamenScreen = ({ id, ...examen }) => {\n  const dispatch = useDispatch();\n  const { idEmpresa, idTrabajador, fechaCaducidad, url, nombreExamen } = examen;\n  const { nombre, idUsuario } = useSelector((state) => state.user);\n  const handleSearchEmployee = () => {\n    console.log(\"buscar employee\");\n    /**\n     * muestra la pantalla del empleado de acuerdo a su rut\n     */\n  };\n\n  const handleDownload = () => {\n    console.log(\n      \"archivo descargado: \" + nombreExamen + \"descargado por: \" + nombre\n    );\n    dispatch(\n      startLogDescargas(idUsuario, idEmpresa, idTrabajador, nombreExamen, url)\n    );\n  };\n\n  return (\n    <tr>\n      <td>{idEmpresa}</td>\n      <td onClick={handleSearchEmployee}>{idTrabajador}</td>\n      <td>{new Date(fechaCaducidad).toLocaleDateString()}</td>\n      <td>{nombreExamen}</td>\n\n      <td>\n        <a\n          className=\"data\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          onClick={handleDownload}\n        >\n          descargar\n        </a>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const PermisosScreen = ({ id, ...permiso }) => {\n    const dispatch = useDispatch();\n    const { idEmpresa, idEquipo, fechaCaducidad, url, nombrePermiso } = permiso;\n    const { nombre, idUsuario } = useSelector((state) => state.user);\n    const handleSearchEmployee = () => {\n        console.log(\"buscar employee\");\n        /**\n         * muestra la pantalla del empleado de acuerdo a su rut\n         */\n    };\n\n    // const handleDownload = () => {\n    //     console.log(\n    //         \"archivo descargado: \" + nombreExamen + \"descargado por: \" + nombre\n    //     );\n    //     dispatch(\n    //         startLogDescargas(idUsuario, idEmpresa, idTrabajador, nombreExamen, url)\n    //     );\n    // };\n\n    return (\n        <tr>\n            <td>{idEmpresa}</td>\n            <td>{idEquipo}</td>\n            <td>{new Date(fechaCaducidad).toLocaleDateString()}</td>\n            <td>{nombrePermiso}</td>\n\n            <td>\n                <a\n                    className=\"data\"\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                // onClick={handleDownload}\n                >\n                descargar\n        </a>\n            </td>\n        </tr >\n    );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startGetPermisosPorVencerTodasLasEmpresas } from \"../../actions/permisos.actions\";\nimport { startGetExamenesPorVencerTodasLasEmpresas } from \"../../actions/exam\";\nimport { ExamenScreen } from \"../ui/examenes/ExamenScreen\";\nimport { PermisosScreen } from \"./permisos/PermisosScreen\";\nexport const DashBoardScreen = () => {\n  const dispatch = useDispatch();\n  const { examenes } = useSelector((state) => state.exam);\n  const { permisos } = useSelector((state) => state.perm);\n  const state = useSelector(state => state.state)\n  return (\n    <div>\n      <h1>Resumen:</h1>\n      <hr />\n      <h2>\n        Examenes por Vencer{\" \"}\n        <i\n          className=\"fas fa-sync fa-xs\"\n          style={{ cursor: \"pointer\", color: \"green\" }}\n          onClick={() => {\n            dispatch(startGetExamenesPorVencerTodasLasEmpresas());\n            dispatch(startGetPermisosPorVencerTodasLasEmpresas());\n          }}\n        ></i>\n      </h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th scope=\"col\" data-sortable=\"true\" data-field=\"id\">Rut Empresa</th>\n            <th scope=\"col\">Rut Trabajador</th>\n            <th scope=\"col\">Fecha Caducidad</th>\n            <th scope=\"col\">Nombre Examen</th>\n            <th scope=\"col\">Examen</th>\n          </tr>\n        </thead>\n        <tbody>\n          {examenes ? (\n            examenes.map((examen) => (\n              <ExamenScreen key={examen.id} {...examen} />\n            ))\n          ) : (\n              <>Loading...</>\n            )}\n        </tbody>\n\n      </table>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th scope=\"col\" data-sortable=\"true\" data-field=\"id\">Rut Empresa</th>\n            <th scope=\"col\">ID Equipo</th>\n            <th scope=\"col\">Fecha Caducidad</th>\n            <th scope=\"col\">Nombre Permiso</th>\n            <th scope=\"col\">Permiso</th>\n          </tr>\n        </thead>\n        <tbody>\n          {permisos ? (\n            permisos.map((permiso) => (\n              <PermisosScreen key={permiso.id} {...permiso} />\n            ))\n          ) : (\n              <>Loading...</>\n            )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n  payload: true,\n});\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n  payload: false,\n});\n\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport Modal from \"react-modal\";\nimport \"./modal.css\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../../actions/ui\";\nimport { startCrearNuevoExamen, startGetTodoExamenesTrabajadorID } from \"../../../actions/exam\";\nimport { startUploadingExamen } from \"../../../actions/exam\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst now = moment().minutes(0).seconds(0);\nModal.setAppElement(\"#root\");\n\nexport const CalendarModal = ({ idTrabajador, idEmpresa }) => {\n  const dispatch = useDispatch();\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { url } = useSelector((state) => state.exam);\n  const [dateStart, setDateStart] = useState(now.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n  const [formValues, setFormValues] = useState({\n    nombreExamen: \"\",\n    fechaCaducidad: now.toDate(),\n  });\n  const { nombreExamen } = formValues;\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e);\n    setFormValues({\n      ...formValues,\n      fechaCaducidad: e,\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    if (nombreExamen.trim().length < 2) {\n      return setTitleValid(false);\n    }\n    setTitleValid(true);\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    // setIsOpen(false);\n  };\n\n  const handleNewExamen = () => {\n    dispatch(\n      startCrearNuevoExamen({\n        idTrabajador: idTrabajador,\n        idEmpresa: idEmpresa,\n        nombreExamen: nombreExamen,\n        fechaCaducidad: new Date(formValues.fechaCaducidad).getTime(),\n        fechaCreacion: new Date().getTime(),\n        url: url,\n      })\n    );\n    //carga de inmediato el nuevo examen\n    Swal.fire(\"Examen Creado con Éxito\", \"\", \"success\");\n    dispatch(uiCloseModal());\n    startGetTodoExamenesTrabajadorID(idTrabajador)\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      //si se adjuntó archivo, obtener la URL\n      dispatch(startUploadingExamen(file));\n    }\n  };\n\n  const handleArchivoExamenchange = () => {\n    document.querySelector(\"#fileSelector\").click();\n  };\n  //   closeModal();\n  return (\n    <Modal\n      isOpen={modalOpen}\n      //   onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n      closeTimeoutMS={500}\n\n    >\n      <h1> Nuevo examen </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && \"is-invalid\"}`}\n            placeholder=\"Nombre del examen\"\n            name=\"nombreExamen\"\n            autoComplete=\"off\"\n            value={nombreExamen}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Fecha Vencimiento</label>\n          <DateTimePicker\n            name=\"vencimiento\"\n            className=\"form-control\"\n            value={dateStart}\n            onChange={handleStartDateChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Adjuntar Archivo</label>\n          <br />\n          <input\n            id=\"fileSelector\"\n            type=\"file\"\n            name=\"file\"\n            style={{ display: \"none\" }}\n            onChange={handleFileChange}\n            required\n          />\n          <button\n            className=\"btn btn-success\"\n            onClick={handleArchivoExamenchange}\n          >\n            Archivo Examen\n          </button>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n          style={{\n            marginTop: \"10px\",\n            display: `${url ? \"\" : \"none\"}`,\n          }}\n          onClick={handleNewExamen}\n        >\n          <i className=\"far fa-save\" style={{ cursor: \"pointer\" }}></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"../../hooks/useForm\";\nimport Swal from \"sweetalert2\";\nimport { CalendarModal } from \"../ui/modal/CalendarModal\";\nimport { uiOpenModal } from \"../../actions/ui\";\nimport { ExamenScreen } from \"../ui/examenes/ExamenScreen\";\nimport { startGetTodoExamenesTrabajadorID } from \"../../actions/exam\";\n\nexport const EditEmployeeScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange, reset] = useForm({\n    idTrabajador: \"\",\n  });\n  const { idTrabajador } = formValues;\n  \n  dispatch(startGetTodoExamenesTrabajadorID(idTrabajador));\n  const [exist, setExist] = useState(false);\n  const [datosTrabajador, setDatosTrabajador] = useState([]);\n  const [datosExamenes, setDatosExamenes] = useState([]);\n  const { trabajadores } = useSelector((state) => state.trab);\n  const { examenesIdTrabajador } = useSelector((state) => state.exam);\n  const { idEmpresa } = useSelector((state) => state.user);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    buscar(idTrabajador);\n  };\n  const buscar = (idTrabajador) => {\n    const tra = trabajadores.filter((employee) => employee.id === idTrabajador);\n    setDatosTrabajador(tra);\n    const ex = examenesIdTrabajador.filter(\n      (examen) => examen.idTrabajador === idTrabajador\n    );\n    setDatosExamenes(ex);\n\n    if (tra.length > 0) {\n      // setDatosTrabajador(tra);\n      // setDatosExamenes(ex);\n      setExist(true);\n    } else {\n      Swal.fire(\"Trabajador No Encontrado\", \"\", \"warning\");\n      //evita error de busqueda de no existente, después de encontrado\n      setExist(false)\n      reset();\n    }\n  };\n  const handleModal = () => {\n    dispatch(uiOpenModal());\n  };\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <h1 className=\"h3 mb-3 fw-normal\">Buscar Trabajador</h1>\n        <hr />\n        <input\n          type=\"text\"\n          id=\"idTrabajador\"\n          name=\"idTrabajador\"\n          className=\"form-control\"\n          placeholder=\"Ingrese rut, ej: 123456789\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={idTrabajador}\n        />\n        <button\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n          type=\"submit\"\n        >\n          Buscar\n        </button>\n      </form>\n\n      {exist ? (\n        <div>\n          <h3>Datos del Trabajador</h3>\n          <div className=\"datosTrabajador\">\n            {datosTrabajador ? (\n              <div>Nombre: {datosTrabajador[0].nombre}</div>\n            ) : (\n                <div></div>\n              )}\n          </div>\n          <div>\n            <h3>\n              Examenes{\" \"}\n              <span style={{ color: \"green\", cursor: \"pointer\" }}>\n                <i className=\"fas fa-plus-circle\" onClick={handleModal}>\n                  {\" \"}\n                </i>\n              </span>\n            </h3>\n          </div>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Rut Empresa</th>\n                <th scope=\"col\">Rut Trabajador</th>\n                <th scope=\"col\">Fecha Caducidad</th>\n                <th scope=\"col\">Nombre Examen</th>\n                <th scope=\"col\">Examen</th>\n              </tr>\n            </thead>\n            <tbody>\n              {datosExamenes ? (\n                datosExamenes.map((examen) => (\n                  <ExamenScreen key={examen.id} {...examen} />\n                ))\n              ) : (\n                  <>Loading...</>\n                )}\n            </tbody>\n          </table>\n          <CalendarModal idTrabajador={idTrabajador} idEmpresa={idEmpresa} />\n        </div>\n      ) : (\n          <div></div>\n        )}\n    </div>\n  );\n};\n","import React from 'react'\n\nexport const DropDown = (data) => {\n    //nombre Empresa\n    const { nombre, idEmpresa } = data;\n    return (\n        \n        <option key={idEmpresa} value={idEmpresa} className='dropdown-item'>{nombre}</option>\n    )\n}\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startCrearTrabajadorEmpresa } from \"../../actions/employee\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { DropDown } from \"../ui/drop-down/DropDown\";\n\nexport const CreateEmployeeScreen = () => {\n  // const { idEmpresa } = useSelector((state) => state.user);\n  const { trabajadores } = useSelector((state) => state.trab);\n  const { empresas } = useSelector(state => state.empr);\n  const dispatch = useDispatch();\n\n\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpleado: \"\",\n    nombre: \"\",\n    idEmpresa: \"\",\n  });\n\n  const { idEmpleado, nombre, idEmpresa } = formValues;\n  console.log(formValues);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const tra = trabajadores.filter((employee) => employee.id === idEmpleado);\n    if (tra.length > 0) {\n      Swal.fire(\"Ya existe este trabajador\", '', \"error\");\n      reset();\n    } else {\n      dispatch(startCrearTrabajadorEmpresa(idEmpresa, idEmpleado, nombre));\n      Swal.fire(\"Trabajador Creado con éxito\", \"\", \"success\");\n      reset();\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"h3 mb-3 fw-normal\">Nuevo Trabajador</h1>\n        <hr />\n        <select\n          id='idEmpresa'\n          name='idEmpresa'\n          className=\"form-select\"\n          required\n          value={idEmpresa}\n          onChange={handleInputChange}\n\n        >\n          <option defaultValue key='default' value='default' className='dropdown-item'>Selecciona una empresa</option>\n          {\n            empresas.map(empresa => <DropDown key={empresa.idEmpresa} {...empresa} />)\n          }\n        </select>\n        <input\n          type=\"text\"\n          id=\"idEmpleado\"\n          name=\"idEmpleado\"\n          className=\"form-control\"\n          placeholder=\"Ingrese Rut sin puntos, ni guión\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={idEmpleado}\n        />\n        <input\n          type=\"text\"\n          id=\"nombre\"\n          name=\"nombre\"\n          className=\"form-control\"\n          placeholder=\"Nombre\"\n          required\n          autoFocus\n          onChange={handleInputChange}\n          value={nombre}\n        />\n        <button\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\" }}\n          type=\"submit\"\n        >\n          Crear Trabajador\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\n\nexport const startGetTodasLasEmpresas = () => {\n  return async (dispatch) => {\n    const empresas = [];\n    db.collection(\"empresas\")\n      .get()\n      .then((empresasRef) => {\n        empresasRef.forEach((empresa) => {\n          empresas.push({\n            idEmpresa: empresa.id,\n            ...empresa.data(),\n          });\n        });\n        dispatch(getTodasLasEmpresas(empresas));\n      });\n  };\n};\n\nexport const getTodasLasEmpresas = (empresas) => ({\n  type: types.getTodasLasEmpresas,\n  payload: empresas,\n});\n\nexport const startCrearNuevaEmpresa = (idEmpresa, empresa) => {\n  return async (dispatch) => {\n    await db.collection(\"empresas\").doc(idEmpresa).set(empresa);\n    // dispatch(crearNuevaEmpresa(empresa));\n    dispatch(startGetTodasLasEmpresas());\n  };\n};\n\nexport const startUpdateEmpresa = (empresa) => {\n  const { idEmpresa } = empresa\n  return async (dispatch) => {\n    const docRef = await db.collection('empresas').doc(idEmpresa).get();\n    if (docRef.exists) {\n      dispatch(startCrearNuevaEmpresa(idEmpresa, empresa))\n      // await db.collection('empresas').doc(idEmpresa).set({\n      //   idEmpresa: idEmpresa,\n      //   nombre: nombre,\n      // })\n      //   .then(console.log('Actualizado: ', idEmpresa))\n      //   .catch(error => {\n      //     console.log('Ocurrió un error: ', error);\n      //   })\n      // dispatch(updateEmpresa(idEmpresa, nombre))\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport const updateEmpresa = (idEmpresa, nombre) => ({\n  types: types.updateEmpresa,\n  payload: [idEmpresa, nombre]\n})\n\n//TODO: updateEmpresa\n\n// export const crearNuevaEmpresa = (empresa) => ({\n//   type: types.crearNuevaEmpresa,\n//   payload: empresa,\n// });\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startCrearNuevaEmpresa } from \"../../actions/empresa.actions\";\nimport { useForm } from \"../../hooks/useForm\";\n\nexport const CreateEmpresaScreen = () => {\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpresa: \"\",\n    nombre: \"\",\n  });\n  const { empresas } = useSelector((state) => state.empr);\n  const { idEmpresa, nombre } = formValues;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const emp = empresas.filter((empresa) => empresa.idEmpresa === idEmpresa);\n    if (emp.length > 0) {\n      Swal.fire(\"Ya existe esta Empresa\", \"\", \"error\");\n      reset();\n    } else if (idEmpresa < 9) {\n      Swal.fire(\"El rut proporcionado es muy corto\", \"\", \"error\");\n      reset();\n    } else {\n      dispatch(\n        startCrearNuevaEmpresa(idEmpresa, {\n          idEmpresa: idEmpresa,\n          nombre: nombre,\n        })\n      );\n      Swal.fire(\"Empresa Creada con éxito\", \"\", \"success\");\n      reset();\n    }\n  };\n\n  return (\n    <div>\n      <h3>Crear Empresa</h3>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          id=\"idEmpresa\"\n          name=\"idEmpresa\"\n          type=\"text\"\n          value={idEmpresa}\n          onChange={handleInputChange}\n          className=\"form-control\"\n          placeholder=\"Rut Empresa sin puntos ni guión\"\n          required\n        />\n        <input\n          id=\"nombre\"\n          name=\"nombre\"\n          type=\"text\"\n          value={nombre}\n          onChange={handleInputChange}\n          className=\"form-control\"\n          placeholder=\"Nombre Empresa\"\n          required\n        />\n        <button\n          type=\"Submit\"\n          className=\"w-100 btn btn-lg btn-primary\"\n          style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n        >\n          crear\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { startUpdateEmpresa } from \"../../actions/empresa.actions\";\nimport { useForm } from \"../../hooks/useForm\";\n\nexport const EditEmpresaScreen = () => {\n  const dispatch = useDispatch()\n  const { empresas } = useSelector((state) => state.empr);\n  const [datosEmpresa, setDatosEmpresa] = useState();\n  const [exist, setExist] = useState(false);\n  const [editable, setEditable] = useState(false);\n  const [formValues, handleInputChange, reset] = useForm({\n    idEmpresa: \"\",\n  });\n  const { idEmpresa, nombre } = formValues;\n\n  const handleSearch = () => {\n    buscar(idEmpresa);\n  };\n  const buscar = (idEmpresa) => {\n    const emp = empresas.filter((empresa) => empresa.idEmpresa === idEmpresa);\n    if (emp.length > 0) {\n      // setDatosTrabajador(tra);\n      // setDatosExamenes(ex);\n      setDatosEmpresa(emp);\n      setExist(true);\n      setEditable(false);\n    } else {\n      Swal.fire(\"Empresa No Encontrada\", \"\", \"warning\");\n      setExist(false);\n      reset();\n    }\n  };\n\n  const handleEdit = () => {\n    setEditable(true);\n  };\n\n\n  const handleUpdate = (event) => {\n    event.preventDefault();\n    if (nombre.length <= 1) {\n      Swal.fire(\"El nombre es muy corto\", \"\", \"info\");\n      return;\n    }\n    /**\n     * TODO: limpiar el formulario al actualizar\n     */\n    dispatch(startUpdateEmpresa({ idEmpresa: idEmpresa, nombre: nombre }))\n      ? (Swal.fire(\"La Empresa se actualizó con éxito\", \"\", 'success'))\n      : (Swal.fire(\"Hubo un problema\", \"No se pudo actualizar\", 'err'))\n    reset()\n    setExist(false)\n  };\n\n  return (\n    <div>\n      <input\n        name=\"idEmpresa\"\n        id=\"idEmpresa\"\n        value={idEmpresa}\n        onChange={handleInputChange}\n        className=\"form-control\"\n        required\n        placeholder=\"Ingrese Rut sin puntos ni guión\"\n      />\n      <button\n        className=\"w-100 btn btn-lg btn-primary\"\n        style={{ marginTop: \"10px\" }}\n        type=\"submit\"\n        onClick={handleSearch}\n      >\n        Buscar\n      </button>\n\n      {exist ? (\n        <div>\n          <div style={{ marginTop: \"20px\" }}>\n            <h3>\n              <span>\n                Datos de la Empresa{\" \"}\n                <i\n                  className=\"fas fa-edit\"\n                  style={{ color: \"green\", cursor: \"pointer\" }}\n                  onClick={handleEdit}\n                ></i>\n              </span>\n            </h3>\n          </div>\n          <div>\n            <form onSubmit={handleUpdate}>\n              <label>Nombre</label>\n              <input\n                name=\"nombre\"\n                id=\"nombre\"\n                value={nombre}\n                onChange={handleInputChange}\n                className=\"form-control\"\n                readOnly={editable ? false : true}\n                required\n                placeholder={`${datosEmpresa[0].nombre} `}\n              />\n              {editable && (\n                <button\n                  className=\"w-100 btn btn-lg btn-primary\"\n                  style={{ marginTop: \"10px\" }}\n                  type=\"submit\"\n                >\n                  Guardar Cambios\n                </button>\n              )}\n            </form>\n          </div>\n        </div>\n      ) : (\n          <div></div>\n        )}\n    </div>\n  );\n};\n","import { db } from '../firebase/firebase-config'\nimport { types } from '../types/types';\n\nexport const startCrearEquipoEmpresa = (idEmpresa, idEquipo, nombre) => {\n    return async (dispatch) => {\n        //crea equipo\n        db.collection(\"equipos\").doc(idEquipo).set({\n            idEmpresa: idEmpresa,\n            nombre: nombre,\n        });\n        dispatch(crearEquipoEmpresa());\n        //actualizar la lista de equipos de la empresa\n        dispatch(startGetEquiposIdEmpresa(idEmpresa));\n    };\n};\n\nexport const crearEquipoEmpresa = () => ({\n    type: types.crearEquipoEmpresa,\n    payload: true,\n});\n\nexport const startGetEquiposIdEmpresa = (idEmpresa) => {\n    return async (dispatch) => {\n        const equipos = [];\n        db.collection(\"equipos\")\n            .where(\"idEmpresa\", \"==\", idEmpresa)\n            .get()\n            .then((snapEquipos) => {\n                snapEquipos.forEach((equipo) => {\n                    equipos.push({\n                        id: equipo.id,\n                        ...equipo.data(),\n                    });\n                });\n                dispatch(getEquiposIdEmpresa(equipos));\n            });\n    };\n};\n\nexport const getEquiposIdEmpresa = (equipos) => ({\n    type: types.getEquiposIdEmpresa,\n    payload: equipos,\n});","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { DropDown } from \"../ui/drop-down/DropDown\";\nimport { startCrearEquipoEmpresa } from \"../../actions/equipos.actions\";\n\nexport const CreateEquipmentScreen = () => {\n    const { equipos } = useSelector(state => state.equi)\n    const { empresas } = useSelector(state => state.empr);\n    const dispatch = useDispatch();\n\n\n    const [formValues, handleInputChange, reset] = useForm({\n        idEmpresa: \"\",\n        idEquipo: \"\",\n        nombre: \"\",\n    });\n\n    const { idEquipo, nombre, idEmpresa } = formValues;\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const eqp = equipos.filter(equipo => equipo.id === idEquipo);\n        if (eqp.length > 0) {\n            Swal.fire(\"Ya existe este equipo\", '', \"error\");\n            reset();\n        } else {\n            dispatch(startCrearEquipoEmpresa(idEmpresa, idEquipo, nombre));\n            Swal.fire(\"Equipo Creado con éxito\", \"\", \"success\");\n            reset();\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <h1 className=\"h3 mb-3 fw-normal\">Nuevo Eqiupo</h1>\n                <hr />\n                <select\n                    id='idEmpresa'\n                    name='idEmpresa'\n                    className=\"form-select\"\n                    required\n                    value={idEmpresa}\n                    onChange={handleInputChange}\n\n                >\n                    <option defaultValue key='default' value='default' className='dropdown-item'>Selecciona una empresa</option>\n                    {\n                        empresas.map(empresa => <DropDown key={empresa.idEmpresa} {...empresa} />)\n                    }\n                </select>\n                <input\n                    type=\"text\"\n                    id=\"idEquipo\"\n                    name=\"idEquipo\"\n                    className=\"form-control\"\n                    placeholder=\"Ingrese patente o código del equipo\"\n                    required\n                    autoFocus\n                    onChange={handleInputChange}\n                    value={idEquipo}\n                />\n                <input\n                    type=\"text\"\n                    id=\"nombre\"\n                    name=\"nombre\"\n                    className=\"form-control\"\n                    placeholder=\"Nombre\"\n                    required\n                    autoFocus\n                    onChange={handleInputChange}\n                    value={nombre}\n                />\n                <button\n                    className=\"w-100 btn btn-lg btn-primary\"\n                    style={{ marginTop: \"10px\" }}\n                    type=\"submit\"\n                >\n                    Crear Eqiupo\n        </button>\n            </form>\n        </div>\n    );\n};\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport Modal from \"react-modal\";\nimport \"./modal.css\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../../actions/ui\";\nimport { startUploadingExamen } from \"../../../actions/exam\";\nimport { startCrearNuevoPermiso, startGetTodoPermisosEquipoID } from \"../../../actions/permisos.actions\";\n\nconst customStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n    },\n};\nconst now = moment().minutes(0).seconds(0);\nModal.setAppElement(\"#root\");\n\nexport const PermisosModal = ({ idEquipo, idEmpresa }) => {\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector((state) => state.ui);\n    const { url } = useSelector((state) => state.exam);\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n    const [formValues, setFormValues] = useState({\n        nombrePermiso: \"\",\n        fechaCaducidad: now.toDate(),\n    });\n    const { nombrePermiso } = formValues;\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            fechaCaducidad: e,\n        });\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        if (nombrePermiso.trim().length < 2) {\n            return setTitleValid(false);\n        }\n        setTitleValid(true);\n    };\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        // setIsOpen(false);\n    };\n    console.log(idEquipo);\n    const handleNewPermiso = () => {\n        dispatch(\n            startCrearNuevoPermiso({\n                idEquipo: idEquipo,\n                idEmpresa: idEmpresa,\n                nombrePermiso: nombrePermiso,\n                fechaCaducidad: new Date(formValues.fechaCaducidad).getTime(),\n                fechaCreacion: new Date().getTime(),\n                url: url,\n            })\n        );\n        //carga de inmediato el nuevo examen\n        Swal.fire(\"Permiso Creado con Éxito\", \"\", \"success\");\n        dispatch(uiCloseModal());\n        startGetTodoPermisosEquipoID(idEquipo)\n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            //si se adjuntó archivo, obtener la URL\n            dispatch(startUploadingExamen(file));\n        }\n    };\n\n    const handleArchivoExamenchange = () => {\n        document.querySelector(\"#fileSelector\").click();\n    };\n    //   closeModal();\n    return (\n        <Modal\n            isOpen={modalOpen}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel=\"Example Modal\"\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n            closeTimeoutMS={500}\n\n        >\n            <h1> Nuevo Permiso </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n                <div className=\"form-group\">\n                    <label>Nombre</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && \"is-invalid\"}`}\n                        placeholder=\"Nombre del permiso\"\n                        name=\"nombrePermiso\"\n                        autoComplete=\"off\"\n                        value={nombrePermiso}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Fecha Vencimiento</label>\n                    <DateTimePicker\n                        name=\"vencimiento\"\n                        className=\"form-control\"\n                        value={dateStart}\n                        onChange={handleStartDateChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Adjuntar Archivo</label>\n                    <br />\n                    <input\n                        id=\"fileSelector\"\n                        type=\"file\"\n                        name=\"file\"\n                        style={{ display: \"none\" }}\n                        onChange={handleFileChange}\n                        required\n                    />\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={handleArchivoExamenchange}\n                    >\n                        Archivo Permiso\n          </button>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                    style={{\n                        marginTop: \"10px\",\n                        display: `${url ? \"\" : \"none\"}`,\n                    }}\n                    onClick={handleNewPermiso}\n                >\n                    <i className=\"far fa-save\" style={{ cursor: \"pointer\" }}></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    );\n};\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startGetTodoPermisosEquipoID } from '../../actions/permisos.actions';\nimport { useForm } from '../../hooks/useForm';\nimport { PermisosScreen } from '../ui/permisos/PermisosScreen';\nimport { uiOpenModal } from '../../actions/ui'\nimport { PermisosModal } from '../ui/modal/PermisosModal';\n\nexport const EditEquipmentScreen = () => {\n    const dispatch = useDispatch();\n    const [formValues, handleInputChange, reset] = useForm({\n        idEquipo: \"\",\n    });\n    const { idEquipo } = formValues;\n\n    dispatch(startGetTodoPermisosEquipoID(idEquipo));\n    const [exist, setExist] = useState(false);\n    const [datosEquipo, setDatosEquipo] = useState([]);\n    const [datosPermisos, setDatosPermisos] = useState([]);\n    const { equipos } = useSelector((state) => state.equi);\n    console.log(equipos);\n    const { permisos } = useSelector((state) => state.perm);\n    console.log(permisos);\n    const { idEmpresa } = useSelector((state) => state.user);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        buscar(idEquipo);\n    };\n    const buscar = (idEquipo) => {\n        const equ = equipos.filter((equipo) => equipo.id === idEquipo);\n        setDatosEquipo(equ);\n        const per = permisos.filter(\n            (permiso) => permiso.idEquipo === idEquipo\n        );\n        setDatosPermisos(per);\n\n        if (equ.length > 0) {\n            // setDatosTrabajador(tra);\n            // setDatosExamenes(ex);\n            setExist(true);\n        } else {\n            Swal.fire(\"Equipo No Encontrado\", \"\", \"warning\");\n            //evita error de busqueda de no existente, después de encontrado\n            setExist(false)\n            reset();\n        }\n    };\n    const handleModal = () => {\n        dispatch(uiOpenModal());\n    };\n    return (\n        <div>\n            <form onSubmit={handleSearch}>\n                <h1 className=\"h3 mb-3 fw-normal\">Buscar Eqiupo</h1>\n                <hr />\n                <input\n                    type=\"text\"\n                    id=\"idEquipo\"\n                    name=\"idEquipo\"\n                    className=\"form-control\"\n                    placeholder=\"Ingrese patente, ej: AABB11\"\n                    required\n                    autoFocus\n                    onChange={handleInputChange}\n                    value={idEquipo}\n                />\n                <button\n                    className=\"w-100 btn btn-lg btn-primary\"\n                    style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n                    type=\"submit\"\n                >\n                    Buscar\n        </button>\n            </form>\n\n            {exist ? (\n                <div>\n                    <h3>Datos del Equipo</h3>\n                    <div className=\"datosTrabajador\">\n                        {datosEquipo ? (\n                            <div>Nombre: {datosEquipo[0].nombre}</div>\n                        ) : (\n                                <div></div>\n                            )}\n                    </div>\n                    <div>\n                        <h3>\n                            Permisos{\" \"}\n                            <span style={{ color: \"green\", cursor: \"pointer\" }}>\n                                <i className=\"fas fa-plus-circle\" onClick={handleModal}>\n                                    {\" \"}\n                                </i>\n                            </span>\n                        </h3>\n                    </div>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Rut Empresa</th>\n                                <th scope=\"col\">Rut Trabajador</th>\n                                <th scope=\"col\">Fecha Caducidad</th>\n                                <th scope=\"col\">Nombre Examen</th>\n                                <th scope=\"col\">Examen</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {datosPermisos ? (\n                                datosPermisos.map((permiso) => (\n                                    <PermisosScreen key={permiso.id} {...permiso} />\n                                ))\n                            ) : (\n                                    <>Loading...</>\n                                )}\n                        </tbody>\n                    </table>\n                    <PermisosModal idEquipo={idEquipo} idEmpresa={idEmpresa} />\n                </div>\n            ) : (\n                    <div></div>\n                )}\n        </div>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Navbar } from \"../ui/Navbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./dashboard.css\";\nimport { DashBoardScreen } from \"../ui/DashBoardScreen\";\nimport { EditEmployeeScreen } from \"../employee/EditEmployeeScreen\";\nimport { startGetExamenesPorVencerTodasLasEmpresas } from \"../../actions/exam\";\nimport { startGetTrabajadoresIdEmpresa } from \"../../actions/employee\";\nimport { CreateEmployeeScreen } from \"../employee/CreateEmployeeScreen\";\nimport { CreateEmpresaScreen } from \"../empresa/CreateEmpresaScreen\";\nimport { startGetTodasLasEmpresas } from \"../../actions/empresa.actions\";\nimport { EditEmpresaScreen } from \"../empresa/EditEmpresaScreen\";\nimport { CreateEquipmentScreen } from \"../equipment/CreateEquipmentScreen\";\nimport { startGetEquiposIdEmpresa } from \"../../actions/equipos.actions\";\nimport { startGetPermisosPorVencerTodasLasEmpresas } from \"../../actions/permisos.actions\";\nimport { EditEquipmentScreen } from \"../equipment/EditEquipmentScreen\";\n\nexport const MvcAppScreen = () => {\n  const dispatch = useDispatch();\n  const { isAdmin, idEmpresa } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (idEmpresa) {\n      dispatch(startGetExamenesPorVencerTodasLasEmpresas());\n      dispatch(startGetPermisosPorVencerTodasLasEmpresas());\n      dispatch(startGetTodasLasEmpresas());\n      dispatch(startGetTrabajadoresIdEmpresa(idEmpresa));\n      dispatch(startGetEquiposIdEmpresa(idEmpresa));\n    }\n  }, [dispatch, idEmpresa]);\n  //aqui deberia hacer el dispatch porque ya se que empresa es\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <nav\n              id=\"sidebarMenu\"\n              className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\"\n            >\n              <div className=\"position-sticky pt-3\">\n                <ul className=\"nav flex-column\">\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/\">\n                      <span><i className='fas fa-home'></i></span>\n                      {' '}Escritorio\n                    </Link>\n                  </li>\n                  {isAdmin ? (\n                    <>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span><i className=\"fas fa-laptop-house\"></i>{' '}Empresa</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newempresa\">\n                          <span><i className=\"fas fa-plus-circle\"></i>{' '}</span>Nueva Empresa\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editempresa\">\n                          <span><i className=\"fas fa-pen\"></i>{' '}</span>Editar Empresa\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span><i className=\"fas fa-users\"></i>{' '}Usuario</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newuser\">\n                          <span><i className=\"fas fa-user-plus\"></i>{' '}</span>Nuevo Usuario\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/edituser\">\n                          <span><i className=\"fas fa-user-edit\"></i>{' '}</span>Editar Usuario\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span><i className=\"fas fa-hard-hat\"></i>{' '}Trabajadores</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/createemployee\">\n                        <span><i className=\"fas fa-plus-circle\"></i>{' '}</span>Nuevo Trabajador\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editemployee\">\n                        <span><i className=\"fas fa-pen\"></i>{' '}</span>Editar Trabajador\n                        </Link>\n                      </li>\n                      <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                        <span><i className=\"fas fa-truck-pickup\"></i>{' '}Equipos</span>\n                      </h6>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/newequipment\">\n                        <span><i className=\"fas fa-plus-circle\"></i>{' '}</span>Nuevo Equipo\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/admin/editequipment\">\n                        <span><i className=\"fas fa-pen\"></i>{' '}</span>Editar Equipo\n                        </Link>\n                      </li>\n                    </>\n                  ) : (\n                      <div></div>\n                    )}\n                </ul>\n              </div>\n            </nav>\n          </div>\n          <div>\n            <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n              <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                <Switch>\n                  <Route exact component={DashBoardScreen} path=\"/\" />\n                  <Route\n                    exact\n                    component={EditEmployeeScreen}\n                    path=\"/admin/editemployee\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmployeeScreen}\n                    path=\"/admin/createemployee\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmpresaScreen}\n                    path=\"/admin/newempresa\"\n                  />\n                  <Route\n                    exact\n                    component={EditEmpresaScreen}\n                    path=\"/admin/editempresa\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEmpresaScreen}\n                    path=\"/admin/newempresa\"\n                  />\n                  <Route\n                    exact\n                    component={CreateEquipmentScreen}\n                    path=\"/admin/newequipment\"\n                  />\n                  <Route\n                    exact\n                    component={EditEquipmentScreen}\n                    path=\"/admin/editequipment\"\n                  />\n                </Switch>\n              </div>\n            </main>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { login } from \"../actions/auth\";\nimport { firebase } from \"../firebase/firebase-config\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { PrivateRoute } from \"../routers/PrivateRoute\";\nimport { PublicRoute } from \"../routers/PublicRoute\";\nimport { MvcAppScreen } from \"../components/main/MvcAppScreen\";\nimport { startLoadUserData } from \"../actions/user\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n\n  const [checking, setChecking] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //Mantiene el estado \"state\" de redux respecto a los cambios\n  //que se generan al reacargar la página\n  //está escuchando si se logueo o cambia el login del usuario\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid));\n        //cargar el usuario que se acaba de autenticar\n        dispatch(startLoadUserData(user.uid));\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setChecking(false);\n    });\n  }, [dispatch, setChecking, setIsLoggedIn]);\n\n  if (checking) {\n    return <h1>Cargando...</h1>;\n  }\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            path=\"/auth\"\n            component={AuthRouter}\n            isAuthenticated={isLoggedIn}\n          />\n\n          <PrivateRoute\n            exact\n            isAuthenticated={isLoggedIn}\n            path=\"/\"\n            component={MvcAppScreen}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { authReducer } from \"../reducers/authReducer\";\nimport { employeeReducer } from \"../reducers/employeeReducer\";\nimport { empresaReducer } from \"../reducers/empresaReducer\";\nimport { equipmentReducer } from \"../reducers/equipmentReducer\";\nimport { examReducer } from \"../reducers/examReducer\";\nimport { permisosReducer } from \"../reducers/permisosReducer\";\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { userReducer } from \"../reducers/userReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  exam: examReducer,\n  ui: uiReducer,\n  trab: employeeReducer,\n  empr: empresaReducer,\n  equi: equipmentReducer,\n  perm: permisosReducer\n});\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        //name: action.payload.displayName,\n      };\n\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.loadUserData:\n      return {\n        nombre: action.payload.nombre,\n        idEmpresa: action.payload.idEmpresa,\n        isAdmin: action.payload.isAdmin,\n        idUsuario:action.payload.idUsuario\n      };\n\n    case types.userLogout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const examReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getExamenesPorVencerPorIdEmpresa:\n      return {\n        ...state,\n        examenes: [...action.payload],\n      };\n    case types.getTodoExamenesTrabajadorID:\n      return {\n        ...state,\n        examenesIdTrabajador: [...action.payload]\n      }\n\n    case types.getExamenesPorVencerTodasLasEmpresas:\n      return {\n        ...state,\n        examenes: [...action.payload]\n      }\n\n    case types.getExamsIdTrabajador:\n      return {\n        ...state,\n        examenes: [...action.payload],\n      };\n\n    case types.crearNuevoExamen:\n      return {\n        ...state,\n        examen: action.payload,\n      };\n    case types.getExamenUrl:\n      return {\n        ...state,\n        url: action.payload,\n      };\n\n    case types.examenesLogout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { types } from \"../types/types\";\n\nexport const employeeReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getTrabajadoresIdEmpresa:\n      return {\n        ...state,\n        trabajadores: [...action.payload],\n      };\n\n    case types.crearTrabajadorEmpresa:\n      return {\n        ...state,\n        creado: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const empresaReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.getTodasLasEmpresas:\n      return {\n        ...state,\n        empresas: action.payload,\n      };\n    // case types.crearNuevaEmpresa:\n    //   console.log(action.payload);\n    //   return {\n    //     ...state,\n    //     ultimaCreada: action.payload,\n    //   };\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nexport const equipmentReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.crearEquipoEmpresa:\n            return {\n                ...state,\n                equipo: action.payload\n            }\n        case types.getEquiposIdEmpresa:\n            return {\n                ...state,\n                equipos: [...action.payload]\n            }\n\n        default:\n            return state;\n    }\n\n}\n","import { types } from \"../types/types\";\n\nexport const permisosReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.getPermisosPorVencerTodasLasEmpresas:\n            return {\n                ...state,\n                permisos: [...action.payload],\n            };\n        case types.getTodoExamenesPermisosEquipoID:\n            return {\n                ...state,\n                permisosIdEquipo: [...action.payload]\n            }\n\n        default:\n            return state;\n    }\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nexport const MvcApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MvcApp } from \"./MvcApp\";\n\nReactDOM.render(<MvcApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}